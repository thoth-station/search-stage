{"version":3,"sources":["lib/react-query.ts","styles/Theme.tsx","stores/Global.tsx","components/Footer/Footer.tsx","components/Layout/MainLayout.tsx","components/Layout/AdviseLayout.tsx","providers/app.tsx","components/Elements/TabPanel/TabPanel.tsx","assets/thoth-logo.png","components/Elements/SearchBar/SearchBar.tsx","config/index.ts","features/home/api/postAdvise.ts","features/home/api/getPackageExists.ts","features/home/api/postImageAnalyze.ts","features/home/api/getContainerImages.ts","features/home/components/PackageSearch.tsx","features/home/components/ComboBox/ComboBox.tsx","components/Elements/GenericTable/GenericTable.tsx","features/advise/api/getPackageDependencies.ts","features/advise/api/getAdviseDocument.ts","features/advise/api/getAdviseLogs.ts","utils/timeSince.ts","utils/calcTime.ts","features/home/components/AdviseCreation.tsx","features/home/components/ImageSearch.tsx","features/home/routes/index.tsx","routes/NotFound.tsx","components/Elements/InfoCard/InfoCard.tsx","components/Elements/ProgressBar/ProgressBar.tsx","components/Metrics/DependenciesMetric/DependenciesMetric.tsx","components/Metrics/LicenseMetric/LicenseGroup/LicenseGroup.tsx","components/Metrics/LicenseMetric/LicenseMetric.tsx","components/Metrics/AdviseMetric/AdviseMetric.tsx","features/advise/routes/AdviseSummary.tsx","components/Elements/IconText/IconText.tsx","features/advise/components/AdviseHeader/CustomAlert/CustomAlert.tsx","features/advise/components/AdviseHeader/AdviseHeader.tsx","features/advise/components/AdviseTableView/utils.ts","features/advise/components/AdviseTableView/EnhancedTableHead/EnhancedTableHead.tsx","features/advise/components/AdviseTableView/AdviseTableView.tsx","features/advise/components/LockfileView/LockfileView.tsx","features/advise/components/Popup/Popup.tsx","features/advise/components/NetworkGraphView/NetworkGraphView.tsx","features/advise/components/SelectedPackage/SelectedPackage.tsx","features/advise/routes/AdviseDetails.tsx","features/advise/routes/AdviseCompare.tsx","hooks/metrics/useAdviseMetric.ts","hooks/metrics/useDependencyMetric.ts","hooks/metrics/useLicenseMetric.ts","features/advise/hooks/useMetrics.ts","hooks/useInterval.ts","api/getPackageMetadata.ts","lib/interfaces/Graph.ts","lib/interfaces/Node.ts","hooks/useGraph.ts","features/advise/routes/AdviseNotFound.tsx","components/Layout/NavigationLayout.tsx","features/advise/routes/index.tsx","utils/formatLockfile.ts","features/package/components/ParamDropdown/ParamDropdown.tsx","features/package/components/PackageHeader/PackageHeader.tsx","features/package/components/PackageDependencies/VersionDropdown.tsx","features/package/components/PackageDependencies/PackageDependencies.tsx","features/package/routes/PackageNotFound.tsx","features/package/api/getPackageVersions.ts","features/package/api/getPackageEnvironments.ts","features/package/hooks/useAllVersions.ts","routes/ErrorPage.tsx","features/package/routes/PackageOverview.tsx","features/package/hooks/useSimpleGraph.ts","features/package/routes/index.tsx","features/image/components/ImageHeader/ImageHeader.tsx","features/image/components/DebInfo/DebInfo.tsx","features/image/components/PythonInfo/PythonInfo.tsx","features/image/components/ImageInfo/ImageInfo.tsx","features/image/components/RPMInfo/RPMInfo.tsx","features/image/routes/ImageSummary.tsx","features/image/api/getImageDocument.ts","features/image/api/getImageLogs.ts","features/image/api/getImageMetadata.ts","features/image/routes/ImageNotFound.tsx","features/image/routes/index.tsx","features/image/hooks/useMetrics.ts","features/image/utils/formatImagePackages.ts","routes/RouterConfig.tsx","App.tsx","index.tsx"],"names":["queryClient","QueryClient","defaultOptions","queries","useErrorBoundary","refetchOnWindowFocus","refetchOnMount","retry","themeLight","createTheme","palette","background","default","primary","light","main","dark","secondary","text","typography","fontFamily","h4","fontWeight","fontSize","color","lineHeight","h5","h6","body1","body2","subtitle1","subtitle2","Theme","children","ThemeProvider","theme","CssBaseline","StateContext","React","undefined","reducer","state","action","type","DispatchContext","initState","Global","dispatch","Provider","value","Footer","Box","pb","pt","sx","backgroundColor","textAlign","MainLayout","Stack","direction","justifyContent","style","minHeight","padding","AdviseLayout","header","location","useLocation","currentTab","useMemo","ending","pathname","split","at","Tabs","indicatorColor","textColor","Tab","label","component","RouterLink","to","ErrorFallback","Button","onClick","window","assign","origin","AppProvider","FallbackComponent","client","TabPanel","index","props","role","hidden","id","SearchBar","onEnter","helpertext","boxprops","error","lefticon","righticon","Typography","variant","Paper","p","display","alignItems","borderColor","paddingLeft","paddingRight","InputBase","ml","flex","placeholder","onChange","onKeyPress","ev","key","preventDefault","LOCAL_STORAGE_KEY","THOTH_URL","options","manipulation","enabled","interaction","hover","hoverConnectedEdges","selectConnectedEdges","selectable","edges","chosen","smooth","arrowStrikethrough","arrows","from","nodes","border","shape","size","borderWidth","labelHighlightBold","font","strokeWidth","physics","hierarchicalRepulsion","damping","springLength","solver","minVelocity","postAdvise","pipfile","pipfileLock","runtime_environment","data","application_stack","requirements","requirements_format","requirements_lock","axios","post","params","recommendation_type","limit","headers","accept","getPackageExists","name","a","get","per_page","then","res","versions","length","catch","postImageAnalyze","image","getContainerImages","page","PackageSearch","navigate","useNavigate","useState","searchQuery","setSearchQuery","searchError","setSearchError","handleAnalyze","Grid","container","alignSelf","item","xs","spacing","md","e","target","handleChange","mr","minWidth","filter","createFilterOptions","ComboBox","suggestions","help","required","setValue","suggestions_mapped","map","suggestion","title","Autocomplete","event","newValue","inputValue","filterOptions","filtered","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","option","renderOption","freeSolo","renderInput","TextField","fullWidth","helperText","descendingComparator","b","orderBy","getComparator","order","EnhancedTableHead","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","property","GenericTable","rows","setOrder","setOrderBy","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","max","width","mb","TableContainer","Table","rowCount","TableBody","slice","sort","row","labelId","tabIndex","j","scope","align","IconButton","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","className","CircularProgress","getAdviseDocument","analysis_id","useAdviseDocument","config","useQuery","startsWith","queryKey","queryFn","getAdviseLogs","timeSince","date","startTime","Date","seconds","floor","valueOf","interval","num","calcTime","finished_at","started_at","datetime","loading","payload","param","Error","headCells","lookupType","operating_system_name","operating_system_version","python_version","cuda_version","cudnn_version","mkl_version","openblas_version","openmpi_version","base_image","AdviseCreation","analysis_ids","useReducer","localHistory","ids","localStorage","getItem","s","adviseHistory","useQueries","doc","document_id","metadata","result","report","products","project","os_name","operating_system","os_version","version","status","isValid","valid","Object","keys","forEach","response","includes","Collapse","in","marginRight","mt","marginBottom","multiline","sm","LoadingButton","ImageSearch","images","container_images","image_name","package_extract_document_id","environment_name","Home","mode","setMode","useTheme","matches","useMediaQuery","breakpoints","up","maxWidth","marginLeft","marginTop","alt","src","logo","ToggleButtonGroup","exclusive","newMode","ToggleButton","Divider","NotFound","InfoCard","cardMeta","cardBody","cardAction","Card","CardHeader","subheader","subTitle","CardContent","ProgressBar","total","LinearProgress","root","borderRadius","colorPrimary","bar","DependenciesMetric","metric","totalDependencies","all","direct","indirect","roots","gutterBottom","List","TransitionGroup","entries","t","ListItem","ListItemText","Skeleton","LicenseGroup","packages","totalLicenses","open","setOpen","isOsiApproved","timeout","unmountOnExit","my","depth","k","v","Chip","margin","LicenseMetric","more","setMore","licenses","reduce","sum","val","AdviseMetric","justTotal","values","justification","build","AdviseSummary","metrics","Masonry","columns","advise","dependencies","IconText","icon","link","Link","underline","href","CustomAlert","info","Alert","severity","message","AdviseHeader","adviseDocument","logs","expandAlerts","setExpandAlerts","showLogs","setShowLogs","selectedLine","setSelectedLine","ERROR","toUpperCase","statusText","statusColor","alerts","stack_info","alert","toLowerCase","parameters","line","i","noWrap","error_msg","stableSort","array","comparator","stabilizedThis","el","numeric","visuallyHidden","AdviseTableView","search","graph","setRows","useContext","SelectedPackageContext","setSelected","console","log","selected","useEffect","newRows","node","warnings","license","License","adjacents","summary","Summary","Fragment","paddingBottom","paddingTop","Popup","latestVersion","NetworkGraph","visJsRef","useRef","selectedNode","findAllNodesOnAllPaths","app_node","set","convertedNodes","DataSet","popup","document","createElement","ReactDOM","render","add","visData","visEdges","network","current","Network","networkCanvas","getElementById","getElementsByTagName","changeCursor","newCursorStyle","cursor","on","flexFlow","ref","SelectedPackage","selectedPackage","dependents","deps","parents","justifications","justs","just","showError","reasons","reason","dep","NetworkGraphView","createContext","AdviseDetails","setSearch","AdviseCompare","comparison","setComparison","compareDoc","importText","setImportText","handleClose","history","requirements_locked","COMPARE_COLORS","old","new","change","equal","comparePaths","obj1","obj2","mapping","obj","obj1_mapped","obj2_mapped","renderCompareLine","compareType","borderStyles","borderLeft","borderRight","overflow","doubleRenderTypography","styleOverrides","headerStyles","compareArrays","array1","array2","s1","JSON","stringify","s2","set1","Set","set2","merged","parse","has","createProjectCompare","proj1","proj2","dev_packages","_meta","sources","url","field","hardware","cpu_model","cpu_family","gpu_model","trim","createCompare","doc1","doc2","arguments","distribution","os_release","python","major","minor","micro","api_version","implementation_name","releaselevel","accepted_final_states_count","discarded_final_states_count","resolver_iterations","pipeline","advised_manifest_changes","patch","path","op","compareJSX","borderTop","borderBottom","Dialog","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","flexWrap","DialogActions","setItem","join","handleImport","columnSpacing","textOverflow","whiteSpace","marginX","FormControl","Select","displayEmpty","MenuItem","disabled","useDependencyMetric","setMetric","base","visited","rootObj","bfs","graphSearch","Array","useLicenseMetric","packageLicenses","Classifier","classifier","parsed","generalLicense","specificLicense","specific","useMetrics","adviseMetric","analyzer","analyzer_version","useAdviseMetric","dependencyMetric","licenseMetric","getPackageMetadata","usePackagesMetadata","Graph","this","Map","Node","source","destination","sourceNode","destinationNode","addAdjacent","first","visitList","pop","shift","getAdjacents","adj","newPath","nextPath","findPath","destinationKey","parent","paths","findAllPaths","useGraph","knownRoots","allMetadata","isLoading","some","query","tempGraph","notRoot","addVertex","isSuccess","package_name","package_version","importlib_metadata","currentNode","adjacentNode","addEdge","app","justifiedPackages","adjs","min","visGraphEdges","AdviseNotFound","NavigationLayout","goHome","AdviseRoutes","useParams","refetchInterval","useAdviseLogs","lockfile","replace","formatLockfile","element","ParamDropdown","SpecContext","specs","defaultSpecs","encodeURIComponent","index_url","renderValue","PackageHeader","allVersions","allEnvironments","showEnvParams","setShowEnvParams","versionOptions","dups","indexUrlOptions","env","osNameOptions","osVersionOptions","pythonVersionOptions","Name","VersionDropdown","anchorEl","setAnchorEl","noDup","currentKey","buckets","ceil","fixedOptions","currentTarget","endIcon","specifier","Menu","PaperProps","maxHeight","alignContent","divider","PackageDependencies","visitedOrder","extra","rowSpacing","PackageNotFound","getPackageVersions","getPackageEnvironments","useAllVersions","useInfiniteQuery","input","pageParam","getNextPageParam","lastPage","setAllVersions","hasNextPage","isFetchingNextPage","fetchNextPage","pages","reverse","ErrorPage","PackageOverview","setDefaultSpecs","decodeURIComponent","d","environments","usePackageMetadata","setGraph","useSimpleGraph","PackageRoutes","ImageHeader","imageDocument","headerName","DebInfo","disableSelectionOnClick","disableColumnSelector","hideFooterSelectedRowCount","getRowId","package_identifier","density","pageSize","PythonInfo","files","file","filepath","interpreters","interpreter","prev","cur","lg","xl","ImageInfo","imageMetadata","architecture","Architecture","created","Created","digest","Digest","docker_version","DockerVersion","labels","Labels","layers","Layers","os","Os","repo_tags","RepoTags","description","vendor","maintainer","toLocaleDateString","usage","valueGetter","sortable","RPMInfo","ImageSummary","deb","getImageDocument","getImageLogs","getImageMetadata","ImageNotFound","ImageRoutes","useImageDocument","useImageLogs","version_id","image_packages","formatImagePackages","RouterConfig","basename","App","StrictMode"],"mappings":"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","file":"static/js/main.de5c907c.chunk.js","sourcesContent":["import { QueryClient } from \"react-query\";\n\nconst queryConfig = {\n    queries: {\n        useErrorBoundary: true,\n        refetchOnWindowFocus: false,\n        refetchOnMount: false,\n        retry: false,\n    },\n};\n\nexport const queryClient = new QueryClient({ defaultOptions: queryConfig });\n","import React from \"react\";\n\n// material ui\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { createTheme } from \"@mui/material/styles\";\n\nconst themeLight = createTheme({\n    palette: {\n        background: {\n            default: \"#f9f9f9\",\n        },\n        primary: {\n            light: \"#f5a733\",\n            main: \"#f39200\",\n            dark: \"#aa6600\",\n        },\n        secondary: {\n            light: \"#72cdee\",\n            main: \"#4fc1ea\",\n            dark: \"#3787a3\",\n        },\n        text: {\n            primary: \"#363636\",\n            secondary: \"#999\",\n        },\n    },\n    typography: {\n        fontFamily: \"open sans, sans-serif\",\n        h4: {\n            fontWeight: 700,\n            fontSize: \"3rem\",\n            color: \"#363636\",\n            lineHeight: 1.125,\n        },\n        h5: {\n            fontWeight: 600,\n            fontSize: \"2rem\",\n            lineHeight: 1.125,\n            color: \"#363636\",\n        },\n        h6: {\n            fontWeight: 600,\n            fontSize: \"1.2rem\",\n            color: \"#444f60\",\n            lineHeight: 1.5,\n        },\n\n        body1: {\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.25,\n            color: \"#000\",\n        },\n\n        body2: {\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            color: \"#000\",\n        },\n        subtitle1: {\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.25,\n            color: \"#999\",\n        },\n\n        subtitle2: {\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            color: \"#999\",\n        },\n    },\n});\n\ninterface ITheme {\n    children?: JSX.Element;\n}\n\nfunction Theme({ children }: ITheme) {\n    return (\n        <ThemeProvider theme={themeLight}>\n            <CssBaseline />\n            {children}\n        </ThemeProvider>\n    );\n}\n\nexport default Theme;\n","import * as React from \"react\";\n\ninterface IGlobal {\n    children?: JSX.Element;\n}\n\nexport interface GlobalState {\n    notifications?: string[];\n}\n\nexport interface GlobalAction {\n    type: string;\n    payload: never;\n}\n\nexport const StateContext = React.createContext<GlobalState | undefined>(\n    undefined,\n);\n\nfunction reducer(state: GlobalState, action: GlobalAction) {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\nexport const DispatchContext = React.createContext<\n    React.Dispatch<GlobalAction> | undefined\n>(undefined);\n\nconst initState: GlobalState = {};\n\nexport default function Global({ children }: IGlobal) {\n    // for state control\n    const [state, dispatch] = React.useReducer(reducer, initState);\n    return (\n        <StateContext.Provider value={state}>\n            <DispatchContext.Provider value={dispatch}>\n                {children}\n            </DispatchContext.Provider>\n        </StateContext.Provider>\n    );\n}\n","import React from \"react\";\n\nimport { Box } from \"@mui/material\";\n\nexport const Footer = () => {\n    return (\n        <Box\n            pb={3}\n            pt={6}\n            sx={{\n                backgroundColor: \"#444f60\",\n                textAlign: \"center\",\n                color: \"white\",\n            }}\n        >\n            This is a footer\n        </Box>\n    );\n};\n","import * as React from \"react\";\nimport { Footer } from \"../Footer\";\nimport { Stack } from \"@mui/material\";\n\ninterface IProps {\n    children: React.ReactNode;\n}\n\n/**\n * Main layout adds margins and spacing to the whole app.\n */\nexport const MainLayout = ({ children }: IProps) => {\n    return (\n        <Stack direction=\"column\" justifyContent=\"flex-start\">\n            <div\n                style={{ minHeight: \"100vh\", padding: \"1.5rem 4rem 9rem 4rem\" }}\n            >\n                {children}\n            </div>\n            <Footer />\n        </Stack>\n    );\n};\n","import * as React from \"react\";\nimport { Tab, Tabs } from \"@mui/material\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport { useMemo } from \"react\";\n\ninterface IProps {\n    children: React.ReactNode;\n    header: React.ReactNode;\n}\n\n/**\n * A layout used for the advise feature tabs. It formats the tabs as router links.\n */\nexport const AdviseLayout = ({ children, header }: IProps) => {\n    const location = useLocation();\n\n    const currentTab = useMemo(() => {\n        const ending = location.pathname.split(\"/\").at(-1);\n        if (\n            ending === \"summary\" ||\n            ending === \"details\" ||\n            ending === \"compare\"\n        ) {\n            return ending;\n        } else {\n            return \"summary\";\n        }\n    }, [location.pathname]);\n\n    return (\n        <>\n            <div>\n                {header}\n                <Tabs\n                    value={currentTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab\n                        label=\"Summary\"\n                        value={\"summary\"}\n                        component={RouterLink}\n                        to=\"summary\"\n                    />\n                    <Tab\n                        label=\"Details\"\n                        value={\"details\"}\n                        component={RouterLink}\n                        to=\"details\"\n                    />\n                    <Tab\n                        label=\"Compare\"\n                        value={\"compare\"}\n                        component={RouterLink}\n                        to=\"compare\"\n                    />\n                </Tabs>\n            </div>\n            <div>{children}</div>\n        </>\n    );\n};\n","import * as React from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { QueryClientProvider } from \"react-query\";\nimport { queryClient } from \"lib/react-query\";\nimport { Button } from \"@mui/material\";\nimport Theme from \"styles/Theme\";\nimport Global from \"stores/Global\";\nimport { MainLayout } from \"components/Layout\";\n\ninterface IAppProvider {\n    children?: JSX.Element;\n}\n\nconst ErrorFallback = () => {\n    return (\n        <div>\n            <h2>Oops, something went wrong :( </h2>\n            <Button\n                onClick={() => window.location.assign(window.location.origin)}\n            >\n                Refresh\n            </Button>\n        </div>\n    );\n};\n\nexport const AppProvider: React.FC<IAppProvider> = ({ children }) => {\n    return (\n        <Theme>\n            <Global>\n                <ErrorBoundary FallbackComponent={ErrorFallback}>\n                    <QueryClientProvider client={queryClient}>\n                        <MainLayout>{children}</MainLayout>\n                    </QueryClientProvider>\n                </ErrorBoundary>\n            </Global>\n        </Theme>\n    );\n};\n","import React from \"react\";\n\ninterface IProps extends React.ComponentPropsWithoutRef<\"div\"> {\n    children: React.ReactNode;\n    /** The unique identifier of the tab. */\n    index: string | number;\n    /** The state variable passed in from the parent which is compared to the index */\n    value: string | number;\n}\n\n/**\n * A tab panel used to encapsulate different tab content.\n */\nconst TabPanel = ({ children, value, index, ...props }: IProps) => {\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...props}\n        >\n            {value === index && children}\n        </div>\n    );\n};\n\nexport default TabPanel;\n","export default __webpack_public_path__ + \"static/media/thoth-logo.1a28a729.png\";","import React from \"react\";\n\n// material ui\nimport {\n    Typography,\n    Box,\n    Paper,\n    InputBase,\n    InputBaseProps,\n} from \"@mui/material\";\nimport { SxProps } from \"@mui/system\";\n\ninterface IProps extends InputBaseProps {\n    /** The error text or default label text */\n    label?: string;\n    /** callback function when textbox ENTER is pressed */\n    onEnter?: () => void;\n    /** helper text for the search bar */\n    helpertext?: string;\n    /** if there is an error or not */\n    error?: boolean;\n    /** icon displayed on the left of the text box */\n    lefticon?: React.ReactNode;\n    /** icon displayed on the right of the text box */\n    righticon?: React.ReactNode;\n    /** Props added to the text box */\n    boxprops?: SxProps;\n}\n\n/**\n *\n */\nconst SearchBar = ({\n    onEnter,\n    label,\n    helpertext,\n    boxprops,\n    error = false,\n    lefticon,\n    righticon,\n    ...props\n}: IProps) => {\n    return (\n        <Box>\n            <Typography\n                variant={\"body1\"}\n                sx={{ color: error ? \"error.main\" : \"text.secondary\" }}\n            >\n                {label}\n            </Typography>\n            <Paper\n                component=\"form\"\n                variant=\"outlined\"\n                sx={{\n                    p: \"8px 4px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    borderColor: error ? \"red\" : undefined,\n                    paddingLeft: 2,\n                    paddingRight: 2,\n                    ...boxprops,\n                }}\n            >\n                {lefticon}\n                <InputBase\n                    sx={{ ml: 1, flex: 1 }}\n                    placeholder={helpertext}\n                    error={error}\n                    onChange={props.onChange}\n                    onKeyPress={ev => {\n                        if (onEnter && ev.key === \"Enter\") {\n                            onEnter();\n                            ev.preventDefault();\n                        }\n                    }}\n                    {...props}\n                />\n                {righticon}\n            </Paper>\n        </Box>\n    );\n};\n\nexport default SearchBar;\n","const useProd = true;\nexport const LOCAL_STORAGE_KEY = \"THOTH_SEARCH_ADVISE_HISTORY\";\nexport const THOTH_URL =\n    !useProd &&\n    (process.env.REACT_APP_DEPLOYMENT === \"STAGE\" ||\n        process.env.NODE_ENV === \"development\")\n        ? \"https://stage.thoth-station.ninja/api/v1\"\n        : \"https://khemenu.thoth-station.ninja/api/v1\";\n\n/**\n * used for vis-js graph render engine\n */\nexport const options = {\n    manipulation: {\n        enabled: false,\n    },\n    interaction: {\n        hover: true,\n        hoverConnectedEdges: false,\n        selectConnectedEdges: false,\n        selectable: true,\n    },\n    edges: {\n        chosen: false,\n        smooth: false,\n        color: {\n            color: \"#5c6470\",\n        },\n        arrowStrikethrough: false,\n        arrows: {\n            from: {\n                enabled: true,\n                type: \"triangle\",\n            },\n        },\n    },\n\n    nodes: {\n        chosen: false,\n        color: {\n            background: \"#5c6470\",\n            border: \"#fff\",\n            hover: {\n                background: \"#f39200\",\n                border: \"#fff\",\n            },\n        },\n        shape: \"dot\",\n        size: 10,\n        borderWidth: 2,\n        labelHighlightBold: false,\n        font: {\n            color: \"#393e46\",\n            strokeWidth: 2,\n            size: 15,\n        },\n    },\n    physics: {\n        hierarchicalRepulsion: {\n            damping: 0.1,\n            springLength: 200,\n        },\n        solver: \"hierarchicalRepulsion\",\n        minVelocity: 0.15,\n    },\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/advise/python\"][\"post\"];\ntype requestBody = path[\"requestBody\"][\"content\"][\"application/json\"];\ntype requestResponseSuccess =\n    path[\"responses\"][\"202\"][\"content\"][\"application/json\"];\n\nexport const postAdvise = (\n    pipfile: requestBody[\"application_stack\"][\"requirements\"],\n    pipfileLock: requestBody[\"application_stack\"][\"requirements_lock\"],\n    runtime_environment: requestBody[\"runtime_environment\"],\n) => {\n    const data = {\n        application_stack: {\n            requirements: pipfile,\n            requirements_format: \"pipenv\",\n            requirements_lock: pipfileLock,\n        },\n        runtime_environment: runtime_environment,\n    };\n\n    return axios.post<requestResponseSuccess>(\n        THOTH_URL + \"/advise/python\",\n        data,\n        {\n            params: {\n                recommendation_type: \"stable\",\n                limit: 500,\n            },\n            headers: {\n                accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        },\n    );\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/versions\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\n\nexport const getPackageExists = async (name: requestParams[\"name\"]) => {\n    return axios\n        .get<requestResponseSuccess>(THOTH_URL + \"/python/package/versions\", {\n            params: {\n                name: name,\n                per_page: 1,\n            },\n            headers: {\n                accept: \"application/json\",\n            },\n        })\n        .then(res => {\n            return res.data.versions.length > 0;\n        })\n        .catch(() => false);\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"../../../lib/schema\";\n\ntype path = paths[\"/analyze\"][\"post\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess =\n    path[\"responses\"][\"202\"][\"content\"][\"application/json\"];\n\nexport const postImageAnalyze = (image: requestParams[\"image\"]) => {\n    return axios.post<requestResponseSuccess>(\n        THOTH_URL + \"/analyze\",\n        {},\n        {\n            params: {\n                image: image,\n            },\n            headers: {\n                accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        },\n    );\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useInfiniteQuery, useQuery } from \"react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/container-images\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure =\n    path[\"responses\"][\"400\"][\"content\"][\"application/json\"];\n\nexport const getContainerImages = async (\n    page: requestParams[\"page\"] = 0,\n    per_page: requestParams[\"per_page\"] = 100,\n) => {\n    return axios.get<requestResponseSuccess>(THOTH_URL + \"/container-images\", {\n        params: {\n            page: page,\n            per_page: per_page,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useContainerImages = (config: { [key: string]: unknown }) => {\n    return useQuery<\n        AxiosResponse<requestResponseSuccess>,\n        AxiosError<requestResponseFailure>\n    >({\n        ...config,\n        queryKey: [\"container-images\"],\n        queryFn: () => getContainerImages(),\n    });\n};\n\nexport const useInfiniteContainerImages = (config: {\n    [key: string]: unknown;\n}) => {\n    return useInfiniteQuery<\n        AxiosResponse<requestResponseSuccess>,\n        AxiosError<requestResponseFailure>\n    >({\n        ...config,\n        queryKey: [\"container-images\"],\n        queryFn: input => {\n            return getContainerImages(input.pageParam);\n        },\n        getNextPageParam: (lastPage: AxiosResponse<requestResponseSuccess>) => {\n            return lastPage.data.container_images.length === 0\n                ? undefined\n                : lastPage.data.parameters.page + 1;\n        },\n    });\n};\n","import { Button, Grid, Typography } from \"@mui/material\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPackageExists } from \"../api\";\n\nexport const PackageSearch = () => {\n    const navigate = useNavigate();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [searchError, setSearchError] = useState(\"\");\n\n    const handleAnalyze = async () => {\n        // if no query\n        if (searchQuery === \"\") {\n            return;\n        }\n\n        const exists = await getPackageExists(searchQuery);\n\n        if (exists) {\n            navigate(\"/package/\" + searchQuery);\n        } else {\n            setSearchError(\"Thoth does not know about that package\");\n        }\n    };\n\n    const handleChange = (\n        e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n        setSearchQuery(e.target.value);\n        if (searchError !== \"\") {\n            setSearchError(\"\");\n        }\n    };\n\n    return (\n        <Grid container justifyContent=\"center\">\n            <Grid alignSelf=\"flex-start\" item xs={12}>\n                <Typography\n                    color=\"error\"\n                    variant=\"body1\"\n                    sx={{ minHeight: 30 }}\n                >\n                    {searchError ?? \"\"}\n                </Typography>\n            </Grid>\n            <Grid container spacing={2} item xs={12}>\n                <Grid item xs={12} md={10}>\n                    <SearchBar\n                        error={searchError !== \"\"}\n                        onChange={e => handleChange(e)}\n                        helpertext={\"Search for a Python package\"}\n                        type=\"search\"\n                        boxprops={{ mr: 2 }}\n                        lefticon={<SearchRoundedIcon />}\n                        onEnter={handleAnalyze}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => handleAnalyze()}\n                        sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                    >\n                        <b>Analyze</b>\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport { useMemo } from \"react\";\n\ninterface IComboBox {\n    suggestions: string[];\n    label: string;\n    help: string;\n    required: boolean;\n    error: boolean;\n    value: string | { title: string; inputValue?: string };\n    setValue: (e: { title: string; inputValue?: string } | null) => void;\n}\n\nconst filter = createFilterOptions<{ title: string; inputValue?: string }>();\n\nexport default function ComboBox({\n    suggestions,\n    label,\n    help,\n    required,\n    error,\n    value,\n    setValue,\n}: IComboBox) {\n    const suggestions_mapped = useMemo<\n        { title: string; inputValue?: string }[]\n    >(() => {\n        return suggestions.map(suggestion => {\n            return {\n                title: suggestion,\n            };\n        });\n    }, [suggestions]);\n\n    return (\n        <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n                if (typeof newValue === \"string\") {\n                    setValue({ title: newValue });\n                } else if (newValue && newValue.inputValue) {\n                    // Create a new value from the user input\n                    setValue({ title: newValue.inputValue });\n                } else {\n                    setValue(newValue);\n                }\n            }}\n            filterOptions={(options, params) => {\n                const filtered = filter(options, params);\n\n                if (params.inputValue !== \"\") {\n                    filtered.push({\n                        inputValue: params.inputValue,\n                        title: `Add \"${params.inputValue}\"`,\n                    });\n                }\n\n                return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={suggestions_mapped ?? []}\n            getOptionLabel={option => {\n                // Value selected with enter, right from the input\n                if (typeof option === \"string\") {\n                    return option;\n                }\n                // Add \"xxx\" option created dynamically\n                if (option.inputValue) {\n                    return option.inputValue;\n                }\n                // Regular option\n                return option.title;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.title}</li>}\n            freeSolo\n            renderInput={params => (\n                <TextField\n                    {...params}\n                    fullWidth\n                    label={label}\n                    required={required}\n                    error={error}\n                    helperText={help}\n                />\n            )}\n        />\n    );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Paper from \"@mui/material/Paper\";\nimport ArrowForwardRoundedIcon from \"@mui/icons-material/ArrowForwardRounded\";\nimport { IconButton } from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\n\nfunction descendingComparator(\n    a: { [key: string]: any },\n    b: { [key: string]: any },\n    orderBy: string,\n) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order: \"desc\" | \"asc\", orderBy: string) {\n    return order === \"desc\"\n        ? (a: { [key: string]: any }, b: { [key: string]: any }) =>\n              descendingComparator(a, b, orderBy)\n        : (a: { [key: string]: any }, b: { [key: string]: any }) =>\n              -descendingComparator(a, b, orderBy);\n}\n\ninterface IGenericTable {\n    headers: {\n        id: string;\n        label: string;\n    }[];\n    rows: { [key: string]: unknown }[];\n    action?: (row: any) => void;\n}\n\ninterface IEnhancedTableHead {\n    order: \"asc\" | \"desc\";\n    orderBy: IGenericTable[\"headers\"][number][\"id\"];\n    onRequestSort: (property: IGenericTable[\"headers\"][number][\"id\"]) => void;\n    rowCount: number;\n    headers: IGenericTable[\"headers\"];\n}\n\nfunction EnhancedTableHead(props: IEnhancedTableHead) {\n    const { order, orderBy, onRequestSort, headers } = props;\n    const createSortHandler = (property: typeof headers[number][\"id\"]) => {\n        onRequestSort(property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headers.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={() => createSortHandler(headCell.id)}\n                        >\n                            <b>{headCell.label}</b>\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n                <TableCell />\n            </TableRow>\n        </TableHead>\n    );\n}\n\nexport default function GenericTable({ headers, rows, action }: IGenericTable) {\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState<typeof headers[number][\"id\"]>(\n        headers[0].id,\n    );\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleRequestSort = (property: typeof headers[number][\"id\"]) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (\n        event: any,\n        newPage: React.SetStateAction<number>,\n    ) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: { target: { value: string } }) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    if (!rows) {\n        return (\n            <div className=\"w-full h-48 flex justify-center items-center\">\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <Paper sx={{ width: \"100%\", mb: 2 }}>\n                <TableContainer>\n                    <Table sx={{ minWidth: 750 }} size=\"medium\">\n                        <EnhancedTableHead\n                            order={order as IEnhancedTableHead[\"order\"]}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                            headers={headers}\n                        />\n                        <TableBody>\n                            {rows\n                                .slice()\n                                .sort(\n                                    getComparator(\n                                        order as IEnhancedTableHead[\"order\"],\n                                        orderBy,\n                                    ),\n                                )\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage,\n                                )\n                                .map((row, index) => {\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            tabIndex={-1}\n                                            key={index}\n                                        >\n                                            {headers.map((header, j) => {\n                                                if (j === 0) {\n                                                    return (\n                                                        <TableCell\n                                                            component=\"th\"\n                                                            id={labelId}\n                                                            scope=\"row\"\n                                                        >\n                                                            {\n                                                                row[\n                                                                    header.id\n                                                                ] as string\n                                                            }\n                                                        </TableCell>\n                                                    );\n                                                } else {\n                                                    return (\n                                                        <TableCell align=\"left\">\n                                                            {\n                                                                row[\n                                                                    header.id\n                                                                ] as string\n                                                            }\n                                                        </TableCell>\n                                                    );\n                                                }\n                                            })}\n\n                                            {action ? (\n                                                <TableCell align=\"right\">\n                                                    <IconButton\n                                                        onClick={() =>\n                                                            action(row)\n                                                        }\n                                                    >\n                                                        <ArrowForwardRoundedIcon />\n                                                    </IconButton>\n                                                </TableCell>\n                                            ) : undefined}\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: 53 * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </Box>\n    );\n}\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQueries, useQuery } from \"react-query\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/dependencies\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure =\n    path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\nexport const getPackageDependencies = (\n    name: requestParams[\"name\"],\n    version: requestParams[\"version\"],\n    index: requestParams[\"index\"] = \"https://pypi.org/simple\",\n) => {\n    return axios.get<requestResponseSuccess>(\n        THOTH_URL + \"/python/package/dependencies\",\n        {\n            params: {\n                name: name,\n                version: version,\n                index: index,\n            },\n            headers: {\n                accept: \"application/json\",\n            },\n        },\n    );\n};\n\nexport const usePackageDependencies = (\n    name: requestParams[\"name\"],\n    version: requestParams[\"version\"],\n    config: { [key: string]: unknown },\n) => {\n    return useQuery<\n        AxiosResponse<requestResponseSuccess>,\n        AxiosError<requestResponseFailure>\n    >({\n        ...config,\n        queryKey: [\"packageDependencies\", name, version],\n        queryFn: () => getPackageDependencies(name, version),\n    });\n};\n\nexport const usePackagesDependencies = (\n    packages: {\n        name: requestParams[\"name\"];\n        version: requestParams[\"version\"];\n    }[],\n    config: { [key: string]: unknown },\n) => {\n    return useQueries(\n        packages.map(p => {\n            return {\n                ...config,\n                queryKey: [\"packageDependencies\", p.name, p.version],\n                queryFn: () => getPackageDependencies(p.name, p.version),\n            };\n        }),\n    );\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQueries, useQuery } from \"react-query\";\nimport { paths } from \"lib/schema\";\nimport { UseQueryResult } from \"react-query/types/react/types\";\n\ntype path = paths[\"/advise/python/{analysis_id}\"][\"get\"];\nexport type AdviseDocumentRequestParams = path[\"parameters\"][\"path\"];\nexport type AdviseDocumentRequestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"] &\n        path[\"responses\"][\"202\"][\"content\"][\"application/json\"];\ntype requestResponseFailure =\n    path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n        path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n/**\n * An async function that returns a promise for `{base_url}/advise/python`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseDocument = (\n    analysis_id?: AdviseDocumentRequestParams[\"analysis_id\"],\n) => {\n    return axios.get<AdviseDocumentRequestResponseSuccess>(\n        THOTH_URL + \"/advise/python/\" + analysis_id,\n        {\n            headers: {\n                accept: \"application/json\",\n            },\n        },\n    );\n};\n\nexport const useAdviseDocument = (\n    analysis_id?: AdviseDocumentRequestParams[\"analysis_id\"],\n    config?: { [key: string]: unknown },\n): UseQueryResult<\n    AxiosResponse<AdviseDocumentRequestResponseSuccess>,\n    AxiosError<requestResponseFailure>\n> => {\n    return useQuery({\n        ...config,\n        enabled: !!analysis_id && analysis_id.startsWith(\"adviser\"),\n        queryKey: [\"adviseDocument\", analysis_id],\n        queryFn: () => getAdviseDocument(analysis_id),\n    });\n};\n\nexport const useAdviseDocuments = (\n    analysis_ids: AdviseDocumentRequestParams[\"analysis_id\"][],\n    config?: { [key: string]: unknown },\n): UseQueryResult<\n    AxiosResponse<AdviseDocumentRequestResponseSuccess>,\n    AxiosError<requestResponseFailure>\n>[] => {\n    return useQueries(\n        analysis_ids.map(id => {\n            return {\n                ...config,\n                queryKey: [\"adviseDocument\", id],\n                queryFn: () => getAdviseDocument(id),\n            };\n        }),\n    ) as UseQueryResult<\n        AxiosResponse<AdviseDocumentRequestResponseSuccess>,\n        AxiosError<requestResponseFailure>\n    >[];\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/advise/python/{analysis_id}/log\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"path\"];\ntype requestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure =\n    path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n        path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n/**\n * An async function that returns a promise for `{base_url}/advise/python/logs`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseLogs = async (\n    analysis_id?: requestParams[\"analysis_id\"],\n) => {\n    return axios.get<requestResponseSuccess>(\n        THOTH_URL + \"/advise/python/\" + analysis_id + \"/log\",\n        {\n            headers: {\n                accept: \"application/json\",\n            },\n        },\n    );\n};\n\nexport const useAdviseLogs = (\n    analysis_id?: requestParams[\"analysis_id\"],\n    config?: { [key: string]: unknown },\n) => {\n    return useQuery<\n        AxiosResponse<requestResponseSuccess>,\n        AxiosError<requestResponseFailure>\n    >({\n        ...config,\n        queryKey: [\"adviseLogs\", analysis_id],\n        queryFn: () => getAdviseLogs(analysis_id),\n    });\n};\n","/**\n * Get the time between now and a date in a string format.\n *\n * @param date\n */\nexport default function timeSince(date: Date) {\n    const startTime = new Date();\n    const seconds = Math.floor((startTime.valueOf() - date.valueOf()) / 1000);\n\n    let interval = seconds / 3.154e7;\n\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" year\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 2.628e6;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" month\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" day\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" hour\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" minute\" + (num !== 1 ? \"s\" : \"\");\n    }\n    const num = Math.floor(seconds);\n\n    return num + \" second\" + (num !== 1 ? \"s\" : \"\");\n}\n","import timeSince from \"utils/timeSince\";\n\n/**\n * Given either a date and time, calculated time since that date.\n * This is used to calculate how long ago an Advisor document was generated or has been generating.\n * It is specific to the document formatting\n *\n * @param finished_at - for when the advise document is completed\n * @param started_at - the time at which the document was started (is preceded by finished at)\n * @param datetime - fallback to datetime\n * @returns {string} - English version of date\n */\nexport const calcTime = (\n    finished_at?: string | null,\n    started_at?: string | null,\n    datetime?: string | null,\n) => {\n    // if status says finished\n    if (finished_at) {\n        return \"Advise finished \" + timeSince(new Date(finished_at)) + \" ago.\";\n    }\n    // if status is pending\n    else if (started_at) {\n        return \"Advise started \" + timeSince(new Date(started_at)) + \" ago.\";\n    }\n    // if status is nulled so use metadata end date\n    else if (datetime) {\n        return (\n            \"Advise finished \" + timeSince(new Date(datetime + \"Z\")) + \" ago.\"\n        );\n    } else {\n        return \"Time started/finished not available\";\n    }\n};\n","import {\n    Button,\n    Collapse,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n} from \"@mui/material\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport React, { useMemo, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { postAdvise } from \"../api\";\nimport ComboBox from \"./ComboBox/ComboBox\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport { components } from \"lib/schema\";\nimport GenericTable from \"../../../components/Elements/GenericTable/GenericTable\";\nimport { useAdviseDocuments } from \"../../advise/api\";\nimport { LOCAL_STORAGE_KEY } from \"../../../config\";\nimport { calcTime } from \"../../../utils/calcTime\";\n\ninterface IAdviseState {\n    error: { [key: string]: string | undefined };\n    id?: string;\n    pipfile?: string;\n    pipfileLock?: string;\n    loading: boolean;\n    lookupType: string;\n    operating_system_name: string;\n    operating_system_version: string;\n    python_version: string;\n    cuda_version: string;\n    cudnn_version: string;\n    mkl_version: string;\n    name: string;\n    openblas_version: string;\n    openmpi_version: string;\n    base_image: string;\n}\n\nfunction reducer(state: IAdviseState, action: { [key: string]: any }) {\n    switch (action.type) {\n        case \"loading\":\n            return { ...state, loading: action.payload };\n        case \"error\":\n            return {\n                ...state,\n                error: { ...state.error, [action.param]: action.payload },\n            };\n        case \"clear-error\":\n            state.error = {};\n            return state;\n        case \"input\":\n            return {\n                ...state,\n                [action.param]: action.payload,\n                error: { ...state.error, [action.param]: undefined },\n            };\n        default:\n            throw new Error(\"Advise state dispatch error\");\n    }\n}\n\nconst headCells = [\n    {\n        id: \"document_id\",\n        label: \"Document ID\",\n    },\n    {\n        id: \"status\",\n        label: \"Status\",\n    },\n    {\n        id: \"name\",\n        label: \"Name\",\n    },\n    {\n        id: \"os_name\",\n        label: \"OS Name\",\n    },\n    {\n        id: \"os_version\",\n        label: \"OS Version\",\n    },\n    {\n        id: \"python_version\",\n        label: \"Python Version\",\n    },\n    {\n        id: \"date\",\n        label: \"Last Run\",\n    },\n];\n\nexport const initState: IAdviseState = {\n    error: {},\n    loading: false,\n    lookupType: \"id\",\n    operating_system_name: \"ubi\",\n    operating_system_version: \"8\",\n    python_version: \"3.8\",\n    cuda_version: \"\",\n    cudnn_version: \"\",\n    mkl_version: \"\",\n    name: \"\",\n    openblas_version: \"\",\n    openmpi_version: \"\",\n    base_image: \"\",\n};\n\nexport const AdviseCreation = () => {\n    const navigate = useNavigate();\n    const [state, dispatch] = useReducer(reducer, initState);\n\n    const localHistory: string[] = useMemo(() => {\n        const ids = localStorage.getItem(LOCAL_STORAGE_KEY);\n        if (ids) {\n            return ids.split(\",\").filter(s => s !== \"\");\n        } else {\n            return [];\n        }\n    }, []);\n\n    const adviseHistory = useAdviseDocuments(localHistory);\n\n    const rows = useMemo(() => {\n        if (adviseHistory) {\n            return adviseHistory.map(doc => {\n                const status = () => {\n                    if (doc.data?.data?.status) {\n                        return doc.data?.data?.status.state;\n                    } else if (doc.data?.data.result.report?.products) {\n                        return \"success\";\n                    } else {\n                        return \"error\";\n                    }\n                };\n                return {\n                    document_id: doc.data?.data.metadata.document_id,\n                    name: doc.data?.data.result.report?.products?.[0].project\n                        .runtime_environment?.name,\n                    os_name:\n                        doc.data?.data.result.report?.products?.[0].project\n                            .runtime_environment?.operating_system?.name,\n                    os_version:\n                        doc.data?.data.result.report?.products?.[0].project\n                            .runtime_environment?.operating_system?.version,\n                    python_version:\n                        doc.data?.data.result.report?.products?.[0].project\n                            .runtime_environment?.python_version,\n                    status: status(),\n                    date: calcTime(\n                        doc.data?.data?.status?.finished_at,\n                        doc.data?.data?.status?.started_at,\n                        doc.data?.data?.metadata?.datetime,\n                    ),\n                };\n            });\n        } else {\n            return [];\n        }\n    }, [adviseHistory]);\n\n    const tableRowAction = (row: { document_id: string }) => {\n        navigate(\"/advise/\" + row.document_id);\n    };\n\n    const isValid = () => {\n        if (state.lookupType === \"id\") {\n            if (!state.id || state.id === \"\") {\n                dispatch({\n                    type: \"error\",\n                    param: \"id\",\n                    payload: \"Field cant be empty\",\n                });\n                return false;\n            }\n        } else {\n            let valid = true;\n            if (!state.pipfile) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"pipfile\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n            if (!state.pipfileLock) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"pipfileLock\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n            if (!state.name) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"name\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n\n            return valid;\n        }\n\n        return true;\n    };\n\n    const handleAnalyze = async () => {\n        if (state.loading || !isValid()) {\n            return;\n        }\n\n        if (state.lookupType === \"id\") {\n            navigate(\"/advise/\" + state.id);\n        } else {\n            dispatch({ type: \"loading\", payload: true });\n            const runtime_environment: components[\"schemas\"][\"RuntimeEnvironment\"] =\n                {\n                    operating_system: {\n                        name: state.operating_system_name,\n                        version: state.operating_system_version,\n                    },\n                    python_version: state.python_version,\n                    base_image: state.base_image,\n                    cuda_version: state.cuda_version,\n                    cudnn_version: state.cudnn_version,\n                    mkl_version: state.mkl_version,\n                    name: state.name,\n                    openblas_version: state.openblas_version,\n                    openmpi_version: state.openmpi_version,\n                };\n\n            (\n                Object.keys(runtime_environment) as Array<\n                    keyof typeof runtime_environment\n                >\n            ).forEach(key => {\n                if (runtime_environment[key] === \"\") {\n                    delete runtime_environment[key];\n                }\n            });\n            if (\n                runtime_environment?.[\"operating_system\"]?.[\"name\"] === \"\" ||\n                runtime_environment?.[\"operating_system\"]?.[\"version\"] === \"\"\n            ) {\n                delete runtime_environment[\"operating_system\"];\n            }\n\n            if (!state.pipfile) {\n                dispatch({\n                    type: \"error\",\n                    param: \"pipfile\",\n                    payload: \"Pipfile is required\",\n                });\n            } else if (!state.pipfileLock) {\n                dispatch({\n                    type: \"error\",\n                    param: \"pipfileLock\",\n                    payload: \"Pipfile.lock is required\",\n                });\n            } else {\n                postAdvise(\n                    state.pipfile,\n                    state.pipfileLock,\n                    runtime_environment,\n                )\n                    .then(response => {\n                        dispatch({ type: \"loading\", payload: false });\n                        navigate(\n                            \"/advise/\" + response.data.analysis_id + \"/summary\",\n                        );\n                    })\n                    .catch(error => {\n                        dispatch({ type: \"loading\", payload: false });\n                        if (error?.response?.status === 400) {\n                            if (\n                                error?.response?.data?.error?.includes(\n                                    \"Pipfile.lock\",\n                                )\n                            ) {\n                                dispatch({\n                                    type: \"error\",\n                                    param: \"pipfileLock\",\n                                    payload: error?.response?.data?.error,\n                                });\n                            } else if (\n                                error?.response?.data?.error?.includes(\n                                    \"Pipfile\",\n                                )\n                            ) {\n                                dispatch({\n                                    type: \"error\",\n                                    param: \"pipfile\",\n                                    payload: error?.response?.data?.error,\n                                });\n                            }\n                        }\n                    });\n            }\n        }\n    };\n\n    return (\n        <>\n            <Collapse in={state.lookupType === \"id\"}>\n                <>\n                    <Grid container justifyContent=\"center\">\n                        <Grid item xs={12}>\n                            <Typography\n                                color=\"error\"\n                                variant=\"body1\"\n                                sx={{ minHeight: 30 }}\n                            >\n                                {state.error?.id}\n                            </Typography>\n                        </Grid>\n                        <Grid container item xs={12} spacing={2}>\n                            <Grid item xs={12} md={10}>\n                                <SearchBar\n                                    error={state.error?.id !== undefined}\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"id\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    helpertext={\"Analysis ID\"}\n                                    type=\"search\"\n                                    boxprops={{ marginRight: 2 }}\n                                    lefticon={<SearchRoundedIcon />}\n                                    onEnter={handleAnalyze}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => handleAnalyze()}\n                                    sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                                >\n                                    <b>Analyze</b>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        onClick={() =>\n                            dispatch({\n                                type: \"input\",\n                                param: \"lookupType\",\n                                payload: \"manual\",\n                            })\n                        }\n                    >\n                        New Advise\n                    </Button>\n                    <Button\n                        onClick={() =>\n                            dispatch({\n                                type: \"input\",\n                                param: \"lookupType\",\n                                payload: \"history\",\n                            })\n                        }\n                    >\n                        History\n                    </Button>\n                </>\n            </Collapse>\n\n            <Collapse in={state.lookupType === \"history\"}>\n                <>\n                    <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n                        Local Thoth Advise History\n                    </Typography>\n                    <GenericTable\n                        headers={headCells}\n                        rows={rows}\n                        action={tableRowAction}\n                    />\n                </>\n            </Collapse>\n\n            <Collapse in={state.lookupType === \"manual\"}>\n                <>\n                    <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n                        Advise Parameters\n                    </Typography>\n                    <Paper\n                        sx={{\n                            backgroundColor: \"white\",\n                            padding: 3,\n                            marginBottom: 5,\n                        }}\n                        variant=\"outlined\"\n                    >\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} md={6}>\n                                <SearchBar\n                                    label={\n                                        state.error?.pipfile\n                                            ? state.error?.pipfile\n                                            : \"Pipfile contents\"\n                                    }\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"pipfile\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    error={state.error?.pipfile !== undefined}\n                                    multiline\n                                    rows={8}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <SearchBar\n                                    label={\n                                        state.error?.pipfileLock\n                                            ? state.error?.pipfileLock\n                                            : \"Pipfile.lock contents\"\n                                    }\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"pipfileLock\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    error={\n                                        state.error?.pipfileLock !== undefined\n                                    }\n                                    multiline\n                                    rows={8}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container mt={4} spacing={2}>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"base_image\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.base_image}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Base Image\"\n                                    required={false}\n                                    helperText=\"A base container image used to run the application.\"\n                                    error={\n                                        state.error?.base_image !== undefined\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"cuda_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.cuda_version}\n                                    suggestions={[\"9.0\"]}\n                                    label=\"CUDA Version\"\n                                    required={false}\n                                    help=\"Nvidia CUDA version which the application uses.\"\n                                    error={\n                                        state.error?.cuda_version !== undefined\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"cudnn_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.cudnn_version}\n                                    suggestions={[\"8\"]}\n                                    label=\"cuDNN Version\"\n                                    required={false}\n                                    help=\"NVIDIA cuDNN version used, if any.\"\n                                    error={\n                                        state.error?.cudnn_version !== undefined\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"mkl_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.mkl_version}\n                                    suggestions={[\"2021.1.1\"]}\n                                    label=\"MKL Version\"\n                                    required={false}\n                                    help=\"Intel® Math Kernel Library version used, if any.\"\n                                    error={\n                                        state.error?.mkl_version !== undefined\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"name\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.name}\n                                    suggestions={[\"ubi:8-prod\"]}\n                                    label=\"Name\"\n                                    required={true}\n                                    help=\"User defined name of the runtime environment.\"\n                                    error={state.error?.name !== undefined}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"openblas_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.openblas_version}\n                                    suggestions={[\"0.3.13\"]}\n                                    label=\"OpenBLAS Version\"\n                                    required={false}\n                                    help=\"OpenBLAS version used, if any.\"\n                                    error={\n                                        state.error?.openblas_version !==\n                                        undefined\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"openmpi_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.openmpi_version}\n                                    suggestions={[\"4.1\"]}\n                                    label=\"Open MPI Version\"\n                                    required={false}\n                                    help=\"Open MPI version used, if any.\"\n                                    error={\n                                        state.error?.openmpi_version !==\n                                        undefined\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"operating_system_name\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.operating_system_name}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Operating System Name\"\n                                    required={false}\n                                    helperText=\"Operating system name used.\"\n                                    error={\n                                        state.error?.operating_system_name !==\n                                        undefined\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"operating_system_version\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.operating_system_version}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Operating System Version\"\n                                    required={false}\n                                    helperText=\"Operating system version used.\"\n                                    error={\n                                        state.error\n                                            ?.operating_system_version !==\n                                        undefined\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"python_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.python_version}\n                                    suggestions={[\n                                        \"2.7\",\n                                        \"3.6\",\n                                        \"3.7\",\n                                        \"3.8\",\n                                        \"3.9\",\n                                    ]}\n                                    label=\"Python Version\"\n                                    required={false}\n                                    help=\"Python version on which the application runs on.\"\n                                    error={\n                                        state.error?.python_version !==\n                                        undefined\n                                    }\n                                />\n                            </Grid>\n                            <Grid container item xs={12} spacing={2}>\n                                <Grid item xs={6} md={6}>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        onClick={() =>\n                                            dispatch({\n                                                type: \"input\",\n                                                param: \"lookupType\",\n                                                payload: \"id\",\n                                            })\n                                        }\n                                        sx={{\n                                            minHeight: \"100%\",\n                                            minWidth: \"100%\",\n                                        }}\n                                    >\n                                        <b>Cancel</b>\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <LoadingButton\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => handleAnalyze()}\n                                        loading={state.loading}\n                                        sx={{\n                                            minHeight: \"100%\",\n                                            minWidth: \"100%\",\n                                        }}\n                                    >\n                                        <b>Analyze</b>\n                                    </LoadingButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </>\n            </Collapse>\n        </>\n    );\n};\n","import { Button, Collapse, Grid, Typography } from \"@mui/material\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport React, { useMemo, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { postImageAnalyze, useContainerImages } from \"../api\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport GenericTable from \"components/Elements/GenericTable/GenericTable\";\nimport timeSince from \"utils/timeSince\";\n\ninterface ImageSearchState {\n    error: { [key: string]: string | undefined };\n    loading: boolean;\n    lookupType: string;\n    id: string;\n}\n\nfunction reducer(state: ImageSearchState, action: { [key: string]: any }) {\n    switch (action.type) {\n        case \"loading\":\n            return { ...state, loading: action.payload };\n        case \"error\":\n            return {\n                ...state,\n                error: { ...state.error, [action.param]: action.payload },\n            };\n        case \"clear-error\":\n            state.error = {};\n            return state;\n        case \"input\":\n            return {\n                ...state,\n                [action.param]: action.payload,\n                error: { ...state.error, [action.param]: undefined },\n            };\n        default:\n            throw new Error(\"Image state dispatch error\");\n    }\n}\n\nconst headCells = [\n    {\n        id: \"environment_name\",\n        label: \"Image Name\",\n    },\n    {\n        id: \"os_name\",\n        label: \"OS Name\",\n    },\n    {\n        id: \"os_version\",\n        label: \"OS Version\",\n    },\n    {\n        id: \"python_version\",\n        label: \"Python Version\",\n    },\n    {\n        id: \"date\",\n        label: \"Last Updated\",\n    },\n];\n\nconst initState: ImageSearchState = {\n    error: {},\n    loading: false,\n    lookupType: \"id\",\n    id: \"\",\n};\n\nexport const ImageSearch = () => {\n    const navigate = useNavigate();\n    const [state, dispatch] = useReducer(reducer, initState);\n\n    const images = useContainerImages({ useErrorBoundary: false });\n\n    const rows = useMemo(() => {\n        if (images?.data?.data?.container_images) {\n            return images?.data?.data?.container_images.map(image => {\n                return {\n                    ...image,\n                    date: timeSince(new Date(image.datetime)) + \" ago\",\n                };\n            });\n        } else {\n            return [];\n        }\n    }, [images?.data]);\n\n    const tableRowAction = (row: {\n        package_extract_document_id: string;\n        environment_name: string;\n    }) => {\n        navigate(\"/image/\" + row.package_extract_document_id, {\n            state: { image_name: row.environment_name },\n        });\n    };\n\n    const handleAnalyze = async () => {\n        if (state.loading) {\n            return;\n        }\n\n        if (state.id.includes(\"package-extract\")) {\n            navigate(\"/image/\" + state.id);\n            return;\n        }\n\n        dispatch({ type: \"loading\", payload: true });\n\n        postImageAnalyze(state.id)\n            .then(response => {\n                dispatch({ type: \"loading\", payload: false });\n                navigate(\"/image/\" + response.data.analysis_id, {\n                    state: { image_name: state.id },\n                });\n            })\n            .catch(error => {\n                dispatch({ type: \"loading\", payload: false });\n                if (error?.response?.status === 400) {\n                    dispatch({\n                        type: \"error\",\n                        param: \"id\",\n                        payload:\n                            error?.response?.data?.error ??\n                            \"An unknown error occurred\",\n                    });\n                }\n            });\n    };\n\n    return (\n        <>\n            <Collapse in={state.lookupType === \"id\"}>\n                <>\n                    <Grid container justifyContent=\"center\">\n                        <Grid item xs={12}>\n                            <Typography\n                                color=\"error\"\n                                variant=\"body1\"\n                                sx={{ minHeight: 30 }}\n                            >\n                                {state.error?.id}\n                            </Typography>\n                        </Grid>\n                        <Grid container item xs={12} spacing={2}>\n                            <Grid item xs={12} md={10}>\n                                <SearchBar\n                                    error={state.error?.id != undefined}\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"id\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    helpertext={\"Analysis ID or image name\"}\n                                    type=\"search\"\n                                    boxprops={{ mr: 2 }}\n                                    lefticon={<SearchRoundedIcon />}\n                                    onEnter={handleAnalyze}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleAnalyze}\n                                    sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                                >\n                                    <b>Analyze</b>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        onClick={() =>\n                            dispatch({\n                                type: \"input\",\n                                param: \"lookupType\",\n                                payload: \"lookup\",\n                            })\n                        }\n                    >\n                        Lookup Thoth Images\n                    </Button>\n                </>\n            </Collapse>\n\n            <Collapse in={state.lookupType === \"lookup\"}>\n                <>\n                    <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n                        Available Thoth Container Images\n                    </Typography>\n                    <GenericTable\n                        headers={headCells}\n                        rows={rows}\n                        action={tableRowAction}\n                    />\n                </>\n            </Collapse>\n        </>\n    );\n};\n","// react\nimport React, { useState } from \"react\";\n\n// material-ui\nimport {\n    Typography,\n    Grid,\n    Divider,\n    ToggleButtonGroup,\n    ToggleButton,\n    Box,\n} from \"@mui/material\";\n\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\n// local\nimport TabPanel from \"components/Elements/TabPanel\";\nimport logo from \"assets/thoth-logo.png\";\n\nimport { PackageSearch, AdviseCreation, ImageSearch } from \"../components\";\n\nexport const Home = () => {\n    // utility states\n    const [mode, setMode] = useState<string>(\"package\");\n\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n    // change mode view\n    const handleMode = (event: any, newMode: string) => {\n        if (newMode) {\n            setMode(newMode);\n        }\n    };\n\n    return (\n        <div\n            style={{\n                maxWidth: \"1000px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n            }}\n        >\n            <Grid container justifyContent=\"center\">\n                <Grid item>\n                    <Box sx={{ marginTop: 10 }}>\n                        <img\n                            alt=\"Thoth Logo\"\n                            src={logo}\n                            height={!matches ? \"auto\" : 300}\n                            width={\"100%\"}\n                        />\n                    </Box>\n                </Grid>\n                <Grid container item justifyContent=\"center\" mt={5} spacing={0}>\n                    <Grid item xs={12} alignItems=\"left\" mb={3}>\n                        <Typography variant=\"h4\">\n                            <b>Thoth Search</b>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} alignItems=\"left\">\n                        <Typography variant=\"subtitle1\">\n                            Thoth Search is a tool that runs analysis on a\n                            Python application. It utilizes package metadata and\n                            Thoth Adviser to analyse and recommend a software\n                            stack. You can run analysis on an entire Python\n                            application using a properly formatted Pipfile and\n                            Pipfile.lock. Alternatively, you can analyse a\n                            single Python package to see what Thoth knows about\n                            the package.\n                        </Typography>\n                    </Grid>\n                    <Grid item textAlign=\"center\" xs={12} mt={3} mb={4}>\n                        <ToggleButtonGroup\n                            value={mode}\n                            exclusive\n                            onChange={handleMode}\n                            size={!matches ? \"small\" : \"large\"}\n                        >\n                            <ToggleButton value=\"package\">\n                                <b>package</b>\n                            </ToggleButton>\n                            <ToggleButton value=\"environment\">\n                                <b>environment</b>\n                            </ToggleButton>\n                            <ToggleButton value=\"image\">\n                                <b>image</b>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Grid>\n\n                    <Grid item xs={12} sx={{ marginBottom: 3 }}>\n                        <Divider />\n                        <TabPanel value={mode} index=\"package\">\n                            <PackageSearch />\n                        </TabPanel>\n                        <TabPanel value={mode} index=\"environment\">\n                            <AdviseCreation />\n                        </TabPanel>\n                        <TabPanel value={mode} index=\"image\">\n                            <ImageSearch />\n                        </TabPanel>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n","import React from \"react\";\n\nexport const NotFound = () => {\n    return <div>404</div>;\n};\n","// react\nimport React from \"react\";\n\ninterface IProps {\n    /** card header info */\n    cardMeta: {\n        /** card title */\n        title: string;\n        /** optional subtitle */\n        subTitle?: string;\n    };\n    /** optional card action component (usually some button) */\n    cardAction?: React.ReactNode;\n    /** Card body content */\n    cardBody: React.ReactNode;\n}\nimport { Card, CardContent, CardHeader, Typography } from \"@mui/material\";\n\n/** Card template for metric cards. */\nconst InfoCard = ({ cardMeta, cardBody, cardAction }: IProps) => {\n    return (\n        <Card>\n            <CardHeader\n                action={cardAction}\n                title={<Typography variant=\"h5\">{cardMeta.title}</Typography>}\n                subheader={cardMeta.subTitle}\n            />\n            <CardContent>{cardBody}</CardContent>\n        </Card>\n    );\n};\n\nexport default InfoCard;\n","// react\nimport React from \"react\";\n\n// material-ui\nimport { LinearProgress, Typography, Grid } from \"@mui/material\";\nimport { GridProps } from \"@mui/material/Grid/Grid\";\n\ninterface IProps extends GridProps {\n    /** the amount (numerator) for the bar */\n    value: number;\n    /** the total (denominator) for the bar */\n    total: number;\n    /** optional label */\n    label?: string;\n    /** action used on card */\n    action?: JSX.Element;\n}\n\n/**\n * A horizontal bar for showing a percent of a total.\n */\nconst ProgressBar = ({ value, total, label, action, ...props }: IProps) => {\n    return (\n        <Grid container spacing={1} alignItems=\"center\" {...props}>\n            <Grid item xs={5}>\n                <Typography variant=\"body2\">{label}</Typography>\n            </Grid>\n            <Grid item xs={2}>\n                <Typography variant=\"body2\">{value}</Typography>\n            </Grid>\n            <Grid item xs>\n                <LinearProgress\n                    variant=\"determinate\"\n                    value={total > 0 ? (value / total) * 100 : 0}\n                    sx={{\n                        root: {\n                            height: 10,\n                            borderRadius: 5,\n                        },\n                        colorPrimary: {\n                            backgroundColor: \"theme.palette.grey[200]\",\n                        },\n                        bar: {\n                            borderRadius: 5,\n                            backgroundColor: \"#1a90ff\",\n                        },\n                    }}\n                />\n            </Grid>\n            <Grid item xs={1}>\n                <div>{action ?? null}</div>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ProgressBar;\n","// react\nimport React from \"react\";\n\n// material-ui\nimport { TransitionGroup } from \"react-transition-group\";\n\nimport {\n    Typography,\n    Divider,\n    List,\n    ListItem,\n    ListItemText,\n    Grid,\n    Collapse,\n    Box,\n    Skeleton,\n} from \"@mui/material\";\n\nimport { DependencyMetricType } from \"hooks/metrics\";\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\ninterface IDependenciesMetric {\n    metric: DependencyMetricType | null;\n}\n\n/**\n * A metric card that displays direct, indirect, and root packages of a dependency graph.\n */\nexport const DependenciesMetric = ({ metric }: IDependenciesMetric) => {\n    const totalDependencies =\n        (metric?.all?.direct ?? 0) +\n        (metric?.all?.indirect ?? 0) +\n        (metric?.all?.roots ?? 0);\n\n    if (!metric?.all || !metric?.roots) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                All Packages\n            </Typography>\n            <Divider sx={{ mb: 1 }} />\n            <ProgressBar\n                value={metric?.all?.roots ?? 0}\n                total={totalDependencies}\n                label={\"Root\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={metric?.all?.direct ?? 0}\n                total={totalDependencies}\n                label={\"Direct\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={metric?.all?.indirect ?? 0}\n                total={totalDependencies}\n                label={\"Indirect\"}\n            />\n            <Typography variant=\"h6\" gutterBottom mt={2}>\n                Root Packages\n            </Typography>\n            <Divider sx={{ mb: 1 }} />\n            <List component=\"nav\">\n                <TransitionGroup>\n                    {Object.entries(metric?.roots ?? {})?.map(([key]) => {\n                        const t =\n                            (metric?.roots[key].direct ?? 0) +\n                            (metric?.roots[key].indirect ?? 0);\n                        return (\n                            <Collapse key={key}>\n                                <div>\n                                    <ListItem>\n                                        <Grid container alignItems=\"center\">\n                                            <Grid item xs>\n                                                <ListItemText primary={key} />\n                                            </Grid>\n                                            <Grid item xs>\n                                                <Grid\n                                                    container\n                                                    direction=\"column\"\n                                                >\n                                                    <Grid item xs>\n                                                        <ProgressBar\n                                                            value={\n                                                                metric?.roots?.[\n                                                                    key\n                                                                ]?.direct ?? 0\n                                                            }\n                                                            total={t}\n                                                            label={\"Direct\"}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs>\n                                                        <ProgressBar\n                                                            value={\n                                                                metric?.roots?.[\n                                                                    key\n                                                                ]?.indirect ?? 0\n                                                            }\n                                                            total={t}\n                                                            label={\"Indirect\"}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </ListItem>\n                                    <Divider\n                                        variant={\"middle\"}\n                                        sx={{ mb: 1 }}\n                                    />\n                                </div>\n                            </Collapse>\n                        );\n                    })}\n                </TransitionGroup>\n            </List>\n        </>\n    );\n};\n","import React from \"react\";\n\n// material-ui\nimport { Divider, Collapse, Chip, Grid, Box } from \"@mui/material\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport CheckRoundedIcon from \"@mui/icons-material/CheckRounded\";\nimport HelpOutlineRoundedIcon from \"@mui/icons-material/HelpOutlineRounded\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\nimport { LicenseMetricType } from \"hooks/metrics\";\n\ninterface ILicenseGroup {\n    /** The license name */\n    name: string;\n    metadata: LicenseMetricType[keyof LicenseMetricType][\"metadata\"];\n    packages: LicenseMetricType[keyof LicenseMetricType][\"packages\"];\n    /** The total number of packages that have licenses. (used to add a total to the metric bar) */\n    totalLicenses: number;\n}\n\n/**\n * A custom list item displaying the number of packages under a particular license.\n */\nconst LicenseGroup = ({\n    name,\n    metadata,\n    packages,\n    totalLicenses,\n}: ILicenseGroup) => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <Grid container>\n            <Grid item xs={1}>\n                {metadata?.isOsiApproved === null ? (\n                    <HelpOutlineRoundedIcon />\n                ) : metadata?.isOsiApproved ? (\n                    <CheckRoundedIcon />\n                ) : null}\n            </Grid>\n            <Grid item xs>\n                <Box onClick={() => setOpen(!open)}>\n                    <ProgressBar\n                        key={name}\n                        value={Object.keys(packages).length ?? 0}\n                        total={totalLicenses}\n                        label={name}\n                        action={open ? <ExpandLess /> : <ExpandMore />}\n                    />\n                </Box>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <Box my={1}>\n                        {Object.entries(packages)\n                            .sort((a, b) => {\n                                return a[1].depth - b[1].depth;\n                            })\n                            .map(([k, v]) => {\n                                return (\n                                    <Chip\n                                        key={k}\n                                        sx={{ margin: 0.5 }}\n                                        color={\n                                            v.depth === 0\n                                                ? \"primary\"\n                                                : v.depth === 1\n                                                ? \"secondary\"\n                                                : \"default\"\n                                        }\n                                        label={k}\n                                    />\n                                );\n                            })}\n                    </Box>\n                    <Divider />\n                </Collapse>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default LicenseGroup;\n","// react\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport {\n    Typography,\n    Divider,\n    Collapse,\n    Button,\n    Box,\n    Grid,\n    Skeleton,\n} from \"@mui/material\";\nimport { TransitionGroup } from \"react-transition-group\";\n\n// local\nimport LicenseGroup from \"./LicenseGroup\";\nimport { LicenseMetricType } from \"hooks/metrics\";\n\ninterface ILicenseMetric {\n    /** Key value pairs of license names (keys) and license information (values).*/\n    metric: LicenseMetricType | null;\n}\n\n/**\n * A metric card that visualizes license data for all packages in the graph.\n */\nexport const LicenseMetric = ({ metric }: ILicenseMetric) => {\n    const [more, setMore] = React.useState(false);\n\n    const licenses = useMemo(\n        () =>\n            Object.entries(metric ?? {}).sort((a, b) => {\n                return Object.keys(b[1]).length - Object.keys(a[1]).length;\n            }),\n        [metric],\n    );\n\n    const totalLicenses = useMemo(\n        () =>\n            Object.entries(metric ?? {}).reduce((sum, [, val]) => {\n                return sum + Object.keys(val.packages).length;\n            }, 0),\n        [metric],\n    );\n\n    if (!metric) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={1}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        OSI\n                    </Typography>\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Dependency Licenses\n                    </Typography>\n                </Grid>\n            </Grid>\n\n            <Divider />\n            <TransitionGroup>\n                {licenses?.slice(0, 10).map(([key, value]) => {\n                    return (\n                        <Collapse key={key}>\n                            <LicenseGroup\n                                name={key}\n                                metadata={value.metadata}\n                                packages={value.packages}\n                                totalLicenses={totalLicenses}\n                            />\n                        </Collapse>\n                    );\n                })}\n            </TransitionGroup>\n\n            <Collapse in={more} timeout=\"auto\" unmountOnExit>\n                <TransitionGroup>\n                    {licenses.slice(10).map(([key, value]) => {\n                        return (\n                            <Collapse key={key}>\n                                <LicenseGroup\n                                    name={key}\n                                    metadata={value.metadata}\n                                    packages={value.packages}\n                                    totalLicenses={totalLicenses}\n                                />\n                            </Collapse>\n                        );\n                    })}\n                </TransitionGroup>\n            </Collapse>\n            <Box textAlign=\"center\">\n                <Button onClick={() => setMore(!more)} color=\"primary\">\n                    {more ? \"Less\" : \"More\"}\n                </Button>\n            </Box>\n        </div>\n    );\n};\n","// react\nimport React from \"react\";\n\n// material-ui\nimport { Typography, Divider, Skeleton, Box } from \"@mui/material\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\nimport { AdviseMetricType } from \"hooks/metrics\";\n\ninterface IAdviseMetric {\n    /** The metric object info of aggregated data */\n    metric: AdviseMetricType | null;\n}\n\n/**\n * A metric card that aggregates changes between the initial dependency\n * graph and the Thoth made dependency graph.\n */\nexport const AdviseMetric = ({ metric }: IAdviseMetric) => {\n    const justTotal = Object.values(metric?.justification ?? {}).reduce(\n        (a, b) => a + b,\n        0,\n    );\n\n    if (!metric) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <Typography variant=\"body2\" gutterBottom>\n                {metric?.build}\n            </Typography>\n            <Divider sx={{ mb: 1 }} />\n            <Typography variant=\"h6\" mt={3} gutterBottom>\n                Justification Counts\n            </Typography>\n            <Divider sx={{ mb: 1 }} />\n            {Object.entries(metric?.justification ?? {}).map(([key, value]) => {\n                return (\n                    <ProgressBar\n                        key={key}\n                        value={value}\n                        total={justTotal}\n                        label={key}\n                        mb={1}\n                    />\n                );\n            })}\n        </>\n    );\n};\n","import React from \"react\";\nimport InfoCard from \"components/Elements/InfoCard\";\nimport {\n    AdviseMetric,\n    DependenciesMetric,\n    LicenseMetric,\n} from \"components/Metrics\";\nimport { Masonry } from \"@mui/lab\";\nimport { AllMetrics } from \"../hooks\";\n\ninterface IAdviseSummary {\n    metrics: AllMetrics;\n}\n\nexport const AdviseSummary = ({ metrics }: IAdviseSummary) => {\n    return (\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3} sx={{ mb: 3, mt: 1 }}>\n            <div>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Thoth Advise Summary\",\n                    }}\n                    cardBody={<AdviseMetric metric={metrics?.advise} />}\n                />\n            </div>\n            <div>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Dependencies Summary\",\n                    }}\n                    cardBody={\n                        <DependenciesMetric metric={metrics?.dependencies} />\n                    }\n                />\n            </div>\n            <div>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Licenses Summary\",\n                    }}\n                    cardBody={<LicenseMetric metric={metrics?.licenses} />}\n                />\n            </div>\n        </Masonry>\n    );\n};\n","import React from \"react\";\n\n// material-ui\nimport { Link, Stack, BoxProps } from \"@mui/material\";\n\ninterface IIconText extends BoxProps {\n    /** The text shown */\n    text: string;\n    /** The icon component to be displayed */\n    icon: React.ReactNode;\n    /** Optional link if text is selected */\n    link?: string;\n}\n\n/**\n * Text with an icon to the right of it.\n */\nconst IconText = ({ text, icon, link, ...props }: IIconText) => {\n    return (\n        <Stack {...props} direction=\"row\" spacing={1} alignItems=\"center\">\n            {icon}\n            <Link\n                underline=\"none\"\n                href={link ? link : undefined}\n                variant=\"body2\"\n                align=\"center\"\n            >\n                {text}\n            </Link>\n        </Stack>\n    );\n};\n\nexport default IconText;\n\nIconText.propTypes = {};\n","import React from \"react\";\nimport { Button, Alert, AlertColor } from \"@mui/material\";\n\ninterface ICustomAlert {\n    /** The alert content. */\n    info: {\n        /** Link to navigate to if alert is actioned on. */\n        link: string;\n        /** Text displayed in the alert. */\n        message: string;\n        /** Severity (color) of alert: `[\"ERROR\", \"WARNING\", \"INFO\", \"SUCCESS\"]`. */\n        type: AlertColor;\n    };\n}\n\n/**\n * A custom alert card.\n */\nconst CustomAlert = ({ info, ...props }: ICustomAlert) => {\n    return (\n        <Alert\n            action={\n                <Button color=\"inherit\" size=\"small\" href={info?.link}>\n                    DETAILS\n                </Button>\n            }\n            severity={info.type}\n            {...props}\n        >\n            {info?.message}\n        </Alert>\n    );\n};\n\nexport default CustomAlert;\n","// React\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport {\n    Typography,\n    Chip,\n    Button,\n    Collapse,\n    ChipProps,\n    AlertColor,\n    Stack,\n} from \"@mui/material\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport FeedRoundedIcon from \"@mui/icons-material/FeedRounded\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport CustomAlert from \"./CustomAlert\";\n\n// utils\nimport { calcTime } from \"utils/calcTime\";\nimport {\n    AdviseDocumentRequestParams,\n    AdviseDocumentRequestResponseSuccess,\n} from \"../../api\";\n\ninterface IAdviseHeader {\n    /** the Advise document id*/\n    adviseDocument?: AdviseDocumentRequestResponseSuccess;\n    /** the Advise document logs*/\n    logs?: string | null;\n}\n\n/**\n * Displays basic Advise document information and\n * displays any errors, info, or warnings that came up\n * in the document generation.\n */\nexport const AdviseHeader = ({ adviseDocument, logs }: IAdviseHeader) => {\n    const [expandAlerts, setExpandAlerts] = React.useState<boolean>(false);\n    const [showLogs, setShowLogs] = React.useState<boolean>(false);\n    const [selectedLine, setSelectedLine] = React.useState<number>();\n\n    // get status of the report\n    const [statusText, statusColor] = useMemo<\n        [string, ChipProps[\"color\"]]\n    >(() => {\n        // if report is done\n        if (adviseDocument?.result?.report) {\n            if (adviseDocument.result.report.ERROR) {\n                return [\"ERROR\", \"error\"];\n            } else {\n                return [\"COMPLETE\", \"success\"];\n            }\n        } else if (adviseDocument?.result?.error) {\n            return [\"ERROR\", \"error\"];\n        }\n        // if report is not done\n        else if (adviseDocument?.status?.state) {\n            return [adviseDocument.status.state.toUpperCase(), \"info\"];\n        } else {\n            return [\"UNKNOWN\", undefined];\n        }\n    }, [adviseDocument]);\n\n    // get alerts from report\n    const alerts = useMemo(() => {\n        if (adviseDocument?.result?.report?.stack_info) {\n            return adviseDocument?.result?.report.stack_info\n                .filter(alert => alert.type === \"ERROR\")\n                .map(alert => {\n                    return {\n                        ...alert,\n                        type: alert.type.toLowerCase() as AlertColor,\n                    };\n                });\n        } else {\n            return [];\n        }\n    }, [adviseDocument]);\n\n    return (\n        <div>\n            <Typography variant=\"h4\" mb={1}>\n                <b>\n                    {adviseDocument?.metadata?.document_id ??\n                        (\n                            adviseDocument?.parameters as AdviseDocumentRequestParams\n                        )?.analysis_id}\n                </b>\n            </Typography>\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\" mb={3}>\n                <Chip label={statusText} color={statusColor} />\n                <IconText\n                    text={calcTime(\n                        adviseDocument?.status?.finished_at,\n                        adviseDocument?.status?.started_at,\n                        adviseDocument?.metadata?.datetime,\n                    )}\n                    icon={<AccessTimeIcon />}\n                />\n                <Button\n                    sx={{ marginLeft: 2 }}\n                    onClick={() => setShowLogs(!showLogs)}\n                >\n                    <IconText text=\"Logs\" icon={<FeedRoundedIcon />} />\n                </Button>\n            </Stack>\n            <Collapse in={showLogs}>\n                {logs?.split(\"\\n\").map((line, i) => {\n                    return (\n                        <Typography\n                            key={i}\n                            noWrap={selectedLine !== i}\n                            onClick={() =>\n                                setSelectedLine(\n                                    selectedLine === i ? undefined : i,\n                                )\n                            }\n                            variant=\"body2\"\n                            sx={{\n                                backgroundColor:\n                                    selectedLine === i\n                                        ? \"lightyellow\"\n                                        : i % 2 === 0\n                                        ? \"lightgray\"\n                                        : \"unset\",\n                            }}\n                        >\n                            {line}\n                        </Typography>\n                    );\n                }) ?? \"Advisor log is not available.\"}\n            </Collapse>\n            <Typography variant={\"subtitle2\"} mb={2}>\n                {adviseDocument?.result?.report?.ERROR ??\n                    adviseDocument?.result?.error_msg}\n            </Typography>\n            {alerts?.length > 0 ? (\n                <Stack direction=\"column\" spacing={1}>\n                    <CustomAlert info={alerts[0]} />\n                    <Collapse in={expandAlerts} timeout=\"auto\" unmountOnExit>\n                        <Stack direction=\"column\" spacing={1}>\n                            {alerts?.slice(1).map((info, i) => {\n                                return <CustomAlert key={i} info={info} />;\n                            })}\n                        </Stack>\n                    </Collapse>\n\n                    <Button\n                        color=\"inherit\"\n                        size=\"small\"\n                        sx={{ alignSelf: \"flex-start\" }}\n                        onClick={() => setExpandAlerts(!expandAlerts)}\n                    >\n                        {alerts?.length > 1\n                            ? expandAlerts\n                                ? \"LESS\"\n                                : \"MORE\"\n                            : null}\n                    </Button>\n                </Stack>\n            ) : null}\n\n            {statusText === \"COMPLETE\" ? (\n                <Typography variant=\"body1\" sx={{ color: \"text.secondary\" }}>\n                    Thoth has added and removed packages from the original\n                    Pipfile.lock, resulting in a <i>new</i> Pipfile.lock. Switch\n                    between the new and old Python environments to see the\n                    differences.\n                </Typography>\n            ) : null}\n        </div>\n    );\n};\n","function descendingComparator(\n    a: { [x: string]: number },\n    b: { [x: string]: number },\n    orderBy: string | number,\n) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order: string, orderBy: string) {\n    return order === \"desc\"\n        ? (a: { [x: string]: number }, b: { [x: string]: number }) =>\n              descendingComparator(a, b, orderBy)\n        : (a: { [x: string]: number }, b: { [x: string]: number }) =>\n              -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(\n    array: any[],\n    comparator: {\n        (a: { [x: string]: number }, b: { [x: string]: number }): number;\n        (arg0: any, arg1: any): any;\n    },\n) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n","import React from \"react\";\n\nimport {\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Box,\n    TableCell,\n} from \"@mui/material\";\n\nimport { visuallyHidden } from \"@mui/utils\";\n\nconst headCells = [\n    {\n        id: \"name\",\n        numeric: false,\n        label: \"Package\",\n    },\n    {\n        id: \"depth\",\n        numeric: true,\n        label: \"Depth\",\n    },\n    {\n        id: \"license\",\n        numeric: false,\n        label: \"License\",\n    },\n    {\n        id: \"dependencies\",\n        numeric: true,\n        label: \"Direct Dependencies\",\n    },\n];\n\ninterface IEnhancedTableHead {\n    /** the function used to sort an individual column */\n    onRequestSort: (c: string) => void;\n    /** the order in which the column is sorted on*/\n    order: \"asc\" | \"desc\";\n    /** The column in which to order the table by */\n    orderBy: string;\n}\n\n/**\n * A specific custom table header for packages.\n * It handles sorting individual columns.\n */\nfunction EnhancedTableHead({\n    order,\n    orderBy,\n    onRequestSort,\n}: IEnhancedTableHead) {\n    const createSortHandler = (property: string) => {\n        onRequestSort(property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding=\"normal\"\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={() => createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nexport default EnhancedTableHead;\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport {\n    Box,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TablePagination,\n    TableRow,\n} from \"@mui/material\";\n\n// utils\nimport { getComparator, stableSort } from \"./utils\";\n\n// local\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\ninterface IAdviseTableView {\n    /** the text value used to filter the cells in the table */\n    search: string;\n    graph: Graph<Node<PackageNodeValue>>;\n}\n\ntype Row = {\n    name: string;\n    key: string;\n    warnings: [];\n    depth: number;\n    license: string;\n    dependencies: number;\n    summary: string;\n};\n\n/**\n * The table cells and total structure specific to\n * python packages.\n */\nexport function AdviseTableView({ search = \"\", graph }: IAdviseTableView) {\n    const [order, setOrder] = useState<\"asc\" | \"desc\">(\"asc\");\n    const [orderBy, setOrderBy] = React.useState<string>(\"name\");\n    const [page, setPage] = React.useState<number>(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState<number>(25);\n    const [rows, setRows] = React.useState<Row[]>([]);\n\n    const { selected, setSelected } = useContext(SelectedPackageContext) ?? {\n        setSelected: () => console.log(\"missing callback\"),\n    };\n\n    // format data\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        setPage(0);\n\n        const newRows: Row[] = [];\n        graph.nodes.forEach(node => {\n            if (node.value.depth === -1) {\n                return;\n            }\n            newRows.push({\n                name: node.value.label ?? node.key,\n                key: node.key,\n                warnings: [],\n                depth: node.value?.depth ?? -1,\n                license: node?.value?.metadata?.License ?? \"\",\n                dependencies: node.adjacents.size,\n                summary: node?.value?.metadata?.Summary ?? \"\",\n            });\n        });\n        setRows(newRows);\n    }, [graph]);\n\n    const handleRequestSort = (property: string) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (\n        event: React.MouseEvent<HTMLButtonElement> | null,\n        newPage: React.SetStateAction<number>,\n    ) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (\n        event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <TableContainer>\n                <Table sx={{ minWidth: 750 }} size=\"medium\">\n                    <EnhancedTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={handleRequestSort}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getComparator(order, orderBy))\n                            .filter((row: { name: string }) =>\n                                row.name.includes(search),\n                            )\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage,\n                            )\n                            .map((row: Row, index: number) => {\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <React.Fragment key={row.name}>\n                                        <TableRow\n                                            hover\n                                            onClick={() => setSelected(row.key)}\n                                            tabIndex={-1}\n                                            selected={selected === row.key}\n                                        >\n                                            <TableCell\n                                                component=\"th\"\n                                                id={labelId}\n                                                scope=\"row\"\n                                            >\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.depth}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.license}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.dependencies}\n                                            </TableCell>\n                                        </TableRow>\n\n                                        <TableRow>\n                                            <TableCell\n                                                style={{\n                                                    paddingBottom: 0,\n                                                    paddingTop: 0,\n                                                }}\n                                                colSpan={6}\n                                            />\n                                        </TableRow>\n                                    </React.Fragment>\n                                );\n                            })}\n                        {emptyRows > 0 && (\n                            <TableRow\n                                style={{\n                                    height: 53 * emptyRows,\n                                }}\n                            >\n                                <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Box>\n    );\n}\n","// react\nimport React from \"react\";\n\n// material-ui\nimport { Typography } from \"@mui/material\";\n\ninterface ILockfileView {\n    /** The Pipfile.lock json object */\n    file: { default: { [key: string]: unknown } };\n}\n\n/**\n * Renders out a Pipfile.lock file and attaches\n * `<a>` tags to package names, which is used to\n *  scroll to certain spot in the lock file\n */\nexport const LockfileView = ({ file }: ILockfileView) => {\n    return (\n        <Typography variant=\"caption\">\n            <pre>\n                <div\n                    dangerouslySetInnerHTML={{\n                        __html: JSON.stringify(file, undefined, 4)?.replaceAll(\n                            new RegExp(\n                                '(\"' +\n                                    Object.keys(file?.default)?.join('\"|\"') +\n                                    '\")',\n                                \"g\",\n                            ),\n                            (match: string) => {\n                                return `<a id=\"${match.slice(\n                                    1,\n                                    -1,\n                                )}\">${match}</a>`;\n                            },\n                        ),\n                    }}\n                />\n            </pre>\n        </Typography>\n    );\n};\n","// react\nimport React from \"react\";\n\nimport { Typography, Grid } from \"@mui/material\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\ninterface IPopup {\n    node: Node<PackageNodeValue>;\n}\n\n/**\n * Graph hover model appears when you hover over a node on the graph.\n */\nconst Popup = ({ node }: IPopup) => {\n    return (\n        <div>\n            <Grid container alignItems=\"center\">\n                <Grid item xs={6}>\n                    <Typography variant=\"h6\">\n                        <b>{node.value.id}</b>\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography ml={2} variant=\"body1\">\n                        v{node.value.version ?? \"NaN\"}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography gutterBottom variant=\"body2\">\n                {node.value?.metadata?.Summary ?? \"NaN\"}\n            </Typography>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <IconText\n                        text={node.value?.metadata?.License ?? \"NaN\"}\n                        icon={<GavelIcon />}\n                    />\n                </Grid>\n                <Grid item>\n                    <IconText\n                        ml={2}\n                        text={\n                            node.value?.latestVersion // TODO is not correct\n                                ? \"Latest version is installed\"\n                                : \"Installed version is NOT the latest.\"\n                        }\n                        icon={<BookmarkIcon />}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default Popup;\n","// react\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// utils and configs\nimport { options } from \"config\";\n\n// vis-network\nimport { Network, DataSet, Data } from \"vis-network/standalone\";\n\n// local\nimport Popup from \"../Popup\";\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\ninterface INetworkGraph {\n    graph: Graph<Node<PackageNodeValue>>;\n}\n\n/**\n * Renders a network graph visualization using `vis-network`.\n */\nconst NetworkGraph = ({ graph, ...props }: INetworkGraph) => {\n    const visJsRef = useRef<HTMLDivElement>(null);\n    const { selected } = useContext(SelectedPackageContext);\n\n    // create the graph\n    useEffect(() => {\n        if (!selected || !graph) {\n            return;\n        }\n\n        const selectedNode = graph.nodes.get(selected);\n\n        if (selectedNode) {\n            const nodes = graph.findAllNodesOnAllPaths(selectedNode, \"*App\");\n\n            const app_node = graph.nodes.get(\"*App\");\n            if (app_node) {\n                nodes.set(\"*App\", app_node);\n            }\n\n            // convert to vis graph format\n            const convertedNodes = new DataSet<PackageNodeValue>();\n            nodes.forEach(value => {\n                // popup element\n                const popup = document.createElement(\"div\");\n                ReactDOM.render(<Popup node={value} />, popup);\n\n                // default colors\n                let color = value.value.color ?? options.nodes.color.background;\n                let font = undefined;\n\n                // if node is root\n                if (value.key === \"*App\") {\n                    color = \"#4fc1ea\";\n                    font = { color: \"#4fc1ea\", strokeWidth: 3, size: 20 };\n                }\n                // if selected node\n                else if (value.key === selectedNode.key) {\n                    color = \"#f39200\";\n                }\n\n                convertedNodes.add({\n                    ...value.value,\n                    color: color,\n                    title:\n                        value.key === selectedNode.key || value.key === \"*App\"\n                            ? undefined\n                            : popup,\n                    font: font,\n                });\n            });\n\n            const visData: Data = {\n                nodes: convertedNodes,\n                edges: new DataSet(graph.visEdges),\n            };\n\n            const network =\n                visJsRef.current &&\n                new Network(visJsRef.current, visData, options);\n\n            // change cursor when hovering and grabbing\n            // Get the canvas HTML element\n            const networkCanvas = document\n                ?.getElementById(\"mynetwork\")\n                ?.getElementsByTagName(\"canvas\")[0];\n\n            // changes the cursor graphic depending on where and what the mouse is doing\n            const changeCursor = (newCursorStyle: string) => {\n                if (networkCanvas) {\n                    networkCanvas.style.cursor = newCursorStyle;\n                }\n            };\n\n            if (network) {\n                network.on(\"hoverNode\", function () {\n                    changeCursor(\"grab\");\n                });\n                network.on(\"blurNode\", function () {\n                    changeCursor(\"default\");\n                });\n                network.on(\"dragStart\", function () {\n                    changeCursor(\"grabbing\");\n                });\n                network.on(\"dragging\", function () {\n                    changeCursor(\"grabbing\");\n                });\n                network.on(\"dragEnd\", function () {\n                    changeCursor(\"grab\");\n                });\n            }\n        }\n    }, [selected, graph, visJsRef]);\n\n    return (\n        <div {...props} style={{ display: \"flex\", flexFlow: \"column nowrap\" }}>\n            <div\n                ref={visJsRef}\n                id=\"mynetwork\"\n                style={{ flex: \"1 1 auto\", height: \"50vh\" }}\n            />\n        </div>\n    );\n};\n\nexport default NetworkGraph;\n","// React\nimport React, { useContext, useMemo } from \"react\";\n\n// material-ui\nimport {\n    Typography,\n    Grid,\n    Box,\n    Paper,\n    Link,\n    Button,\n    Stack,\n} from \"@mui/material\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\nimport ErrorRoundedIcon from \"@mui/icons-material/ErrorRounded\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport NetworkGraphView from \"../NetworkGraphView\";\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { components } from \"lib/schema\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\ninterface ISelectedPackage {\n    graph: Graph<Node<PackageNodeValue>>;\n}\n\n/**\n * Renders the selected package context variable's data. It will preform\n * a search of the list of packages using the selected package variable.\n */\nexport const SelectedPackage = ({ graph }: ISelectedPackage) => {\n    const { selected, setSelected } = useContext(SelectedPackageContext);\n\n    const selectedPackage = useMemo<Node<PackageNodeValue> | undefined>(() => {\n        return graph.nodes.get(selected);\n    }, [selected]);\n\n    const dependents = useMemo<string[]>(() => {\n        const deps: string[] = [];\n\n        if (selectedPackage) {\n            [...selectedPackage.parents]\n                .filter(p => p !== \"*App\")\n                .forEach(node => {\n                    const nodeObj = graph.nodes.get(node);\n                    if (nodeObj) {\n                        deps.push(node);\n                    }\n                });\n        }\n\n        return deps;\n    }, [selectedPackage]);\n\n    const justifications = useMemo(() => {\n        const justs: { [key: string]: components[\"schemas\"][\"Justification\"] } =\n            {};\n\n        if (selectedPackage) {\n            console.log(selectedPackage);\n            selectedPackage?.value?.justifications?.forEach(just => {\n                justs[just.type] = [...(justs[just.type] ?? []), just];\n            });\n        }\n\n        return justs;\n    }, [selectedPackage]);\n\n    const showError = useMemo(() => {\n        return (\n            <Stack direction=\"row\" alignItems=\"center\">\n                <ErrorRoundedIcon color=\"error\" sx={{ marginRight: \".5rem\" }} />\n                <Typography mb={0} color=\"error\" gutterBottom variant=\"body2\">\n                    The package metadata could not be fetched. Package data will\n                    be limited.\n                </Typography>\n            </Stack>\n        );\n    }, []);\n\n    return (\n        <Box>\n            <Paper sx={{ padding: 2 }}>\n                <Grid container alignItems=\"center\" mb={1}>\n                    <Grid item>\n                        <Typography variant=\"h3\">\n                            <b>{selectedPackage?.value?.name}</b>\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography ml={2} variant=\"h6\">\n                            {selectedPackage?.value?.version}\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                {!selectedPackage?.value?.metadata && showError}\n\n                <Typography gutterBottom variant=\"body1\">\n                    {selectedPackage?.value?.metadata?.Summary}\n                </Typography>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <IconText\n                            text={\n                                selectedPackage?.value?.metadata?.License ??\n                                \"NaN\"\n                            }\n                            icon={<GavelIcon />}\n                        />\n                    </Grid>\n                </Grid>\n            </Paper>\n\n            <Paper sx={{ padding: 2, marginTop: 2 }}>\n                <Typography variant=\"h5\">Thoth Justifications</Typography>\n                {Object.entries(justifications).map(([type, reasons]) => {\n                    return (\n                        <React.Fragment key={type}>\n                            <Typography variant=\"h6\" mt={2}>\n                                {type} Justifications\n                            </Typography>\n                            {reasons.map((reason, i) => {\n                                return (\n                                    <Grid\n                                        container\n                                        alignItems=\"center\"\n                                        ml={3}\n                                        key={reason.message + i}\n                                    >\n                                        <Grid item xs={10}>\n                                            <Typography variant=\"body1\" mt={1}>\n                                                {reason.message}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Button href={reason.link}>\n                                                READ MORE\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                );\n                            })}\n                        </React.Fragment>\n                    );\n                })}\n            </Paper>\n\n            <Paper sx={{ padding: 2, marginTop: 2 }}>\n                <Typography variant=\"h5\" mb={2}>\n                    Package Origins\n                </Typography>\n                <Typography variant=\"body1\" mb={2}>\n                    {[...(selectedPackage?.parents ?? [])].filter(\n                        p => p !== \"*App\",\n                    )?.length === 0\n                        ? selectedPackage?.value?.label +\n                          \" is not a dependent of any package in this Python environment\"\n                        : \"There are \" +\n                          [...(selectedPackage?.parents ?? [])].filter(\n                              p => p !== \"*App\",\n                          )?.length +\n                          \" package(s) that have \" +\n                          selectedPackage?.value?.label +\n                          \" as a direct dependency: \"}\n                    {dependents.map((dep, i) => {\n                        return (\n                            <>\n                                <Link\n                                    key={dep + i}\n                                    underline=\"hover\"\n                                    onClick={() => setSelected(dep)}\n                                >\n                                    {dep}\n                                </Link>{\" \"}\n                            </>\n                        );\n                    })}\n                </Typography>\n\n                <NetworkGraphView graph={graph} />\n            </Paper>\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Grid, Paper, Typography } from \"@mui/material\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport { AdviseTableView, SelectedPackage } from \"../components\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\ntype SelectedPackageType = {\n    selected: string;\n    setSelected: (c: string) => void;\n};\n\nexport const SelectedPackageContext = React.createContext<SelectedPackageType>(\n    {} as SelectedPackageType,\n);\n\ninterface IAdviseDetails {\n    graph?: Graph<Node<PackageNodeValue>>;\n}\n\nexport const AdviseDetails = ({ graph }: IAdviseDetails) => {\n    const [search, setSearch] = useState<string>(\"\");\n    const [selected, setSelected] = useState<string>(\"\");\n\n    const handleSearch = (\n        event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n        setSearch(event.target.value);\n    };\n\n    if (!graph) {\n        return null;\n    }\n\n    return (\n        <SelectedPackageContext.Provider value={{ selected, setSelected }}>\n            <Grid\n                container\n                spacing={2}\n                justifyContent=\"center\"\n                alignItems=\"flex-start\"\n                mt={2}\n            >\n                <Grid item sm={12} md={6}>\n                    <Paper sx={{ padding: 2 }}>\n                        <SearchBar\n                            onChange={handleSearch}\n                            lefticon={<SearchRoundedIcon />}\n                        />\n                        <AdviseTableView search={search} graph={graph} />\n                    </Paper>\n                </Grid>\n                <Grid item sm={12} md={6}>\n                    {!selected ? (\n                        <Typography variant=\"body1\" align=\"center\">\n                            No package selected\n                        </Typography>\n                    ) : (\n                        <SelectedPackage graph={graph} />\n                    )}\n                </Grid>\n            </Grid>\n        </SelectedPackageContext.Provider>\n    );\n};\n","import React, { useMemo } from \"react\";\n\nimport {\n    Box,\n    Grid,\n    FormControl,\n    Stack,\n    MenuItem,\n    Select,\n    SelectChangeEvent,\n    Typography,\n    TextField,\n    IconButton,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n} from \"@mui/material\";\n\nimport AddRoundedIcon from \"@mui/icons-material/AddRounded\";\n\nimport {\n    AdviseDocumentRequestResponseSuccess,\n    useAdviseDocument,\n} from \"../api\";\nimport { LOCAL_STORAGE_KEY } from \"config\";\nimport { components } from \"lib/schema\";\n\nimport { Requirements } from \"../../../hooks\";\nimport { Variant } from \"@mui/material/styles/createTypography\";\nimport { Lockfile } from \"../../../utils/formatLockfile\";\n\ninterface IAdviseCompare {\n    adviseDocument?: AdviseDocumentRequestResponseSuccess;\n}\n\nexport const AdviseCompare = ({ adviseDocument }: IAdviseCompare) => {\n    const [comparison, setComparison] = React.useState(\n        adviseDocument?.metadata?.document_id ?? \"\",\n    );\n\n    const compareDoc = useAdviseDocument(comparison);\n\n    const [open, setOpen] = React.useState(false);\n    const [importText, setImportText] = React.useState(\"\");\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event?: any, reason?: string) => {\n        if (reason !== \"backdropClick\") {\n            setOpen(false);\n        }\n    };\n\n    const handleImport = () => {\n        const ids = localStorage.getItem(LOCAL_STORAGE_KEY) ?? \"\";\n\n        const split = ids.split(\",\");\n        if (!split.includes(importText)) {\n            split.push(importText);\n            localStorage.setItem(LOCAL_STORAGE_KEY, split.join(\",\"));\n        }\n\n        setImportText(\"\");\n        setOpen(false);\n    };\n\n    const handleChange = (event: SelectChangeEvent) => {\n        setComparison(event.target.value);\n    };\n\n    const localHistory: string[] = useMemo(() => {\n        const history: string[] = [];\n\n        if (\n            (\n                adviseDocument?.result?.parameters\n                    ?.project as components[\"schemas\"][\"ProjectDef\"]\n            )?.requirements_locked\n        ) {\n            history.push(\"Original Lockfile\");\n        }\n\n        const ids = localStorage.getItem(LOCAL_STORAGE_KEY);\n        if (ids) {\n            history.push(...ids.split(\",\").filter(s => s !== \"\"));\n        }\n\n        return history;\n    }, [importText === \"\"]);\n\n    const COMPARE_COLORS = {\n        old: {\n            text: \"#b31412\",\n            background: \"#fad2cf\",\n        },\n        new: {\n            text: \"#217f70\",\n            background: \"#e3fbf7\",\n        },\n        change: {\n            text: \"#7f6921\",\n            background: \"#fbf3e3\",\n        },\n        equal: {\n            text: undefined,\n            background: \"#FFF\",\n        },\n    };\n\n    const comparePaths = (\n        obj1: any,\n        obj2: any,\n        label?: string,\n        mapping = (obj: typeof obj1) => obj,\n    ) => {\n        // if not null\n        const obj1_mapped = obj1 ? mapping(obj1) : null;\n        const obj2_mapped = obj2 ? mapping(obj2) : null;\n\n        // compare if equal\n        if (obj1_mapped && obj2_mapped) {\n            if (obj1_mapped === obj2_mapped) {\n                return (\n                    <>\n                        {renderCompareLine(\n                            obj1_mapped as string,\n                            \"equal\",\n                            label,\n                        )}\n                        {renderCompareLine(\n                            obj2_mapped as string,\n                            \"equal\",\n                            label,\n                        )}\n                    </>\n                );\n            } else {\n                return (\n                    <>\n                        {renderCompareLine(\n                            obj1_mapped as string,\n                            \"change\",\n                            label,\n                        )}\n                        {renderCompareLine(\n                            obj2_mapped as string,\n                            \"change\",\n                            label,\n                        )}\n                    </>\n                );\n            }\n        } else if (obj1_mapped) {\n            return (\n                <>\n                    {renderCompareLine(obj1_mapped as string, \"old\", label)}\n                    {renderCompareLine(obj2_mapped as string, \"\", label)}\n                </>\n            );\n        } else if (obj2_mapped) {\n            return (\n                <>\n                    {renderCompareLine(obj1_mapped as string, \"\", label)}\n                    {renderCompareLine(obj2_mapped as string, \"new\", label)}\n                </>\n            );\n        } else {\n            return undefined;\n        }\n    };\n\n    const renderCompareLine = (\n        value: string,\n        compareType: \"old\" | \"new\" | \"equal\" | \"change\" | \"\",\n        label?: string,\n    ) => {\n        const borderStyles = {\n            height: \"100%\",\n            paddingBottom: 0.25,\n            paddingTop: 0.25,\n            borderLeft: \"1px solid #e3e5e8\",\n            borderRight: \"1px solid #e3e5e8\",\n            overflow: \"hidden\",\n        };\n        if (compareType) {\n            return (\n                <Grid item xs={6}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{\n                            backgroundColor:\n                                COMPARE_COLORS[compareType].background,\n                            ...borderStyles,\n                        }}\n                    >\n                        {compareType !== \"equal\" ? (\n                            <Typography\n                                sx={{\n                                    textAlign: \"center\",\n                                    minWidth: \"2rem\",\n                                    color: COMPARE_COLORS[compareType].text,\n                                }}\n                                variant=\"body2\"\n                            >\n                                <b>\n                                    {compareType === \"old\"\n                                        ? \"-\"\n                                        : compareType === \"new\"\n                                        ? \"+\"\n                                        : \"~\"}\n                                </b>\n                            </Typography>\n                        ) : (\n                            <Box sx={{ minWidth: \"2rem\" }} />\n                        )}\n                        {label ? (\n                            <Typography\n                                sx={{\n                                    marginRight: 1,\n                                    color: COMPARE_COLORS[compareType].text,\n                                }}\n                                variant=\"body2\"\n                            >\n                                <b>{label + \":\"}</b>\n                            </Typography>\n                        ) : undefined}\n                        <Typography\n                            sx={{ color: COMPARE_COLORS[compareType].text }}\n                            display=\"inline\"\n                            variant=\"body2\"\n                        >\n                            {value}\n                        </Typography>\n                    </Stack>\n                </Grid>\n            );\n        } else {\n            return (\n                <Grid item xs={6}>\n                    <Box\n                        sx={{\n                            backgroundColor: COMPARE_COLORS[\"equal\"].background,\n                            ...borderStyles,\n                        }}\n                    />\n                </Grid>\n            );\n        }\n    };\n\n    const doubleRenderTypography = (\n        variant: Variant,\n        text: string,\n        styleOverrides: { [key: string]: string | number } = {},\n    ) => {\n        const headerStyles = {\n            paddingLeft: 4,\n            backgroundColor: \"white\",\n            paddingBottom: 1,\n            paddingTop: 4,\n            borderLeft: \"1px solid #e3e5e8\",\n            borderRight: \"1px solid #e3e5e8\",\n            ...styleOverrides,\n        };\n        return (\n            <>\n                <Grid item xs={6}>\n                    <Typography variant={variant} sx={headerStyles}>\n                        {text}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography variant={variant} sx={headerStyles}>\n                        {text}\n                    </Typography>\n                </Grid>\n            </>\n        );\n    };\n\n    const compareArrays = (\n        array1: any[] = [],\n        array2: any[] = [],\n        mapping = (obj: any) => obj,\n    ) => {\n        const s1 = array1.map(e => JSON.stringify(e));\n        const s2 = array2.map(e => JSON.stringify(e));\n        const set1 = new Set(s1);\n        const set2 = new Set(s2);\n\n        const merged = [...new Set([...s1, ...s2])];\n\n        return merged.sort().map(key => {\n            const value = JSON.parse(key);\n            return comparePaths(\n                set1.has(key) ? value : undefined,\n                set2.has(key) ? value : undefined,\n                undefined,\n                mapping,\n            );\n        });\n    };\n\n    const createProjectCompare = (\n        proj1?: components[\"schemas\"][\"ProjectDef\"],\n        proj2?: components[\"schemas\"][\"ProjectDef\"],\n    ) => {\n        const runtimeEnvironment: (keyof components[\"schemas\"][\"RuntimeEnvironment\"])[] =\n            [\n                \"name\",\n                \"python_version\",\n                \"cuda_version\",\n                \"openblas_version\",\n                \"openmpi_version\",\n                \"cudnn_version\",\n                \"mkl_version\",\n                \"platform\",\n                \"base_image\",\n            ];\n        const dev_packages = [\n            ...new Set([\n                ...Object.keys(\n                    (proj1?.requirements as Requirements)?.[\"dev-packages\"] ??\n                        {},\n                ),\n                ...Object.keys(\n                    (proj2?.requirements as Requirements)?.[\"dev-packages\"] ??\n                        {},\n                ),\n            ]),\n        ];\n        const packages = [\n            ...new Set([\n                ...Object.keys(\n                    (proj1?.requirements as Requirements)?.packages ?? {},\n                ),\n                ...Object.keys(\n                    (proj2?.requirements as Requirements)?.packages ?? {},\n                ),\n            ]),\n        ];\n        const requirements_locked = [\n            ...new Set([\n                ...Object.keys(\n                    (proj1?.requirements_locked as Lockfile)?.default ?? {},\n                ),\n                ...Object.keys(\n                    (proj2?.requirements_locked as Lockfile)?.default ?? {},\n                ),\n            ]),\n        ];\n\n        return (\n            <>\n                {dev_packages.length > 0\n                    ? doubleRenderTypography(\"h6\", \"Pipfile Dev Packages\", {\n                          paddingTop: 0.5,\n                          paddingBottom: 0.5,\n                      })\n                    : undefined}\n                {dev_packages.map(key => {\n                    return comparePaths(\n                        (proj1?.requirements as Requirements)?.[\"dev-packages\"][\n                            key\n                        ],\n                        (proj2?.requirements as Requirements)?.[\"dev-packages\"][\n                            key\n                        ],\n                        key,\n                    );\n                })}\n\n                {packages.length > 0\n                    ? doubleRenderTypography(\"h6\", \"Pipfile Packages\", {\n                          paddingTop: 0.5,\n                          paddingBottom: 0.5,\n                      })\n                    : undefined}\n                {packages.map(key => {\n                    return comparePaths(\n                        (proj1?.requirements as Requirements)?.packages[key],\n                        (proj2?.requirements as Requirements)?.packages[key],\n                        key,\n                    );\n                })}\n\n                {doubleRenderTypography(\"h6\", \"Pipfile.lock Sources\")}\n                {compareArrays(\n                    (proj1?.requirements_locked as Lockfile)?._meta?.sources,\n                    (proj2?.requirements_locked as Lockfile)?._meta?.sources,\n                    obj => {\n                        return `${obj.name} (${obj.url})`;\n                    },\n                )}\n\n                {doubleRenderTypography(\"h6\", \"Pipfile.lock Packages\")}\n                {requirements_locked.map(key => {\n                    return comparePaths(\n                        (proj1?.requirements_locked as Lockfile)?.default[key],\n                        (proj2?.requirements_locked as Lockfile)?.default[key],\n                        key,\n                        obj => {\n                            return obj?.version;\n                        },\n                    );\n                })}\n\n                {doubleRenderTypography(\"h6\", \"Runtime Environment\")}\n                {runtimeEnvironment.map(field => {\n                    return comparePaths(\n                        proj1?.runtime_environment?.[field],\n                        proj2?.runtime_environment?.[field],\n                        field,\n                    );\n                })}\n\n                {comparePaths(\n                    proj1?.runtime_environment?.operating_system,\n                    proj1?.runtime_environment?.operating_system,\n                    \"operating_system\",\n                    obj => {\n                        return obj.name + \" \" + obj.version;\n                    },\n                )}\n                {comparePaths(\n                    proj1?.runtime_environment?.hardware,\n                    proj1?.runtime_environment?.hardware,\n                    \"hardware\",\n                    obj => {\n                        let text = \"\";\n                        text += obj.cpu_model ?? \" \";\n                        text += obj.cpu_family ?? \" \";\n                        text += obj.gpu_model ?? \" \";\n                        if (text.trim()) {\n                            return text;\n                        }\n                    },\n                )}\n            </>\n        );\n    };\n\n    const createCompare = (\n        doc1: AdviseDocumentRequestResponseSuccess,\n        doc2: AdviseDocumentRequestResponseSuccess,\n    ) => {\n        const metadataFields: (keyof AdviseDocumentRequestResponseSuccess[\"metadata\"])[] =\n            [\n                \"document_id\",\n                \"analyzer\",\n                \"analyzer_version\",\n                \"datetime\",\n                \"thoth_deployment_name\",\n            ];\n        const argumentFields: string[] = [\n            \"beam_width\",\n            \"constraints\",\n            \"count\",\n            \"dev\",\n            \"labels\",\n            \"library_usage\",\n            \"limit\",\n            \"limit_latest_versions\",\n            \"no_pretty\",\n            \"output\",\n            \"pipeline\",\n            \"plot\",\n            \"predictor\",\n            \"recommendation_type\",\n            \"requirements\",\n            \"requirements_format\",\n            \"requirements_locked\",\n            \"runtime_environment\",\n            \"seed\",\n            \"user_stack_scoring\",\n        ];\n        const distributionFields: (keyof AdviseDocumentRequestResponseSuccess[\"metadata\"][\"distribution\"])[] =\n            [\"codename\", \"id\", \"like\", \"version\"];\n        const osReleaseFields: (keyof AdviseDocumentRequestResponseSuccess[\"metadata\"][\"os_release\"])[] =\n            [\"id\", \"name\", \"platform_id\", \"version\"];\n\n        return (\n            <>\n                {doubleRenderTypography(\"h5\", \"Metadata\", { paddingTop: 0 })}\n                {metadataFields.map(field => {\n                    return comparePaths(\n                        doc1?.metadata?.[field],\n                        doc2.metadata?.[field],\n                        field,\n                    );\n                })}\n                {comparePaths(\n                    doc1?.result?.error_msg,\n                    doc2?.result?.error_msg,\n                    \"error_msg\",\n                )}\n\n                {doubleRenderTypography(\"h6\", \"Arguments\")}\n                {argumentFields.map(field => {\n                    return comparePaths(\n                        (\n                            doc1?.metadata?.arguments?.advise as {\n                                [key: string]: any;\n                            }\n                        )?.[field],\n                        (\n                            doc2?.metadata?.arguments?.advise as {\n                                [key: string]: any;\n                            }\n                        )?.[field],\n                        field,\n                    );\n                })}\n\n                {doubleRenderTypography(\"h6\", \"Distribution\")}\n                {distributionFields.map(field => {\n                    return comparePaths(\n                        doc1?.metadata?.distribution?.[field],\n                        doc2?.metadata?.distribution?.[field],\n                        field,\n                    );\n                })}\n\n                {doubleRenderTypography(\"h6\", \"OS Release\")}\n                {osReleaseFields.map(field => {\n                    return comparePaths(\n                        doc1?.metadata?.os_release?.[field],\n                        doc2?.metadata?.os_release?.[field],\n                        field as string,\n                    );\n                })}\n\n                {doubleRenderTypography(\"h6\", \"Python\")}\n                {comparePaths(\n                    doc1?.metadata?.python,\n                    doc2?.metadata?.python,\n                    \"version\",\n                    obj => {\n                        return `${obj.major}.${obj.minor}.${obj.micro}`;\n                    },\n                )}\n                {comparePaths(\n                    doc1?.metadata?.python?.api_version,\n                    doc2?.metadata?.python?.api_version,\n                    \"api_version\",\n                )}\n                {comparePaths(\n                    doc1?.metadata?.python?.implementation_name,\n                    doc2?.metadata?.python?.implementation_name,\n                    \"implementation_name\",\n                )}\n                {comparePaths(\n                    doc1?.metadata?.python?.releaselevel,\n                    doc2?.metadata?.python?.releaselevel,\n                    \"release level\",\n                )}\n\n                {doubleRenderTypography(\"h5\", \"Result\")}\n                {comparePaths(\n                    doc1?.result?.report?.accepted_final_states_count,\n                    doc2?.result?.report?.accepted_final_states_count,\n                    \"accepted_final_states_count\",\n                )}\n                {comparePaths(\n                    doc1?.result?.report?.discarded_final_states_count,\n                    doc2?.result?.report?.discarded_final_states_count,\n                    \"discarded_final_states_count\",\n                )}\n                {comparePaths(\n                    doc1?.result?.report?.resolver_iterations,\n                    doc2?.result?.report?.resolver_iterations,\n                    \"resolver_iterations\",\n                )}\n                {comparePaths(\n                    doc1?.result?.report?.pipeline,\n                    doc2?.result?.report?.pipeline,\n                    \"pipeline\",\n                )}\n\n                {createProjectCompare(\n                    doc1?.result?.report?.products?.[0]?.project,\n                    doc2?.result?.report?.products?.[0]?.project,\n                )}\n\n                {doubleRenderTypography(\"h6\", \"Advised Manifest Changes\")}\n                {compareArrays(\n                    doc1?.result?.report?.products?.[0]\n                        ?.advised_manifest_changes ?? [],\n                    doc2?.result?.report?.products?.[0]\n                        ?.advised_manifest_changes ?? [],\n                    obj => {\n                        let text = \"\";\n                        obj.forEach(\n                            (change: {\n                                patch: {\n                                    path: any;\n                                    op: any;\n                                    value: { name: any; value: any };\n                                };\n                            }) => {\n                                text += `[ ${change?.patch?.path}; ${change?.patch?.op}; ${change?.patch?.value?.name}: ${change?.patch?.value?.value} ]`;\n                            },\n                        );\n                        return text;\n                    },\n                )}\n\n                {doubleRenderTypography(\"h6\", \"Stack Info\")}\n                {compareArrays(\n                    doc1?.result?.report?.stack_info,\n                    doc2?.result?.report?.stack_info,\n                    obj => {\n                        return obj.message;\n                    },\n                )}\n            </>\n        );\n    };\n\n    const compareJSX = useMemo(() => {\n        if (!adviseDocument || !compareDoc.data?.data) {\n            if (comparison === \"Original Lockfile\") {\n                return (\n                    <>\n                        {doubleRenderTypography(\"body2\", \" \", {\n                            borderTop: \"1px solid #e3e5e8\",\n                            marginTop: 4,\n                        })}\n                        {createProjectCompare(\n                            adviseDocument?.result?.report?.products?.[0]\n                                ?.project,\n                            (\n                                adviseDocument?.result?.parameters as {\n                                    project: components[\"schemas\"][\"ProjectDef\"];\n                                }\n                            )?.project,\n                        )}\n                        {doubleRenderTypography(\"body1\", \" \", {\n                            borderBottom: \"1px solid #e3e5e8\",\n                        })}\n                    </>\n                );\n            }\n            return undefined;\n        }\n        return (\n            <>\n                {doubleRenderTypography(\"body2\", \" \", {\n                    borderTop: \"1px solid #e3e5e8\",\n                    marginTop: 4,\n                })}\n                {createCompare(adviseDocument, compareDoc.data?.data)}\n                {doubleRenderTypography(\"body1\", \" \", {\n                    borderBottom: \"1px solid #e3e5e8\",\n                })}\n            </>\n        );\n    }, [adviseDocument, compareDoc.data?.data]);\n\n    return (\n        <Box>\n            <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n                <DialogTitle>Import another Advise document</DialogTitle>\n                <DialogContent>\n                    <Box\n                        component=\"form\"\n                        sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n                    >\n                        <TextField\n                            onChange={event =>\n                                setImportText(event.target.value)\n                            }\n                            label=\"Document ID\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                        />\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleClose()}>Cancel</Button>\n                    <Button onClick={() => handleImport()}>Import</Button>\n                </DialogActions>\n            </Dialog>\n            <Grid container mb={1} columnSpacing={10} sx={{ marginTop: 4 }}>\n                <Grid item xs={6} alignSelf=\"center\">\n                    <Typography\n                        sx={{\n                            textAlign: \"center\",\n                            textOverflow: \"ellipsis\",\n                            whiteSpace: \"nowrap\",\n                            overflow: \"hidden\",\n                        }}\n                        variant=\"h5\"\n                    >\n                        Current Advise Document\n                    </Typography>\n                </Grid>\n                <Grid item xs={6} alignSelf=\"center\">\n                    <Stack direction=\"row\" spacing={1} sx={{ marginX: \"10%\" }}>\n                        <FormControl fullWidth>\n                            <Select\n                                value={comparison}\n                                displayEmpty\n                                onChange={handleChange}\n                                size=\"small\"\n                            >\n                                <MenuItem disabled value=\"\">\n                                    <em>Select a comparison</em>\n                                </MenuItem>\n                                {localHistory.map(item => {\n                                    return (\n                                        <MenuItem key={item} value={item}>\n                                            {item}\n                                        </MenuItem>\n                                    );\n                                })}\n                            </Select>\n                        </FormControl>\n                        <IconButton onClick={handleClickOpen}>\n                            <AddRoundedIcon />\n                        </IconButton>\n                    </Stack>\n                </Grid>\n                {compareJSX}\n            </Grid>\n        </Box>\n    );\n};\n","import { useEffect, useState } from \"react\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { components } from \"lib/schema\";\nimport { PackageNodeValue } from \"../../lib/interfaces/PackageNodeValue\";\n\nexport type AdviseMetricType = {\n    justification: Record<string, number>;\n    /** which build is being displayed (new or old) */\n    build: string;\n};\n\nexport const useAdviseMetric = (\n    graph?: Graph<Node<PackageNodeValue>>,\n    adviseDocument?: components[\"schemas\"][\"AdviserResultResponse\"],\n) => {\n    const [metric, setMetric] = useState<AdviseMetricType>();\n\n    useEffect(() => {\n        if (!graph || !adviseDocument?.metadata) {\n            return;\n        }\n\n        const base: AdviseMetricType = {\n            justification: {},\n            build: \"\",\n        };\n\n        //build environment\n        base.build = `We have analysed an application stack running on ${adviseDocument.metadata.os_release.name} ${adviseDocument.metadata.os_release.version}, running Python (${adviseDocument.metadata.python.implementation_name}) ${adviseDocument.metadata.python.major}.${adviseDocument.metadata.python.minor}.${adviseDocument.metadata.python.micro}. It was Adviser Job ID ${adviseDocument.metadata.document_id}, by ${adviseDocument.metadata.analyzer} v${adviseDocument.metadata.analyzer_version}.`;\n\n        //justification counts\n        adviseDocument?.result?.report?.products?.[0]?.justification.forEach(\n            justification => {\n                if (base.justification[justification.type]) {\n                    base.justification[justification.type] =\n                        base.justification[justification.type] + 1;\n                } else {\n                    base.justification[justification.type] = 1;\n                }\n            },\n        );\n        setMetric(base);\n    }, [graph, adviseDocument]);\n\n    return metric;\n};\n","import { useEffect, useState } from \"react\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\nexport type DependencyMetricType = {\n    /** summary object of all roots aggregated */\n    all: {\n        /** number of dependencies directly related to root packages */\n        direct?: number;\n        /** number of dependencies directly or indirectly related to the direct packages*/\n        indirect?: number;\n        /** number of dependencies that have no dependents*/\n        roots?: number;\n    };\n    /** an object of key (package name) value pairs of specific roots with direct and indirect parameters for each value */\n    roots: {\n        [key: string]: {\n            /** roots own direct packages */\n            direct?: number;\n            /** roots own indirect packages */\n            indirect?: number;\n        };\n    };\n};\n\nexport const useDependencyMetric = (graph?: Graph<Node<PackageNodeValue>>) => {\n    const [metric, setMetric] = useState<DependencyMetricType>();\n\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        const base: DependencyMetricType = {\n            all: {},\n            roots: {},\n        };\n\n        const roots: string[] = [];\n        graph.nodes.forEach(value => {\n            if (value.value.depth === 0) {\n                roots.push(value.key);\n            }\n        });\n\n        const visited = new Set();\n\n        // for each starting node\n        roots.forEach(root => {\n            const rootObj = graph.nodes.get(root);\n            if (!rootObj) {\n                return;\n            }\n\n            const bfs = graph.graphSearch(rootObj);\n            const visitedOrder = Array.from(bfs);\n\n            visitedOrder.forEach(node => {\n                if (node.key === \"*App\") {\n                    return;\n                }\n\n                if (visited.has(node.value.id)) {\n                    return;\n                } else {\n                    visited.add(node.value.id);\n                }\n\n                const depth =\n                    node.value.depth === 0\n                        ? \"roots\"\n                        : node.value.depth === 1\n                        ? \"direct\"\n                        : \"indirect\";\n\n                base.all[depth] = (base.all[depth] ?? 0) + 1;\n\n                if (depth !== \"roots\") {\n                    if (!base.roots[root]) {\n                        base.roots[root] = {};\n                    }\n                    base.roots[root][depth] =\n                        (base.roots?.[root]?.[depth] ?? 0) + 1;\n                }\n            });\n        });\n\n        setMetric(base);\n    }, [graph]);\n\n    return metric;\n};\n","import { useEffect, useState } from \"react\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\nexport type LicenseMetricType = {\n    /** The license name */\n    [key: string]: {\n        /** The packages that use this license as an object */\n        packages: {\n            [key: string]: {\n                depth: number;\n                specific?: string;\n            };\n        };\n        /** License specific information */\n        metadata: {\n            /** If license is approved by OSI standards */\n            isOsiApproved: boolean | null;\n        };\n    };\n};\n\nexport const useLicenseMetric = (graph?: Graph<Node<PackageNodeValue>>) => {\n    const [metric, setMetric] = useState<LicenseMetricType>();\n\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        let base: LicenseMetricType = {};\n\n        const roots: string[] = [];\n        graph.nodes.forEach(value => {\n            if (value.value.depth === 0) {\n                roots.push(value.key);\n            }\n        });\n\n        const visited = new Set();\n\n        // for each starting node\n        roots.forEach(root => {\n            const rootObj = graph.nodes.get(root);\n            if (!rootObj) {\n                return;\n            }\n\n            const bfs = graph.graphSearch(rootObj);\n            const visitedOrder = Array.from(bfs);\n\n            visitedOrder.forEach(node => {\n                if (node.key === \"*App\") {\n                    return;\n                }\n\n                if (visited.has(node.value.id)) {\n                    return;\n                } else {\n                    visited.add(node.value.id);\n                }\n\n                // licence metric\n                type PackageLicenses = {\n                    generalLicense: string;\n                    specificLicense?: string;\n                    isOsiApproved: boolean | null;\n                }[];\n                const packageLicenses: PackageLicenses = [];\n\n                // get general classification\n                node?.value?.metadata?.Classifier?.forEach(classifier => {\n                    const parsed = classifier.split(\" :: \");\n\n                    if (parsed[0] === \"License\") {\n                        if (parsed[1] === \"OSI Approved\") {\n                            packageLicenses.push({\n                                generalLicense:\n                                    parsed?.[2] ?? node.value.metadata?.License,\n                                specificLicense: node.value.metadata?.License,\n                                isOsiApproved: true,\n                            });\n                        } else {\n                            packageLicenses.push({\n                                generalLicense:\n                                    parsed?.[1] ?? node.value.metadata?.License,\n                                specificLicense: node.value.metadata?.License,\n                                isOsiApproved: false,\n                            });\n                        }\n                    }\n                });\n\n                if (packageLicenses.length === 0) {\n                    packageLicenses.push({\n                        generalLicense: node?.value?.metadata?.License ?? \"N/A\",\n                        specificLicense:\n                            node?.value?.metadata?.License ?? \"N/A\",\n                        isOsiApproved: null,\n                    });\n                }\n\n                // get specific classification\n                packageLicenses.forEach(license => {\n                    if (!base[license.generalLicense]) {\n                        base[license.generalLicense] = {\n                            packages: {},\n                            metadata: {\n                                isOsiApproved: license.isOsiApproved,\n                            },\n                        };\n                    }\n\n                    base = {\n                        ...base,\n                        [license.generalLicense]: {\n                            ...base[license.generalLicense],\n                            packages: {\n                                ...(base[license.generalLicense].packages ??\n                                    null),\n                                [node.value.id]: {\n                                    depth: node.value?.depth ?? 0,\n                                    specific: license.specificLicense,\n                                },\n                            },\n                        },\n                    };\n                });\n            });\n        });\n\n        setMetric(base);\n    }, [graph]);\n\n    return metric;\n};\n","import { useMemo } from \"react\";\nimport {\n    useLicenseMetric,\n    useDependencyMetric,\n    useAdviseMetric,\n    DependencyMetricType,\n    LicenseMetricType,\n    AdviseMetricType,\n} from \"hooks/metrics\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\nimport { AdviseDocumentRequestResponseSuccess } from \"../api\";\n\nexport type AllMetrics = {\n    advise: AdviseMetricType | null;\n    dependencies: DependencyMetricType | null;\n    licenses: LicenseMetricType | null;\n};\n\nexport function useMetrics(\n    graph?: Graph<Node<PackageNodeValue>>,\n    adviseDocument?: AdviseDocumentRequestResponseSuccess,\n) {\n    const adviseMetric = useAdviseMetric(graph, adviseDocument);\n    const dependencyMetric = useDependencyMetric(graph);\n    const licenseMetric = useLicenseMetric(graph);\n\n    return useMemo(() => {\n        const base: AllMetrics = {\n            advise: null,\n            dependencies: null,\n            licenses: null,\n        };\n\n        if (adviseMetric) {\n            base.advise = adviseMetric;\n        }\n        if (dependencyMetric) {\n            base.dependencies = dependencyMetric;\n        }\n        if (licenseMetric) {\n            base.licenses = licenseMetric;\n        }\n\n        return base;\n    }, [adviseMetric, dependencyMetric, licenseMetric]);\n}\n","import { useEffect, useRef } from \"react\";\n\nexport const useInterval = (\n    callback: undefined | (() => void),\n    delay: number | null,\n) => {\n    const savedCallback = useRef<undefined | (() => void)>();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        function tick() {\n            if (savedCallback.current) {\n                savedCallback.current();\n            }\n        }\n        if (delay !== null) {\n            const id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQueries, useQuery } from \"react-query\";\nimport { paths } from \"lib/schema\";\nimport { UseQueryResult } from \"react-query/types/react/types\";\n\ntype path = paths[\"/python/package/version/metadata\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\nexport type PackageMetadataRequestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure =\n    path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\nexport const getPackageMetadata = (\n    name?: requestParams[\"name\"],\n    version?: requestParams[\"version\"],\n    index?: requestParams[\"index\"],\n    os_name?: requestParams[\"os_name\"],\n    os_version?: requestParams[\"os_version\"],\n    python_version?: requestParams[\"python_version\"],\n) => {\n    return axios.get<PackageMetadataRequestResponseSuccess>(\n        THOTH_URL + \"/python/package/version/metadata\",\n        {\n            params: {\n                name: name,\n                version: version,\n                index: index,\n                os_name: os_name,\n                os_version: os_version,\n                python_version: python_version,\n            },\n            headers: {\n                accept: \"application/json\",\n            },\n        },\n    );\n};\n\nexport const usePackageMetadata = (\n    name?: requestParams[\"name\"],\n    version?: requestParams[\"version\"],\n    index?: requestParams[\"index\"],\n    os_name?: requestParams[\"os_name\"],\n    os_version?: requestParams[\"os_version\"],\n    python_version?: requestParams[\"python_version\"],\n    config?: { [key: string]: any },\n): UseQueryResult<\n    AxiosResponse<PackageMetadataRequestResponseSuccess>,\n    AxiosError<requestResponseFailure>\n> => {\n    return useQuery<\n        AxiosResponse<PackageMetadataRequestResponseSuccess>,\n        AxiosError<requestResponseFailure>\n    >({\n        ...config,\n        enabled:\n            !!name &&\n            !!version &&\n            !!index &&\n            !!os_name &&\n            !!os_version &&\n            !!python_version,\n        queryKey: [\n            \"packageMetadata\",\n            name,\n            version,\n            index,\n            os_name,\n            os_version,\n            python_version,\n        ],\n        queryFn: () =>\n            getPackageMetadata(\n                name,\n                version,\n                index,\n                os_name,\n                os_version,\n                python_version,\n            ),\n    });\n};\n\nexport const usePackagesMetadata = (\n    packages: requestParams[],\n    config?: { [key: string]: any },\n): UseQueryResult<\n    AxiosResponse<PackageMetadataRequestResponseSuccess>,\n    AxiosError<requestResponseFailure>\n>[] => {\n    return useQueries(\n        packages.map(p => {\n            return {\n                ...config,\n                enabled:\n                    !!p.name &&\n                    !!p.version &&\n                    !!p.index &&\n                    !!p.os_name &&\n                    !!p.os_version &&\n                    !!p.python_version,\n                queryKey: [\n                    \"packageMetadata\",\n                    p.name,\n                    p.version,\n                    p.index,\n                    p.os_name,\n                    p.os_version,\n                    p.python_version,\n                ],\n                queryFn: () =>\n                    getPackageMetadata(\n                        p.name,\n                        p.version,\n                        p.index,\n                        p.os_name,\n                        p.os_version,\n                        p.python_version,\n                    ),\n            };\n        }),\n    ) as UseQueryResult<\n        AxiosResponse<PackageMetadataRequestResponseSuccess>,\n        AxiosError<requestResponseFailure>\n    >[];\n};\n","import { Node, NodeValue } from \"lib/interfaces/Node\";\n\n/**\n * Graph data structure implemented with an adjacent list\n */\nexport class Graph<NodeType extends Node<NodeValue>> {\n    nodes: Map<NodeType[\"key\"], NodeType>;\n    visEdges: {\n        id: number | string;\n        to: string;\n        from: string;\n    }[];\n\n    constructor() {\n        this.nodes = new Map();\n        this.visEdges = [];\n    }\n\n    /**\n     * Add a node to the graph.\n     */\n    addVertex(\n        key: NodeType[\"key\"],\n        value: NodeType[\"value\"],\n        Node: new (key: string, value: NodeType[\"value\"]) => NodeType,\n    ): NodeType {\n        let node = this.nodes.get(key);\n        if (node) {\n            return node;\n        }\n\n        node = new Node(key, value);\n        this.nodes.set(key, node);\n        return node;\n    }\n\n    /**\n     * Create a connection between the source node and the destination node.\n     * If the nodes don't exist, then it will make them on the fly.\n     */\n    addEdge(\n        source: NodeType[\"key\"],\n        destination: NodeType[\"key\"],\n    ): [NodeType | undefined, NodeType | undefined] {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n\n        if (sourceNode && destinationNode) {\n            sourceNode.addAdjacent(destinationNode);\n        }\n\n        return [sourceNode, destinationNode];\n    }\n\n    /**\n     * Generic graph search where we can pass a bfs or dfs\n     */\n    *graphSearch(first: NodeType, type = \"bfs\"): Generator<NodeType> {\n        const visited = new Set();\n        const visitList = [];\n\n        visitList.push(first);\n\n        while (visitList.length !== 0) {\n            const node = type === \"dfs\" ? visitList.pop() : visitList.shift();\n            if (node && !visited.has(node)) {\n                yield node;\n                visited.add(node);\n                node.getAdjacents().forEach(adj => visitList.push(adj));\n            }\n        }\n    }\n\n    /**\n     * Find a path between source and destination\n     * It might not be the optimal path\n     */\n    findPath(\n        source: NodeType[\"key\"],\n        destination: NodeType[\"key\"],\n        path: Set<NodeType> = new Set(),\n    ): NodeType[] {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n        const newPath = new Set(path);\n\n        if (!destinationNode || !sourceNode) return [];\n\n        newPath.add(sourceNode);\n\n        if (source === destination) {\n            return Array.from(newPath);\n        }\n\n        // eslint-disable-next-line no-restricted-syntax\n        for (const node of sourceNode.getAdjacents()) {\n            if (!newPath.has(node)) {\n                const nextPath = this.findPath(\n                    node.key, // TODO might still be node.value\n                    destination,\n                    newPath,\n                );\n                if (nextPath.length) {\n                    return nextPath;\n                }\n            }\n        }\n\n        return [];\n    }\n\n    findAllNodesOnAllPaths(\n        source: NodeType,\n        destinationKey: NodeType[\"key\"],\n        visited: Map<NodeType[\"key\"], NodeType> = new Map(),\n    ): Map<NodeType[\"key\"], NodeType> {\n        const visitList: (NodeType | undefined)[] = [];\n\n        visitList.push(source);\n\n        while (visitList.length !== 0) {\n            const node = visitList.pop();\n            if (node && node.key === destinationKey) {\n                continue;\n            }\n            if (node && !visited.has(node.key)) {\n                visited.set(node.key, node);\n                node.parents.forEach(parent =>\n                    visitList.push(this.nodes.get(parent)),\n                );\n            }\n        }\n\n        return visited;\n    }\n\n    /**\n     * Find all paths from source to destination\n     */\n    findAllPaths(\n        source: NodeType[\"key\"],\n        destination: NodeType[\"key\"],\n        path: Set<NodeType> = new Set(),\n    ): NodeType[][] {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n        const newPath = new Set(path);\n\n        if (!destinationNode || !sourceNode) return [];\n\n        newPath.add(sourceNode);\n\n        if (source === destination) {\n            return [Array.from(newPath)];\n        }\n\n        const paths: NodeType[][] = [];\n        sourceNode.getAdjacents().forEach(node => {\n            if (!newPath.has(node)) {\n                const nextPaths = this.findAllPaths(\n                    node.key, // TODO might need to use node.value.id\n                    destination,\n                    newPath,\n                );\n                nextPaths.forEach(nextPath => {\n                    paths.push(nextPath);\n                });\n            }\n        });\n        return paths;\n    }\n}\n","export interface NodeValue {\n    [key: string]: unknown;\n}\n\n/**\n * Graph node/vertex that hold adjacency nodes\n * For performance, uses a HashSet instead of array for adjacent.\n */\nexport class Node<GenericNodeValue extends NodeValue> {\n    /** Nodes connected (children) to this node **/\n    adjacents: Set<this>;\n    /** the unique identifier **/\n    key: string;\n    value: GenericNodeValue;\n    /** Nodes connected (parents) to this node **/\n    parents: Set<string>;\n\n    constructor(key: string, value: GenericNodeValue) {\n        this.adjacents = new Set(); // adjacency list\n        this.key = key; // key\n        this.value = value;\n        this.parents = new Set<string>();\n    }\n\n    /**\n     * Add node to adjacency list\n     * Runtime: O(1)\n     * @param {this} node\n     */\n    addAdjacent(node: this) {\n        this.adjacents.add(node);\n    }\n\n    /**\n     * Check if a Node is adjacent to other\n     * Runtime: O(1)\n     * @param {this} node\n     */\n    isAdjacent(node: this) {\n        return this.adjacents.has(node);\n    }\n\n    /**\n     * Get all adjacent nodes\n     */\n    getAdjacents() {\n        return Array.from(this.adjacents);\n    }\n}\n","import { useMemo } from \"react\";\n\nimport { usePackagesMetadata } from \"api\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { components, operations } from \"../lib/schema\";\nimport { PackageMetadata } from \"../lib/types/PackageMetadata\";\n\nexport type Requirements = {\n    \"dev-packages\": { [key: string]: string };\n    packages: { [key: string]: string };\n    requires: {\n        python_version: string;\n    };\n    source: {\n        name: string;\n        url: string;\n        verify_ssl: boolean;\n    }[];\n};\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useGraph(\n    data: operations[\"get_python_package_version_metadata\"][\"parameters\"][\"query\"][] = [],\n    knownRoots?: Requirements[\"packages\"],\n    justifications?: components[\"schemas\"][\"Justification\"],\n) {\n    const allMetadata = usePackagesMetadata(data);\n\n    const isLoading = useMemo(() => {\n        return allMetadata.some(query => query.isLoading);\n    }, [allMetadata]);\n\n    return useMemo(() => {\n        if (isLoading) {\n            return;\n        }\n\n        // create graph\n        const tempGraph = new Graph<Node<PackageNodeValue>>();\n        const notRoot: unknown[] = [];\n\n        // add data to graph\n        allMetadata.forEach(query => {\n            // if could not find metadata\n            if (query.error) {\n                const error = query.error;\n                const params =\n                    error.response?.data?.parameters ??\n                    error.response?.config?.params;\n\n                const value: PackageNodeValue = {\n                    id: params.name.toLowerCase(),\n                    label: params.name + \" \" + params.version,\n                    name: params.name,\n                    version: params.version,\n                    metadata: null,\n                    depth: 0,\n                };\n\n                // add package to graph\n                tempGraph.addVertex(value.id, value, Node);\n            }\n            // metadata was found\n            else if (query.isSuccess) {\n                const metadata = query.data.data.metadata;\n                const value = {\n                    id: metadata.package_name.toLowerCase(),\n                    label:\n                        metadata.package_name + \" \" + metadata.package_version,\n                    name: metadata.package_name,\n                    version: metadata.package_version,\n                    metadata: metadata.importlib_metadata\n                        .metadata as PackageMetadata,\n                };\n\n                // add package to graph\n                tempGraph.addVertex(value.id, value, Node);\n            }\n        });\n\n        // set edges\n        allMetadata.forEach(query => {\n            if (query.status === \"error\" || !query.data?.data) {\n                return;\n            }\n\n            const currentNode = tempGraph.nodes.get(\n                query.data.data.metadata.package_name.toLowerCase(),\n            );\n\n            if (currentNode) {\n                Object.keys(query.data.data.metadata.dependencies).forEach(\n                    dep => {\n                        const adjacentNode = tempGraph.nodes.get(dep);\n\n                        // if package exists in lockfile\n                        if (adjacentNode) {\n                            // add edge connecting parent and dependency\n                            tempGraph.addEdge(\n                                currentNode.value.id,\n                                adjacentNode.value.id,\n                            );\n                            // set parent\n                            adjacentNode.parents.add(currentNode.value.id);\n                            notRoot.push(adjacentNode.value.id);\n                        }\n                    },\n                );\n            }\n        });\n\n        // add app node to graph\n        const app = tempGraph.addVertex(\n            \"*App\",\n            {\n                id: \"*App\",\n                label: \"App\",\n                depth: -1,\n            },\n            Node,\n        );\n\n        notRoot.push(\"*App\");\n\n        const visited = new Set();\n        const visitList: Node<PackageNodeValue>[] = [];\n\n        // get roots and connect to app\n        tempGraph.nodes.forEach((value, key) => {\n            if (\n                !notRoot.includes(key) ||\n                Object.keys(knownRoots ?? {}).includes(key)\n            ) {\n                value.value.depth = 0;\n                value.parents.add(\"*App\");\n                visitList.push(value);\n                tempGraph.addEdge(app.key, value.key);\n            }\n        });\n\n        const justifiedPackages = new Map();\n\n        if (justifications) {\n            justifications.forEach(\n                (\n                    justification: components[\"schemas\"][\"Justification\"][number] & {\n                        package_name?: string;\n                    },\n                ) => {\n                    const key = justification.package_name ?? \"*App\";\n                    if (justifiedPackages.has(key)) {\n                        justifiedPackages.set(key, [\n                            ...justifiedPackages.get(key),\n                            justification,\n                        ]);\n                    } else {\n                        justifiedPackages.set(key, [justification]);\n                    }\n                },\n            );\n        }\n\n        // set depth and parent packages using dfs\n        while (visitList.length !== 0) {\n            const node = visitList.pop();\n            if (node && !visited.has(node)) {\n                visited.add(node);\n\n                // check if there is a justification for change\n                if (justifiedPackages.has(node.key)) {\n                    node.value.justifications = justifiedPackages.get(node.key);\n                }\n\n                const adjs = node.getAdjacents();\n\n                for (let i = 0; i < adjs.length; i++) {\n                    // update depth\n                    adjs[i].value.depth = Math.min(\n                        (node.value?.depth ?? 0) + 1,\n                        adjs[i].value.depth ?? (node.value?.depth ?? 0) + 2,\n                    );\n                    visitList.push(adjs[i]);\n                }\n            }\n        }\n\n        const visGraphEdges = new Map();\n\n        // add edges from old graph\n        tempGraph.nodes.forEach(value => {\n            // set package edges\n            value.adjacents.forEach(adj => {\n                visGraphEdges.set(value.value.id + adj.value.id, {\n                    id: value.value.id + adj.value.id,\n                    to: value.value.id,\n                    from: adj.value.id,\n                });\n            });\n        });\n\n        // add edges to merged graph Object\n        tempGraph[\"visEdges\"] = Array.from(visGraphEdges.values());\n\n        return tempGraph;\n    }, [isLoading, knownRoots]);\n}\n","import React from \"react\";\n\ninterface IAdviseNotFound {\n    analysis_id: string;\n}\n\nexport const AdviseNotFound = ({ analysis_id }: IAdviseNotFound) => {\n    return <div>`&quot;{analysis_id}&quot;` not found</div>;\n};\n","import * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"@mui/material\";\n\ninterface IProps {\n    children: React.ReactNode;\n    goHome?: boolean;\n}\n\n/**\n * Layout is used in most of the app and allows for backwards navigation.\n */\nexport const NavigationLayout = ({ children, goHome = false }: IProps) => {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Button\n                onClick={() => {\n                    if (goHome) {\n                        navigate(\"/\");\n                    } else {\n                        navigate(-1);\n                    }\n                }}\n            >\n                {goHome ? \"go home\" : \"go back\"}\n            </Button>\n            <div>{children}</div>\n        </>\n    );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { Route, Routes, useParams, Navigate } from \"react-router-dom\";\n\n// layouts\nimport { AdviseLayout } from \"components/Layout\";\n\n// sub-routes\nimport { AdviseSummary } from \"./AdviseSummary\";\nimport { AdviseDetails } from \"./AdviseDetails\";\nimport { AdviseCompare } from \"./AdviseCompare\";\n\n// feature specific imports\nimport { useAdviseDocument, useAdviseLogs } from \"../api\";\nimport { formatLockfile } from \"utils/formatLockfile\";\nimport { AdviseHeader } from \"../components\";\nimport { useMetrics } from \"../hooks\";\nimport { Requirements, useGraph } from \"hooks\";\n\n// misc\nimport { CircularProgress } from \"@mui/material\";\nimport { AdviseNotFound } from \"./AdviseNotFound\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\nimport { AxiosResponse } from \"axios\";\nimport { components } from \"lib/schema\";\nimport { LOCAL_STORAGE_KEY } from \"config\";\n\ntype statusResponse = components[\"schemas\"][\"AnalysisStatusResponse\"];\n\nexport const AdviseRoutes = () => {\n    // get document id\n    const { analysis_id } = useParams();\n\n    // api get thoth advise document\n    const adviseDocument = useAdviseDocument(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: (data: AxiosResponse<statusResponse>) => {\n            if (data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n\n    useEffect(() => {\n        if (adviseDocument.isSuccess && analysis_id) {\n            const ids = localStorage.getItem(LOCAL_STORAGE_KEY) ?? \"\";\n\n            const split = ids.split(\",\");\n            if (!split.includes(analysis_id)) {\n                split.push(analysis_id);\n                localStorage.setItem(LOCAL_STORAGE_KEY, split.join(\",\"));\n            }\n        }\n    }, [adviseDocument.status]);\n\n    const logs = useAdviseLogs(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: () => {\n            if (adviseDocument.data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n\n    // format advise graph data\n    const graphData = useMemo(() => {\n        if (\n            adviseDocument.isSuccess &&\n            adviseDocument.data.data?.result?.report?.products?.[0]?.project\n        ) {\n            const lockfile = adviseDocument.data.data?.result?.report\n                ?.products?.[0]?.project as components[\"schemas\"][\"ProjectDef\"];\n            return formatLockfile(lockfile);\n        }\n    }, [adviseDocument]);\n\n    const graph = useGraph(\n        graphData,\n        (\n            (\n                adviseDocument?.data?.data?.result?.report?.products?.[0]\n                    ?.project as components[\"schemas\"][\"ProjectDef\"]\n            )?.requirements as Requirements\n        )?.packages,\n        adviseDocument?.data?.data?.result?.report?.products?.[0]\n            ?.justification,\n    );\n\n    // compute metric data\n    const metrics = useMetrics(graph, adviseDocument.data?.data);\n\n    if (adviseDocument.isLoading) {\n        return (\n            <div className=\"w-full h-48 flex justify-center items-center\">\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (!adviseDocument.data) {\n        return (\n            <NavigationLayout>\n                <AdviseNotFound analysis_id={analysis_id ?? \"no id\"} />\n            </NavigationLayout>\n        );\n    }\n\n    return (\n        <NavigationLayout goHome={true}>\n            <AdviseLayout\n                header={\n                    <AdviseHeader\n                        adviseDocument={adviseDocument.data.data}\n                        logs={logs.data?.data?.log}\n                    />\n                }\n            >\n                <Routes>\n                    <Route\n                        path=\"summary\"\n                        element={<AdviseSummary metrics={metrics} />}\n                    />\n                    <Route\n                        path=\"details\"\n                        element={<AdviseDetails graph={graph} />}\n                    />\n                    <Route\n                        path=\"compare\"\n                        element={\n                            <AdviseCompare\n                                adviseDocument={adviseDocument.data.data}\n                            />\n                        }\n                    />\n                    <Route path=\"*\" element={<Navigate to=\"summary\" />} />\n                </Routes>\n            </AdviseLayout>\n        </NavigationLayout>\n    );\n};\n","import { components, operations } from \"lib/schema\";\n\nexport type Lockfile = {\n    default: {\n        [key: string]: {\n            version: string;\n            markers: string;\n            hashes: string[];\n        };\n    };\n    _meta: {\n        sources: {\n            name: string;\n            url: string;\n            verify_ssl: boolean;\n        }[];\n    };\n};\n\nexport function formatLockfile(\n    lockfile: components[\"schemas\"][\"ProjectDef\"],\n): operations[\"get_python_package_version_metadata\"][\"parameters\"][\"query\"][] {\n    return Object.entries(\n        (lockfile.requirements_locked as Lockfile).default,\n    ).map(([key, value]) => {\n        return {\n            name: key,\n            version: value.version.replace(\"==\", \"\"),\n            index: \"https://pypi.org/simple\", //TODO no hard code\n            os_name:\n                lockfile?.runtime_environment?.operating_system?.name ?? \"\",\n            os_version:\n                lockfile?.runtime_environment?.operating_system?.version ?? \"\",\n            python_version: lockfile?.runtime_environment?.python_version ?? \"\",\n        };\n    });\n}\n","import React, { useContext } from \"react\";\nimport Select from \"@mui/material/Select\";\nimport { Box, MenuItem, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SpecContext } from \"features/package/routes/PackageOverview\";\nimport { BoxTypeMap } from \"@mui/material/Box/Box\";\n\ninterface IParamDropdown {\n    options: { value: string }[];\n    type: string;\n    label?: string;\n    disabled?: boolean;\n    props?: BoxTypeMap;\n}\n\nexport const ParamDropdown = ({\n    options,\n    type,\n    label,\n    disabled,\n    ...props\n}: IParamDropdown) => {\n    const navigate = useNavigate();\n    const { specs, defaultSpecs } = useContext(SpecContext);\n\n    const handleChange = (event: { target: { value: string } }) => {\n        switch (type) {\n            case \"package_version\":\n                navigate(\n                    `/package/${specs.package_name}/${event.target.value}`,\n                );\n                break;\n            case \"index_url\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(event.target.value)}`,\n                );\n                break;\n            case \"os_name\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url ?? \"\",\n                    )}/${event.target.value}`,\n                );\n\n                break;\n            case \"os_version\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url ?? \"\",\n                    )}/${specs.os_name ?? defaultSpecs.os_name}/${\n                        event.target.value\n                    }`,\n                );\n                break;\n            case \"python_version\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url ?? \"\",\n                    )}/${specs.os_name ?? defaultSpecs.os_name}/${\n                        specs.os_version ?? defaultSpecs.os_version\n                    }/${event.target.value}`,\n                );\n                break;\n        }\n    };\n\n    return (\n        <Box {...props}>\n            <Typography variant=\"body2\">{label}</Typography>\n            <Select\n                displayEmpty\n                fullWidth\n                value={specs[type as keyof typeof specs] ?? \"\"}\n                onChange={handleChange}\n                size=\"small\"\n                variant=\"outlined\"\n                disabled={disabled}\n                renderValue={value => {\n                    if (!value) {\n                        return (\n                            <em style={{ color: \"grey\" }}>\n                                {defaultSpecs?.[type as keyof typeof specs] ??\n                                    label}\n                            </em>\n                        );\n                    } else {\n                        return value;\n                    }\n                }}\n            >\n                <MenuItem disabled value=\"\">\n                    <em>{label}</em>\n                </MenuItem>\n                {options.map(option => {\n                    return (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.value}\n                        </MenuItem>\n                    );\n                })}\n            </Select>\n        </Box>\n    );\n};\n","import React, { useContext, useMemo, useState } from \"react\";\n\n// material-ui\nimport { Box, Grid, IconButton, Skeleton, Typography } from \"@mui/material\";\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport { ParamDropdown } from \"../ParamDropdown\";\nimport { SpecContext } from \"../../routes/PackageOverview\";\nimport { components } from \"lib/schema\";\n\nexport interface IPackageHeader {\n    /** Package metadata object.*/\n    metadata?: {\n        /** Name of package. */\n        Name: string;\n        /** Description of package. */\n        Summary?: string;\n        /** License of package */\n        License?: string;\n    };\n    /** list of all versions of a package **/\n    allVersions?: components[\"schemas\"][\"PythonPackageVersionsResponse\"][\"versions\"];\n    /** list of all environments of a package, version, index **/\n    allEnvironments?: components[\"schemas\"][\"PythonPackageVersionEnvironmentsResponse\"][\"environments\"];\n}\n\n/**\n * A header for package metadata.\n */\nexport const PackageHeader = ({\n    metadata,\n    allVersions = [],\n    allEnvironments = [],\n}: IPackageHeader) => {\n    const { defaultSpecs, specs } = useContext(SpecContext);\n    const [showEnvParams, setShowEnvParams] = useState(false);\n\n    const versionOptions = useMemo(() => {\n        const dups = new Set();\n        return allVersions\n            .filter(version => {\n                if (!dups.has(version.package_version)) {\n                    dups.add(version.package_version);\n                    return true;\n                }\n                return false;\n            })\n            .map(version => {\n                return {\n                    value: version.package_version,\n                };\n            })\n            .sort((a, b) => (a.value.split(\".\") > b.value.split(\".\") ? 1 : -1));\n    }, [allVersions]);\n\n    const indexUrlOptions = useMemo(() => {\n        const dups = new Set();\n        return allVersions\n            .filter(version => {\n                if (specs.package_version) {\n                    return specs.package_version === version.package_version;\n                } else {\n                    return (\n                        defaultSpecs.package_version === version.package_version\n                    );\n                }\n            })\n            .filter(version => {\n                if (!dups.has(version.index_url)) {\n                    dups.add(version.index_url);\n                    return true;\n                }\n                return false;\n            })\n            .map(version => {\n                return {\n                    value: version.index_url,\n                };\n            });\n    }, [allVersions]);\n\n    const [osNameOptions, osVersionOptions, pythonVersionOptions] =\n        useMemo(() => {\n            const name = allEnvironments.map(env => {\n                return {\n                    value: env.os_name,\n                };\n            });\n            const version = allEnvironments\n                .filter(env => !specs.os_name || specs.os_name === env.os_name)\n                .map(env => {\n                    return {\n                        value: env.os_version,\n                    };\n                });\n            const pyVersion = allEnvironments\n                .filter(\n                    env =>\n                        (!specs.os_name || specs.os_name === env.os_name) &&\n                        (!specs.os_version ||\n                            specs.os_version === env.os_version),\n                )\n                .map(env => {\n                    return {\n                        value: env.python_version,\n                    };\n                });\n            return [name, version, pyVersion];\n        }, [allEnvironments, specs]);\n\n    if (!metadata) {\n        return (\n            <Box data-testid=\"package-header-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div>\n            <Grid container alignItems=\"flex-end\" spacing={1}>\n                <Grid item>\n                    <Typography variant=\"h4\" mr={2}>\n                        <b>{metadata?.Name}</b>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <ParamDropdown\n                        options={versionOptions ?? []}\n                        type=\"package_version\"\n                        label={\"Version\"}\n                    />\n                </Grid>\n                <Grid item>\n                    <ParamDropdown\n                        options={indexUrlOptions ?? []}\n                        type=\"index_url\"\n                        label={\"Index URL\"}\n                        disabled={specs.package_version === undefined}\n                    />\n                </Grid>\n                {showEnvParams ? (\n                    <React.Fragment>\n                        <Grid item>\n                            <ParamDropdown\n                                options={osNameOptions ?? []}\n                                type=\"os_name\"\n                                label={\"OS Name\"}\n                                disabled={specs.index_url === undefined}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ParamDropdown\n                                options={osVersionOptions ?? []}\n                                type=\"os_version\"\n                                label={\"OS Version\"}\n                                disabled={specs.os_name === undefined}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ParamDropdown\n                                options={pythonVersionOptions ?? []}\n                                type=\"python_version\"\n                                label={\"Python Version\"}\n                                disabled={specs.os_version === undefined}\n                            />\n                        </Grid>\n                    </React.Fragment>\n                ) : null}\n                <Grid item xs={1}>\n                    <IconButton\n                        onClick={() => setShowEnvParams(!showEnvParams)}\n                        data-testid=\"package-header-expand-button\"\n                    >\n                        {showEnvParams ? (\n                            <ArrowLeftIcon fontSize=\"large\" />\n                        ) : (\n                            <ArrowRightIcon fontSize=\"large\" />\n                        )}\n                    </IconButton>\n                </Grid>\n            </Grid>\n\n            <Typography gutterBottom variant=\"body1\" mt={2}>\n                {metadata?.Summary ?? \"NaN\"}\n            </Typography>\n            <div>\n                <IconText\n                    text={metadata?.License ?? \"NaN\"}\n                    icon={<GavelIcon />}\n                />\n            </div>\n        </div>\n    );\n};\n","import { Button, Grid, Menu, MenuItem, Typography } from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport React, { useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface IVersionDropdown {\n    node: {\n        name: string;\n        versions: string[];\n        specifier: string;\n    };\n}\n\nexport const VersionDropdown = ({ node }: IVersionDropdown) => {\n    const [open, setOpen] = React.useState<string | null | undefined>(null);\n    const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n    const navigate = useNavigate();\n\n    const versionOptions = useMemo(() => {\n        const options: { [key: string]: string[] } = {};\n        const distribution = [0, 0];\n        const noDup = new Set();\n        node.versions.forEach(version => {\n            const split = version.split(\".\");\n            const key = split[0] + \".\" + (split[1] ?? \"\");\n\n            if (options[key] === undefined) {\n                options[key] = [];\n                distribution[0] += 1;\n            }\n            if (!noDup.has(version)) {\n                options[key].push(version);\n                distribution[1] += 1;\n                noDup.add(version);\n            }\n        });\n\n        // check if there are too many buckets\n        if (distribution[0] / distribution[1] > 0.25) {\n            // merge buckets\n            const buckets = Math.ceil(distribution[0] * 0.25);\n            const fixedOptions: { [key: string]: string[] } = {};\n            let currentKey: string;\n            Object.keys(options).forEach((key, index, array) => {\n                if (index % buckets === 0) {\n                    currentKey = `${key} - ${\n                        array[index + buckets - 1] ?? array.at(-1)\n                    }`;\n                    fixedOptions[currentKey] = [];\n                }\n                fixedOptions[currentKey].push(...options[array[index]]);\n            });\n            return fixedOptions;\n        }\n\n        return options;\n    }, [node]);\n\n    return (\n        <div>\n            <Button\n                onClick={event => {\n                    setOpen(node.name);\n                    setAnchorEl(event.currentTarget);\n                }}\n                variant=\"outlined\"\n                endIcon={<KeyboardArrowDownIcon />}\n            >\n                {node.specifier ?? \"ANY\"}\n            </Button>\n            <Menu\n                open={open === node.name}\n                anchorEl={anchorEl}\n                onClose={() => {\n                    setOpen(undefined);\n                    setAnchorEl(null);\n                }}\n                PaperProps={{\n                    style: {\n                        maxHeight: \"40%\",\n                        maxWidth: \"50%\",\n                    },\n                }}\n            >\n                <MenuItem disabled={true}>\n                    Select a version to navigate to:\n                </MenuItem>\n                <Grid container alignContent=\"flex-start\">\n                    {Object.entries(versionOptions).map(([key, value]) => {\n                        return (\n                            <Grid item xs key={key}>\n                                <MenuItem sx={{ mt: 2 }} disabled divider>\n                                    {key}\n                                </MenuItem>\n                                {value.map(version => {\n                                    return (\n                                        <MenuItem\n                                            key={version}\n                                            onClick={() =>\n                                                navigate(\n                                                    `/package/${node.name}/${version}`,\n                                                )\n                                            }\n                                        >\n                                            <Typography variant={\"body2\"}>\n                                                {version}\n                                            </Typography>\n                                        </MenuItem>\n                                    );\n                                })}\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </Menu>\n        </div>\n    );\n};\n","// react\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport InfoCard from \"components/Elements/InfoCard\";\nimport { Box, Divider, Grid, Skeleton, Typography } from \"@mui/material\";\nimport { VersionDropdown } from \"./VersionDropdown\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { SimplePackageNodeValue } from \"lib/interfaces/SimplePackageNodeValue\";\n\ninterface IPackageDependencies {\n    graph?: Graph<Node<SimplePackageNodeValue>>;\n}\n\ntype PackageDependenciesMetric = {\n    name: string;\n    versions: string[];\n    specifier: string;\n    extra: string[];\n};\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const PackageDependencies = ({ graph }: IPackageDependencies) => {\n    const metric = useMemo(() => {\n        if (!graph?.nodes) {\n            return;\n        }\n\n        const root = graph.nodes.get(\"*App\");\n\n        if (root) {\n            const bfs = graph.graphSearch(root);\n            const visitedOrder = Array.from(bfs);\n\n            const metric: PackageDependenciesMetric[] = [];\n\n            visitedOrder.forEach(node => {\n                if (node.key !== \"*App\" && !node.value.metadata) {\n                    metric.push({\n                        name: node.value.label ?? node.key,\n                        versions: node.value.versions ?? [],\n                        specifier: node.value.specifier ?? \"*\",\n                        extra: node.value.extra ?? [],\n                    });\n                }\n            });\n\n            return metric;\n        }\n    }, [graph]);\n\n    if (!metric) {\n        return (\n            <Box data-testid=\"package-dependencies-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <InfoCard\n            cardMeta={{\n                title: \"Dependencies\",\n            }}\n            cardBody={\n                <div data-testid=\"package-dependencies-loaded\">\n                    <Grid container>\n                        <Grid item xs>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Package\n                            </Typography>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Versions\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Extra\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Divider />\n                    <Grid container rowSpacing={2} mt={1}>\n                        {metric.map(node => {\n                            return (\n                                <Grid container item xs={12} key={node.name}>\n                                    <Grid item xs>\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            {node.name}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <VersionDropdown node={node} />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            {node.extra?.join(\", \")}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                </div>\n            }\n        />\n    );\n};\n","import React from \"react\";\n\ninterface IPackageNotFound {\n    package_name: string;\n    package_version: string;\n}\n\nexport const PackageNotFound = ({\n    package_name,\n    package_version,\n}: IPackageNotFound) => {\n    return (\n        <div>\n            `&quot;{package_name}\n            {package_version ? \" \" + package_version : \"\"}&quot;` not found\n        </div>\n    );\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useQuery, useInfiniteQuery } from \"react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/versions\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\nexport type PackageVersionsRequestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure =\n    path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\nexport const getPackageVersions = async (\n    name: requestParams[\"name\"],\n    page: requestParams[\"page\"] = 0,\n    per_page: requestParams[\"per_page\"] = 100,\n) => {\n    return axios.get<PackageVersionsRequestResponseSuccess>(\n        THOTH_URL + \"/python/package/versions\",\n        {\n            params: {\n                name: name,\n                page: page,\n                per_page: per_page,\n            },\n            headers: {\n                accept: \"application/json\",\n            },\n        },\n    );\n};\n\nexport const usePackageVersions = (\n    name: requestParams[\"name\"],\n    config?: { [key: string]: unknown },\n) => {\n    return useQuery<\n        AxiosResponse<PackageVersionsRequestResponseSuccess>,\n        AxiosError<requestResponseFailure>\n    >({\n        ...config,\n        enabled: !!name,\n        queryKey: [\"packageVersions\", name],\n        queryFn: () => getPackageVersions(name),\n    });\n};\n\nexport const useInfinitePackageVersions = (\n    name: requestParams[\"name\"],\n    config?: { [key: string]: unknown },\n) => {\n    return useInfiniteQuery<\n        AxiosResponse<PackageVersionsRequestResponseSuccess>,\n        AxiosError<requestResponseFailure>\n    >({\n        ...config,\n        enabled: !!name,\n        queryKey: [\"packageVersions\", name],\n        queryFn: input => {\n            return getPackageVersions(name, input.pageParam);\n        },\n        getNextPageParam: lastPage => {\n            const parameters: requestParams = (\n                lastPage.data as typeof lastPage.data & {\n                    parameters: requestParams;\n                }\n            ).parameters;\n            return lastPage.data.versions.length === 0\n                ? undefined\n                : (parameters.page ?? 0) + 1;\n        },\n    });\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/version/environments\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\n\nexport const getPackageEnvironments = async (\n    name?: requestParams[\"name\"],\n    version?: requestParams[\"version\"],\n    index?: requestParams[\"index\"],\n) => {\n    return axios.get(THOTH_URL + \"/python/package/version/environments\", {\n        params: {\n            name: name,\n            version: version,\n            index: index,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const usePackageEnvironments = (\n    name?: requestParams[\"name\"],\n    version?: requestParams[\"version\"],\n    index?: requestParams[\"index\"],\n    config?: { [key: string]: unknown },\n) => {\n    return useQuery<AxiosResponse<requestResponseSuccess>, AxiosError>({\n        ...config,\n        enabled: !!name && !!version && !!index,\n        queryKey: [\"packageEnvironments\", name, version, index],\n        queryFn: () => getPackageEnvironments(name, version, index),\n    });\n};\n","import { useEffect, useState } from \"react\";\nimport {\n    PackageVersionsRequestResponseSuccess,\n    useInfinitePackageVersions,\n} from \"../api\";\n\nexport const useAllVersions = (package_name: string) => {\n    const versions = useInfinitePackageVersions(package_name);\n    const [allVersions, setAllVersions] = useState<\n        PackageVersionsRequestResponseSuccess[\"versions\"] | undefined\n    >([]);\n\n    useEffect(() => {\n        if (versions.isSuccess) {\n            // if has a next page, and is not currently fetching a page\n            if (versions.hasNextPage && !versions.isFetchingNextPage) {\n                versions.fetchNextPage().then();\n            } else if (!versions.hasNextPage && !versions.isFetchingNextPage) {\n                let merged: PackageVersionsRequestResponseSuccess[\"versions\"] =\n                    [];\n                versions.data.pages.forEach(page => {\n                    merged = [...merged, ...page.data.versions];\n                });\n                if (merged.length > 0) {\n                    merged = merged.reverse();\n                    setAllVersions(merged);\n                } else {\n                    setAllVersions(undefined);\n                }\n            }\n        }\n    }, [versions.data]);\n\n    return allVersions;\n};\n","import React from \"react\";\n\ninterface IErrorPage {\n    message: string;\n    type: string | number;\n    reason: string;\n}\n\nexport const ErrorPage = ({ message, type, reason }: IErrorPage) => {\n    return (\n        <div>\n            <p>\n                {type}\n                {\": \"}\n                {message}\n            </p>\n            <p>{reason}</p>\n        </div>\n    );\n};\n","// React\nimport React, { useEffect, useMemo, useState } from \"react\";\n\n// local\nimport { PackageDependencies, PackageHeader } from \"../components\";\n\n// material-ui\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport { usePackageMetadata } from \"api\";\nimport { PackageNotFound } from \"./PackageNotFound\";\nimport { useAllVersions, useSimpleGraph } from \"../hooks\";\nimport { usePackageEnvironments } from \"../api\";\nimport { ErrorPage } from \"routes/ErrorPage\";\nimport { PackageMetadata } from \"lib/types/PackageMetadata\";\n\ntype SpecDetails = {\n    package_name: string;\n    package_version?: string;\n    index_url?: string;\n    os_name?: string;\n    os_version?: string;\n    python_version?: string;\n};\n\nexport const SpecContext = React.createContext<{\n    specs: SpecDetails;\n    defaultSpecs: SpecDetails;\n}>({ specs: { package_name: \"\" }, defaultSpecs: { package_name: \"\" } });\n\n// The page that displays all analysis data\nexport const PackageOverview = () => {\n    const params = useParams<SpecDetails>();\n    const [defaultSpecs, setDefaultSpecs] = useState<SpecDetails>({\n        package_name: params.package_name ?? \"\",\n        package_version: undefined,\n        index_url: undefined,\n        os_name: undefined,\n        os_version: undefined,\n        python_version: undefined,\n    });\n\n    // what is on the url params\n    const specs = useMemo<SpecDetails>(() => {\n        return {\n            package_name: params.package_name ?? \"\",\n            package_version: params?.package_version,\n            index_url: params?.index_url\n                ? decodeURIComponent(params.index_url)\n                : undefined,\n            os_name: params?.os_name,\n            os_version: params?.os_version,\n            python_version: params?.python_version,\n        };\n    }, [params]);\n\n    // get all pages of versions/indexes and merge them together\n    const allVersions = useAllVersions(specs.package_name);\n\n    // get environments for specific package, version, index\n    const allEnvironments = usePackageEnvironments(\n        specs.package_name,\n        specs.package_version ?? defaultSpecs.package_version,\n        specs.index_url ?? defaultSpecs.index_url,\n        { useErrorBoundary: false },\n    );\n\n    // some params are optional but still need a default value\n    useEffect(() => {\n        const d: SpecDetails = {\n            package_name: params.package_name ?? \"\",\n            package_version: undefined,\n            index_url: undefined,\n            os_name: undefined,\n            os_version: undefined,\n            python_version: undefined,\n        };\n\n        // get default package version and index\n        // needs package name and versions list\n        if (specs.package_name) {\n            if (allVersions && allVersions.length > 0) {\n                d.package_version = allVersions.at(0)?.package_version;\n                d.index_url = allVersions.at(0)?.index_url;\n            }\n        }\n\n        // get default environment\n        // needs list of environments\n        if (\n            allEnvironments.data &&\n            allEnvironments.data.data.environments.length > 0\n        ) {\n            const filtered = allEnvironments.data.data.environments.filter(\n                env =>\n                    (!specs.os_name || specs.os_name === env.os_name) &&\n                    (!specs.os_version || specs.os_version === env.os_version),\n            );\n            if (filtered.length > 0) {\n                d.os_name = filtered.at(0)?.os_name;\n                d.os_version = filtered.at(0)?.os_version;\n                d.python_version = filtered.at(0)?.python_version;\n            }\n        }\n\n        if (\n            Object.entries(defaultSpecs).some(\n                ([key, val]) => d[key as keyof typeof d] !== val,\n            )\n        ) {\n            setDefaultSpecs(d);\n        }\n    }, [allVersions, allEnvironments, specs]);\n\n    // get package metadata\n    const metadata = usePackageMetadata(\n        specs.package_name,\n        specs.package_version ?? defaultSpecs.package_version,\n        specs.index_url ?? defaultSpecs.index_url,\n        specs.os_name ?? defaultSpecs.os_name,\n        specs.os_version ?? defaultSpecs.os_version,\n        specs.python_version ?? defaultSpecs.python_version,\n        { useErrorBoundary: false },\n    );\n\n    const graph = useSimpleGraph(metadata);\n\n    if (metadata.isLoading || allVersions?.length === 0) {\n        return (\n            <div\n                className=\"w-full h-48 flex justify-center items-center\"\n                data-testid=\"loading\"\n            >\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (!metadata.data) {\n        if (metadata?.error?.response?.data?.error) {\n            return (\n                <ErrorPage\n                    message={metadata.error.response.data.error}\n                    type={metadata.error.response.status}\n                    reason={`${\n                        metadata?.error?.config?.url\n                    } failed with params ${JSON.stringify(\n                        metadata?.error?.config?.params,\n                    )}`}\n                />\n            );\n        }\n        return (\n            <PackageNotFound\n                package_name={params.package_name ?? \"\"}\n                package_version={params.package_version ?? \"\"}\n            />\n        );\n    }\n\n    return (\n        <SpecContext.Provider value={{ specs, defaultSpecs }}>\n            <Grid container>\n                <Grid item xs={12} mb={3}>\n                    <PackageHeader\n                        metadata={\n                            metadata.data.data.metadata.importlib_metadata\n                                .metadata as PackageMetadata\n                        }\n                        allVersions={allVersions}\n                        allEnvironments={\n                            allEnvironments?.data?.data?.environments\n                        }\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <PackageDependencies graph={graph} />\n                </Grid>\n            </Grid>\n        </SpecContext.Provider>\n    );\n};\n","import { useEffect, useState } from \"react\";\n\n// utils\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\n\nimport { usePackageMetadata } from \"api\";\nimport { PackageMetadata } from \"lib/types/PackageMetadata\";\nimport { SimplePackageNodeValue } from \"lib/interfaces/SimplePackageNodeValue\";\n\nexport type PackageDependencyMetric = {\n    extra: string[];\n    extras: string[];\n    marker: string;\n    marker_evaluated: string;\n    marker_evaluation_error: string | null;\n    marker_evaluation_result: boolean;\n    specifier: string;\n    versions: string[];\n};\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useSimpleGraph(\n    metadata: ReturnType<typeof usePackageMetadata>,\n) {\n    const [graph, setGraph] = useState<Graph<Node<SimplePackageNodeValue>>>();\n\n    useEffect(() => {\n        if (metadata.status !== \"success\") {\n            return;\n        }\n\n        // create graph\n        const tempGraph: Graph<Node<SimplePackageNodeValue>> = new Graph();\n\n        // add app node to graph\n        const app = tempGraph.addVertex(\n            \"*App\",\n            {\n                id: \"*App\",\n                label: \"App\",\n                depth: -1,\n            },\n            Node,\n        );\n\n        const root = tempGraph.addVertex(\n            metadata.data.data.metadata.package_name.toLowerCase(),\n            {\n                id: metadata.data.data.metadata.package_name.toLowerCase(),\n                label: metadata.data.data.metadata.package_name,\n                metadata: metadata.data.data.metadata.importlib_metadata\n                    .metadata as PackageMetadata,\n                depth: 0,\n            },\n            Node,\n        );\n\n        root.parents = new Set();\n        root.parents.add(\"*App\");\n        tempGraph.addEdge(app.key, root.key);\n\n        // add deps to graph\n        Object.entries(\n            metadata.data.data.metadata.dependencies as {\n                [key: string]: PackageDependencyMetric;\n            },\n        ).forEach(([name, value]) => {\n            // add package to graph\n            const node = tempGraph.addVertex(\n                name.toLowerCase(),\n                {\n                    id: name.toLowerCase(),\n                    label: name,\n                    metadata: null,\n                    versions: value.versions,\n                    specifier: value.specifier,\n                    extra: value.extra,\n                    depth: 1,\n                },\n                Node,\n            );\n            node.parents = new Set();\n\n            tempGraph.addEdge(root.key, node.key);\n\n            // set parent\n            node.parents.add(root.key);\n        });\n\n        setGraph(tempGraph);\n    }, [metadata.data]);\n\n    return graph;\n}\n","// React\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport { PackageOverview } from \"./PackageOverview\";\nimport { NotFound } from \"routes/NotFound\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\n\n// The page that displays all analysis data\nexport const PackageRoutes = () => {\n    return (\n        <NavigationLayout>\n            <Routes>\n                <Route\n                    path=\"/:package_version/:index_url/:os_name/:os_version/:python_version\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url/:os_name\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url/:os_name/:os_version\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url\"\n                    element={<PackageOverview />}\n                />\n                <Route path=\"/:package_version\" element={<PackageOverview />} />\n                <Route path=\"/\" element={<PackageOverview />} />\n                <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n        </NavigationLayout>\n    );\n};\n","// React\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Chip, Button, Collapse, Stack } from \"@mui/material\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport FeedRoundedIcon from \"@mui/icons-material/FeedRounded\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport { calcTime } from \"utils/calcTime\";\nimport { components } from \"lib/schema\";\nimport { ChipProps } from \"@mui/material/Chip/Chip\";\n\ninterface IImageHeader {\n    imageDocument: components[\"schemas\"][\"AnalysisResultResponse\"] &\n        components[\"schemas\"][\"AnalysisStatusResponse\"];\n    logs?: components[\"schemas\"][\"AnalysisLogResponse\"][\"log\"];\n}\n\n/**\n * Displays basic Advise document information and\n * displays any errors, info, or warnings that came up\n * in the document generation.\n */\nexport const ImageHeader = ({ imageDocument, logs }: IImageHeader) => {\n    const [showLogs, setShowLogs] = React.useState(false);\n    const [selectedLine, setSelectedLine] = React.useState<\n        number | undefined\n    >();\n\n    // get status of the report\n    const [statusText, statusColor]: [string, ChipProps[\"color\"] | undefined] =\n        useMemo(() => {\n            if (imageDocument?.result) {\n                return [\"COMPLETE\", \"success\"];\n            }\n            // if report is not done\n            else if (imageDocument?.status?.state) {\n                return [imageDocument.status.state.toUpperCase(), \"info\"];\n            } else {\n                return [\"UNKNOWN\", undefined];\n            }\n        }, [imageDocument]);\n\n    return (\n        <div>\n            <Typography variant=\"h4\" mb={2}>\n                <b>\n                    {imageDocument?.metadata?.document_id ??\n                        imageDocument.parameters.analysis_id}\n                </b>\n            </Typography>\n            <Stack direction=\"row\" spacing={2}>\n                <Chip label={statusText} color={statusColor} />\n                <IconText\n                    text={calcTime(\n                        imageDocument?.status?.finished_at,\n                        imageDocument?.status?.started_at,\n                        imageDocument?.metadata?.datetime,\n                    )}\n                    icon={<AccessTimeIcon />}\n                />\n                <Button\n                    sx={{ marginLeft: 2 }}\n                    onClick={() => setShowLogs(!showLogs)}\n                >\n                    <IconText text=\"Logs\" icon={<FeedRoundedIcon />} />\n                </Button>\n            </Stack>\n            <Collapse in={showLogs}>\n                {logs?.split(\"\\n\").map((line, i) => {\n                    return (\n                        <Typography\n                            key={i}\n                            noWrap={selectedLine !== i}\n                            onClick={() =>\n                                setSelectedLine(\n                                    selectedLine === i ? undefined : i,\n                                )\n                            }\n                            variant=\"body2\"\n                            sx={{\n                                backgroundColor:\n                                    selectedLine === i\n                                        ? \"lightyellow\"\n                                        : i % 2 === 0\n                                        ? \"lightgray\"\n                                        : \"unset\",\n                            }}\n                        >\n                            {line}\n                        </Typography>\n                    );\n                }) ?? \"Image log is not available.\"}\n            </Collapse>\n        </div>\n    );\n};\n","// react\nimport React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\n// material-ui\nimport { Box, Skeleton } from \"@mui/material\";\nimport { components } from \"lib/schema\";\n\ninterface IDebInfo {\n    /** An object holding metric info. */\n    imageDocument: components[\"schemas\"][\"AnalysisResultResponse\"];\n}\n\nconst columns = [\n    { field: \"name\", headerName: \"Package Name\", flex: 1 },\n    { field: \"version\", headerName: \"Version\", flex: 0.5 },\n    { field: \"arch\", headerName: \"Architecture\", flex: 0.5 },\n];\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const DebInfo = ({ imageDocument }: IDebInfo) => {\n    if (!imageDocument) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div style={{ height: 400, width: \"100%\" }}>\n            <DataGrid\n                disableSelectionOnClick\n                disableColumnSelector\n                hideFooterSelectedRowCount\n                getRowId={row => row.package_identifier}\n                density=\"compact\"\n                rows={imageDocument?.result?.[\"deb\"]}\n                columns={columns}\n                pageSize={50}\n                rowsPerPageOptions={[25, 50, 100]}\n            />\n        </div>\n    );\n};\n","// react\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Box, Grid, Skeleton, Stack, Typography } from \"@mui/material\";\nimport { Chip } from \"@mui/material\";\nimport { ImageDocumentRequestResponseSuccess } from \"../../api\";\n\ninterface IPythonInfo {\n    imageDocument?: ImageDocumentRequestResponseSuccess;\n}\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const PythonInfo = ({ imageDocument }: IPythonInfo) => {\n    if (!imageDocument) {\n        return (\n            <Box data-testid=\"python-info-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    const files = useMemo(() => {\n        if (!imageDocument?.result?.[\"python-files\"]) {\n            return [];\n        }\n\n        const paths = new Map();\n        imageDocument.result[\"python-files\"].forEach(file => {\n            const split = file.filepath.split(\"/\", 4);\n            const key = split[1] + \"/\" + split[2] + \"/\" + split[3];\n            if (paths.has(key)) {\n                paths.set(key, paths.get(key) + 1);\n            } else {\n                paths.set(key, 1);\n            }\n        });\n        return Array.from(paths.entries()).map(([key, value]) => {\n            return {\n                path: key,\n                count: value,\n            };\n        });\n    }, [imageDocument]);\n\n    const interpreters = useMemo(() => {\n        return imageDocument.result[\"python-interpreters\"].filter(\n            interpreter => !!interpreter.version,\n        );\n    }, [imageDocument]);\n\n    return (\n        <Stack direction=\"column\" spacing={3}>\n            {interpreters?.length > 0 ? (\n                <Stack direction=\"row\" spacing={1} alignItems={\"center\"}>\n                    <Typography variant={\"h6\"}>\n                        Python interpreters:{\" \"}\n                    </Typography>\n                    {interpreters.map((interpreter, i) => {\n                        return (\n                            <Chip\n                                data-testid=\"python-info-chip\"\n                                key={(interpreter?.version ?? \"\") + i}\n                                label={interpreter.version}\n                            />\n                        );\n                    })}\n                </Stack>\n            ) : undefined}\n            <div data-testid=\"python-info-loaded\">\n                <Stack direction=\"row\" spacing={1} mb={1} alignItems={\"center\"}>\n                    <Typography variant={\"h6\"}>\n                        Total number of Python files:{\" \"}\n                    </Typography>\n                    <Typography variant={\"body1\"}>\n                        {files.reduce((prev, cur) => prev + cur.count, 0)}\n                    </Typography>\n                </Stack>\n                <Grid container>\n                    {files\n                        .sort((a, b) => b.count - a.count)\n                        .map(file => {\n                            return (\n                                <Grid\n                                    key={file.path}\n                                    item\n                                    xs={12}\n                                    lg={6}\n                                    xl={4}\n                                >\n                                    <Stack\n                                        ml={3}\n                                        direction=\"row\"\n                                        spacing={1}\n                                        alignItems={\"center\"}\n                                        justifyContent={\"space-between\"}\n                                    >\n                                        <Typography variant={\"body2\"}>\n                                            {file.path}:\n                                        </Typography>\n                                        <Typography variant={\"body2\"}>\n                                            <b>{file.count}</b>\n                                        </Typography>\n                                    </Stack>\n                                </Grid>\n                            );\n                        })}\n                </Grid>\n            </div>\n        </Stack>\n    );\n};\n","// react\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Box, Grid, Skeleton, Stack, Typography } from \"@mui/material\";\nimport { Chip } from \"@mui/material\";\nimport {\n    ImageDocumentRequestResponseSuccess,\n    ImageMetadataRequestResponseSuccess,\n} from \"../../api\";\n\nexport interface IImageInfo {\n    imageDocument?: ImageDocumentRequestResponseSuccess;\n    imageMetadata?: ImageMetadataRequestResponseSuccess;\n}\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const ImageInfo = ({ imageDocument, imageMetadata }: IImageInfo) => {\n    const params = useMemo(() => {\n        if (imageMetadata) {\n            return imageMetadata as ImageMetadataRequestResponseSuccess & {\n                labels: { [key: string]: string };\n            };\n        } else if (imageDocument?.result?.[\"skopeo-inspect\"]) {\n            return {\n                architecture:\n                    imageDocument.result[\"skopeo-inspect\"].Architecture,\n                created: imageDocument.result[\"skopeo-inspect\"].Created,\n                digest: imageDocument.result[\"skopeo-inspect\"].Digest,\n                docker_version:\n                    imageDocument.result[\"skopeo-inspect\"].DockerVersion,\n                labels: imageDocument.result[\"skopeo-inspect\"].Labels as {\n                    [key: string]: string;\n                },\n                layers: imageDocument.result[\"skopeo-inspect\"].Layers,\n                os: imageDocument.result[\"skopeo-inspect\"].Os,\n                repo_tags: imageDocument.result[\"skopeo-inspect\"].RepoTags,\n            };\n        }\n    }, [imageDocument, imageMetadata]);\n\n    if (!params) {\n        return (\n            <Box data-testid=\"image-info-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n                    <Typography variant={\"body1\"}>\n                        <b>{params.labels?.[\"io.k8s.display-name\"]}</b>\n                    </Typography>\n                    <Chip label={params.labels?.name.split(\":\").at(-1)} />\n                </Stack>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant={\"h6\"} mb={1}>\n                    General information\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Summary\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels?.summary}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Description\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels?.description}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Provider\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels?.vendor}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Maintainer\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels?.maintainer}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Build date\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {new Date(\n                        params.labels?.[\"build-date\"] as string,\n                    ).toLocaleDateString()}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Typography variant={\"h6\"} mb={1}>\n                    Technical information\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Image name\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>{params.labels?.name}</Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Image version\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels?.version}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Architecture\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>{params.architecture}</Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Usage\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    <code>{params.labels?.usage}</code>\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Exposed Ports\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels?.[\"io.openshift.expose-services\"]}\n                </Typography>\n            </Grid>\n        </Grid>\n    );\n};\n","// react\nimport React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\n// material-ui\nimport { Box, Skeleton } from \"@mui/material\";\nimport { ImageDocumentRequestResponseSuccess } from \"../../api\";\n\ninterface IRPMInfo {\n    imageDocument?: ImageDocumentRequestResponseSuccess;\n}\n\ntype RPMDependency = {\n    arch: string;\n    dependencies: string[];\n    epoch: string | null;\n    name: string;\n    package_identifier: string;\n    release: string;\n    src: boolean;\n    version: string;\n};\n\nconst columns = [\n    { field: \"name\", headerName: \"Package Name\", flex: 1 },\n    { field: \"version\", headerName: \"Version\", flex: 0.5 },\n    { field: \"release\", headerName: \"Release\", flex: 0.25 },\n    {\n        field: \"dependencies\",\n        headerName: \"Dependencies\",\n        flex: 0.5,\n        valueGetter: (params: { row: RPMDependency }) =>\n            params.row?.dependencies?.length ?? 0,\n        sortable: false,\n    },\n    { field: \"epoch\", headerName: \"Epoch\", flex: 0.5 },\n    { field: \"arch\", headerName: \"Architecture\", flex: 0.5 },\n];\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const RPMInfo = ({ imageDocument }: IRPMInfo) => {\n    if (!imageDocument) {\n        return (\n            <Box data-testid=\"rpm-info-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div\n            style={{ height: 400, width: \"100%\" }}\n            data-testid=\"rpm-info-loaded\"\n        >\n            <DataGrid\n                disableSelectionOnClick\n                disableColumnSelector\n                hideFooterSelectedRowCount\n                getRowId={row => row.package_identifier}\n                density=\"compact\"\n                rows={\n                    imageDocument?.result?.[\n                        \"rpm-dependencies\"\n                    ] as RPMDependency[]\n                }\n                columns={columns}\n                pageSize={50}\n                rowsPerPageOptions={[25, 50, 100]}\n            />\n        </div>\n    );\n};\n","import React from \"react\";\nimport InfoCard from \"components/Elements/InfoCard\";\nimport { DependenciesMetric, LicenseMetric } from \"components/Metrics\";\nimport { Masonry } from \"@mui/lab\";\nimport { DebInfo, PythonInfo, ImageInfo, RPMInfo } from \"../components\";\nimport {\n    ImageDocumentRequestResponseSuccess,\n    ImageMetadataRequestResponseSuccess,\n} from \"../api\";\nimport { ImageMetrics } from \"../hooks\";\n\ninterface IImageSummary {\n    imageDocument: ImageDocumentRequestResponseSuccess;\n    imageMetadata?: ImageMetadataRequestResponseSuccess;\n    metrics: ImageMetrics;\n}\n\nexport const ImageSummary = ({\n    metrics,\n    imageDocument,\n    imageMetadata,\n}: IImageSummary) => {\n    return (\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3} sx={{ mb: 3, mt: 1 }}>\n            {imageDocument || imageMetadata ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"Image Details\",\n                        }}\n                        cardBody={\n                            <ImageInfo\n                                imageDocument={imageDocument}\n                                imageMetadata={imageMetadata}\n                            />\n                        }\n                    />\n                </div>\n            ) : undefined}\n\n            {imageDocument?.result?.[\"python-interpreters\"]?.length > 0 ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"Python Details\",\n                        }}\n                        cardBody={<PythonInfo imageDocument={imageDocument} />}\n                    />\n                </div>\n            ) : undefined}\n\n            {imageDocument?.result?.[\"rpm-dependencies\"]?.length > 0 ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"RPM Details\",\n                        }}\n                        cardBody={<RPMInfo imageDocument={imageDocument} />}\n                    />\n                </div>\n            ) : undefined}\n\n            {imageDocument.result?.deb?.length > 0 ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"Debian Details\",\n                        }}\n                        cardBody={<DebInfo imageDocument={imageDocument} />}\n                    />{\" \"}\n                </div>\n            ) : undefined}\n\n            {Object.keys(metrics?.dependencies?.all ?? {}).length !== 0 ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"Python Packages Dependencies\",\n                        }}\n                        cardBody={\n                            <DependenciesMetric\n                                metric={metrics?.dependencies}\n                            />\n                        }\n                    />\n                </div>\n            ) : undefined}\n\n            {Object.keys(metrics?.licenses ?? {}).length !== 0 ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"Python Packages Licenses\",\n                        }}\n                        cardBody={<LicenseMetric metric={metrics?.licenses} />}\n                    />{\" \"}\n                </div>\n            ) : undefined}\n        </Masonry>\n    );\n};\n","import axios, { AxiosResponse, AxiosError } from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { paths } from \"lib/schema\";\nimport { THOTH_URL } from \"config\";\n\ntype path = paths[\"/analyze/{analysis_id}\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"path\"];\nexport type ImageDocumentRequestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"] &\n        path[\"responses\"][\"202\"][\"content\"][\"application/json\"];\nexport type ImageDocumentRequestResponseFailure =\n    path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n        path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\n/**\n * An async function that returns a promise for `{base_url}/analyze`\n *\n * @param analysis_id - the image document id (ex: `package-extract-211112223258-38af1a4746733b53`)\n */\nexport const getImageDocument = async (\n    analysis_id?: requestParams[\"analysis_id\"],\n) => {\n    return axios.get<ImageDocumentRequestResponseSuccess>(\n        THOTH_URL + \"/analyze/\" + analysis_id,\n        {\n            headers: {\n                accept: \"application/json\",\n            },\n        },\n    );\n};\n\nexport const useImageDocument = (\n    analysis_id?: requestParams[\"analysis_id\"],\n    config?: { [key: string]: unknown },\n) => {\n    return useQuery<\n        AxiosResponse<ImageDocumentRequestResponseSuccess>,\n        AxiosError<ImageDocumentRequestResponseFailure>\n    >({\n        ...config,\n        enabled: !!analysis_id,\n        queryKey: [\"ImageDocument\", analysis_id],\n        queryFn: () => getImageDocument(analysis_id),\n    });\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/analyze/{analysis_id}/log\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"path\"];\ntype requestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure =\n    path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n        path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\n/**\n * An async function that returns a promise for `{base_url}/image/logs`\n *\n * @param analysis_id - the image document id (ex: `package-extract-211112223258-38af1a4746733b53`)\n */\nexport const getImageLogs = async (\n    analysis_id?: requestParams[\"analysis_id\"],\n) => {\n    return axios.get(THOTH_URL + \"/analyze/\" + analysis_id + \"/log\", {\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useImageLogs = (\n    analysis_id?: requestParams[\"analysis_id\"],\n    config?: { [key: string]: unknown },\n) => {\n    return useQuery<\n        AxiosResponse<requestResponseSuccess>,\n        AxiosError<requestResponseFailure>\n    >({\n        ...config,\n        enabled: !!analysis_id,\n        queryKey: [\"ImageLogs\", analysis_id],\n        queryFn: () => getImageLogs(analysis_id),\n    });\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/image/metadata\"][\"post\"];\ntype requestParams = path[\"parameters\"][\"query\"];\nexport type ImageMetadataRequestResponseSuccess =\n    path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\nexport type ImageMetadataRequestResponseFailure =\n    path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n        path[\"responses\"][\"403\"][\"content\"][\"application/json\"];\n\n/**\n * An async function that returns a promise for `{base_url}/analyze`\n *\n * @param image the name of the image\n */\nexport const getImageMetadata = async (image: requestParams[\"image\"]) => {\n    return axios.post(\n        THOTH_URL + \"/image/metadata\",\n        {},\n        {\n            params: {\n                image: image,\n            },\n            headers: {\n                accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        },\n    );\n};\n\nexport const useImageMetadata = (\n    image_name: requestParams[\"image\"],\n    config?: { [key: string]: unknown },\n) => {\n    return useQuery<\n        AxiosResponse<ImageMetadataRequestResponseSuccess>,\n        AxiosError<ImageMetadataRequestResponseFailure>\n    >({\n        ...config,\n        enabled: !!image_name,\n        queryKey: [\"ImageMetadata\", image_name],\n        queryFn: () => getImageMetadata(image_name),\n    });\n};\n","import React from \"react\";\n\ninterface IImageNotFound {\n    analysis_id?: string;\n}\n\nexport const ImageNotFound = ({ analysis_id }: IImageNotFound) => {\n    return <div> &quot;{analysis_id}&quot; not found</div>;\n};\n","import React, { useMemo } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\n// sub-routes\nimport { ImageSummary } from \"./ImageSummary\";\n\n// feature specific imports\nimport { useImageDocument, useImageLogs, useImageMetadata } from \"../api\";\n\n// misc\nimport { CircularProgress } from \"@mui/material\";\nimport { ImageNotFound } from \"./ImageNotFound\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\nimport { useGraph } from \"hooks\";\nimport { useMetrics } from \"../hooks\";\nimport { ImageHeader } from \"../components\";\nimport { formatImagePackages } from \"../utils\";\nimport { components } from \"lib/schema\";\nimport { AxiosResponse } from \"axios\";\nimport { postImageAnalyze } from \"../../home/api\";\n\nexport const ImageRoutes = () => {\n    // get document id\n    const { analysis_id } = useParams();\n    const { state } = useLocation();\n    const navigate = useNavigate();\n\n    // api get thoth image analysis document\n    const imageDocument = useImageDocument(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: (\n            data: AxiosResponse<\n                components[\"schemas\"][\"AnalysisStatusResponse\"]\n            >,\n        ) => {\n            if (data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n\n    const imageMetadata = useImageMetadata(\n        (state as { image_name?: string })?.image_name ??\n            (\n                imageDocument.data?.data?.metadata?.arguments as {\n                    \"extract-image\": { image: string };\n                }\n            )?.[\"extract-image\"]?.image,\n    );\n\n    const logs = useImageLogs(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: () => {\n            if (imageDocument.data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n\n    // format init graph data\n    const graphData = useMemo(() => {\n        if (imageDocument.data?.data?.metadata) {\n            const os = {\n                name:\n                    (imageDocument.data.data.result?.[\"operating-system\"]\n                        ?.id as string) ?? \"rhel\",\n                version:\n                    (\n                        imageDocument.data.data.result?.[\"operating-system\"]\n                            ?.version_id as string\n                    )?.split(\".\")[0] ?? \"8\",\n                python_version:\n                    imageDocument.data.data.metadata.python.major +\n                    \".\" +\n                    imageDocument.data.data.metadata.python.minor,\n            };\n            return formatImagePackages(\n                imageDocument.data.data.result[\"python-packages\"],\n                os,\n            );\n        }\n    }, [imageDocument.data]);\n\n    // create init graph\n    const graph = useGraph(graphData);\n\n    // compute metric data\n    const metrics = useMetrics(graph);\n\n    if (imageDocument?.isLoading) {\n        return (\n            <div className=\"w-full h-48 flex justify-center items-center\">\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (!imageDocument?.data) {\n        const name = (state as { image_name?: string })?.image_name;\n        if (name) {\n            postImageAnalyze(name).then(response => {\n                navigate(\"/image/\" + response.data.analysis_id, {\n                    state: { image_name: name },\n                });\n            });\n            return (\n                <div className=\"w-full h-48 flex justify-center items-center\">\n                    <CircularProgress />\n                </div>\n            );\n        }\n        return (\n            <div data-testid=\"image-not-loaded\">\n                <NavigationLayout>\n                    <ImageNotFound analysis_id={analysis_id} />\n                </NavigationLayout>\n            </div>\n        );\n    }\n\n    return (\n        <div data-testid=\"image-loaded\">\n            <NavigationLayout goHome={true}>\n                <ImageHeader\n                    imageDocument={imageDocument.data?.data}\n                    logs={logs.data?.data?.log}\n                />\n                <ImageSummary\n                    imageMetadata={imageMetadata.data?.data}\n                    metrics={metrics}\n                    imageDocument={imageDocument.data?.data}\n                />\n            </NavigationLayout>\n        </div>\n    );\n};\n","import { useMemo } from \"react\";\nimport {\n    useLicenseMetric,\n    useDependencyMetric,\n    DependencyMetricType,\n    LicenseMetricType,\n} from \"hooks/metrics\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\nexport type ImageMetrics = {\n    dependencies: DependencyMetricType | null;\n    licenses: LicenseMetricType | null;\n};\n\nexport function useMetrics(graph?: Graph<Node<PackageNodeValue>>) {\n    const dependencyMetric = useDependencyMetric(graph);\n    const licenseMetric = useLicenseMetric(graph);\n\n    return useMemo(() => {\n        const base: ImageMetrics = {\n            dependencies: null,\n            licenses: null,\n        };\n\n        if (dependencyMetric) {\n            base.dependencies = dependencyMetric;\n        }\n        if (licenseMetric) {\n            base.licenses = licenseMetric;\n        }\n\n        return base;\n    }, [dependencyMetric, licenseMetric]);\n}\n","type ImagePackages = {\n    package_name: string;\n    package_version: string;\n};\n\ntype OS = { name: string; version: string; python_version: string };\n\nexport function formatImagePackages(image_packages: ImagePackages[], os: OS) {\n    return image_packages.map(p => {\n        return {\n            name: p.package_name,\n            version: p.package_version,\n            index: \"https://pypi.org/simple\",\n            os_name: os.name,\n            os_version: os.version,\n            python_version: os.python_version,\n        };\n    });\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Home } from \"features/home\";\nimport { NotFound } from \"routes/NotFound\";\nimport { AdviseRoutes } from \"features/advise\";\nimport { PackageRoutes } from \"features/package\";\nimport { ImageRoutes } from \"features/image\";\n\nexport const RouterConfig = () => {\n    return (\n        <BrowserRouter\n            basename={\n                process.env.REACT_APP_DEPLOYMENT === \"STAGE\"\n                    ? \"/search-stage\"\n                    : \"/search\"\n            }\n        >\n            <Routes>\n                <Route path={\"/\"} element={<Home />} />\n                <Route\n                    path={\"advise/:analysis_id/*\"}\n                    element={<AdviseRoutes />}\n                />\n                <Route\n                    path={\"package/:package_name/*\"}\n                    element={<PackageRoutes />}\n                />\n                <Route\n                    path={\"image/:analysis_id/*\"}\n                    element={<ImageRoutes />}\n                />\n                <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default RouterConfig;\n","import React from \"react\";\nimport { AppProvider } from \"providers/app\";\nimport RouterConfig from \"routes/RouterConfig\";\n\nfunction App() {\n    return (\n        <AppProvider>\n            <RouterConfig />\n        </AppProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}