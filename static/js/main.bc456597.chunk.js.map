{"version":3,"sources":["lib/react-query.ts","styles/Theme.tsx","stores/Global.tsx","providers/app.tsx","components/atoms/TabPanel/TabPanel.tsx","assets/thoth-logo.png","components/molecules/SearchBar/SearchBar.tsx","config/index.ts","features/home/api/postAdvise.ts","features/home/api/getPackageExists.ts","features/home/api/postImageAnalyze.ts","features/home/api/getContainerImages.ts","features/home/components/PackageSearch.tsx","features/home/components/ComboBox/ComboBox.tsx","components/organisms/GenericTable/EnhancedTableHead.tsx","components/organisms/GenericTable/utils.ts","components/atoms/Loading/Loading.tsx","components/organisms/GenericTable/GenericTable.tsx","utils/timeSince.ts","utils/calcTime.ts","api/getPackageMetadata.ts","api/getFile.ts","api/getAdviseDocument.ts","api/getAdviseLogs.ts","features/home/components/AdviseCreation.tsx","features/home/components/ImageSearch.tsx","assets/footer-logo.png","components/organisms/Footer/Footer.tsx","features/home/routes/index.tsx","routes/NotFound.tsx","components/templates/MainLayout.tsx","hooks/useLicenseMetric.ts","components/templates/AdviserLayout.tsx","hooks/useSidebarTotals.ts","components/templates/NavigationLayout.tsx","components/molecules/IconText/IconText.tsx","components/atoms/CustomAlert/CustomAlert.tsx","components/organisms/AdviseHeader/AdviseHeader.tsx","hooks/useImportantJustifications.ts","components/organisms/summary_charts/CVEPackages/CVEPackages.tsx","lib/interfaces/Graph.ts","lib/interfaces/Node.ts","hooks/useGraph.ts","hooks/useAdviseMetric.ts","components/molecules/PieChart/PieChart.tsx","components/organisms/summary_charts/DependencySummary/DependencySummary.tsx","hooks/useDependencyMetric.ts","components/organisms/summary_charts/LicenseSummary/LicenseSummary.tsx","components/molecules/TimelineChart/TimelineChart.tsx","components/organisms/summary_charts/UnmaintainedPackages/UnmaintainedPackages.tsx","components/molecules/BubbleHistogram/BubbleHistogram.tsx","components/molecules/BubbleHistogram/utils.ts","components/organisms/summary_charts/WarningPackages/WarningPackages.tsx","pages/advise/AdviseSummary.tsx","components/organisms/PackageList/PackageList.tsx","components/organisms/DependencyGraph/config.ts","components/organisms/DependencyGraph/DependencyGraph.tsx","hooks/useVisGraphEdges.ts","components/molecules/DropdownListItem/DropdownListItem.tsx","components/organisms/ScorecardMetric/ScorecardItem.tsx","components/organisms/ScorecardMetric/useScorecard.ts","components/organisms/ScorecardMetric/ScorecardMetric.tsx","components/organisms/SelectedPackage/LinkData.tsx","components/organisms/CustomJustificationCard/CustomJustificationCard.tsx","hooks/usePackageData.ts","components/organisms/SelectedPackage/SelectedPackage.tsx","pages/advise/AdviseDetails.tsx","components/atoms/ScrollToTop/ScrollToTop.tsx","pages/advise/AdviseCompare.tsx","pages/advise/AdviseLogs.tsx","components/molecules/DynamicCard/DynamicCard.tsx","components/molecules/GridList/GridList.tsx","components/organisms/metrics/StackInfoMetrics/StackInfoEnvMetric/StackInfoEnvMetric.tsx","components/organisms/metrics/StackInfoMetrics/StackInfoInstallErrorMetric/StackInfoInstallErrorMetric.tsx","components/organisms/metrics/StackInfoMetrics/StackInfoMetric/StackInfoMetric.tsx","components/organisms/metrics/StackInfoMetrics/StackInfoRulesMetric/StackInfoRulesMetric.tsx","pages/advise/AdviseStackInfo.tsx","pages/advise/AdviseEnvironmentInfo.tsx","pages/advise/AdviseLicenses.tsx","utils/fromBytes.ts","pages/advise/AdviseDependencies.tsx","pages/advise/AdviseNotFound.tsx","pages/advise/AdviseRoutes.tsx","features/package/components/ParamDropdown/ParamDropdown.tsx","features/package/components/PackageHeader/PackageHeader.tsx","components/molecules/InfoCard/InfoCard.tsx","features/package/components/PackageDependencies/VersionDropdown.tsx","features/package/components/PackageDependencies/PackageDependencies.tsx","features/package/routes/PackageNotFound.tsx","features/package/api/getPackageVersions.ts","features/package/api/getPackageEnvironments.ts","routes/ErrorPage.tsx","features/package/routes/PackageOverview.tsx","features/package/hooks/useSimpleGraph.ts","features/package/routes/index.tsx","routes/RouterConfig.tsx","App.tsx","index.tsx"],"names":["queryClient","QueryClient","defaultOptions","queries","useErrorBoundary","refetchOnWindowFocus","refetchOnMount","retry","theme","createTheme","palette","primary","main","secondary","background","default","paper","text","shape","borderRadius","activeColor","customColor","value","argbFromHex","name","blend","responsiveFontSizes","components","MuiPopover","defaultProps","elevation","styleOverrides","paddingLeft","paddingRight","MuiDialog","PaperProps","MuiDrawer","borderStyle","backgroundColor","MuiLink","root","color","Theme","children","ThemeProvider","CssBaseline","reducer","state","action","type","payload","loading","key","StateContext","React","DispatchContext","setLoading","Global","defaultState","dispatch","actionMap","isLoading","isError","percent","Provider","ErrorFallback","Button","onClick","window","location","assign","origin","AppProvider","FallbackComponent","client","TabPanel","index","props","role","hidden","id","SearchBar","onEnter","label","helpertext","boxprops","error","lefticon","righticon","Box","Typography","variant","sx","Paper","p","display","alignItems","borderColor","undefined","InputBase","ml","flex","placeholder","onChange","onKeyPress","ev","preventDefault","LOCAL_STORAGE_KEY","THOTH_URL","postAdvise","pipfile","pipfileLock","runtime_environment","data","application_stack","requirements","requirements_format","requirements_lock","axios","post","params","recommendation_type","headers","accept","getPackageExists","config","get","then","res","versions","length","catch","postImageAnalyze","image","getContainerImages","page","per_page","PackageSearch","navigate","useNavigate","useState","searchQuery","setSearchQuery","searchError","setSearchError","handleAnalyze","Grid","container","justifyContent","alignSelf","item","xs","minHeight","spacing","md","e","target","handleChange","minWidth","filter","createFilterOptions","ComboBox","suggestions","help","required","setValue","suggestions_mapped","useMemo","map","suggestion","title","Autocomplete","event","newValue","inputValue","filterOptions","options","filtered","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","option","renderOption","freeSolo","renderInput","TextField","fullWidth","helperText","EnhancedTableHead","order","orderBy","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","direction","property","descendingComparator","a","b","getComparator","Loading","loadingLabel","progress","errorTitle","errorSubtitle","height","flexDirection","align","CircularProgress","GenericTable","rows","onAction","setOrder","setOrderBy","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","max","width","mb","TableContainer","Table","size","rowCount","TableBody","slice","sort","row","labelId","hover","tabIndex","header","j","component","scope","IconButton","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","className","timeSince","date","startTime","Date","seconds","floor","valueOf","interval","num","calcTime","finished_at","started_at","datetime","getPackageMetadata","version","os_name","os_version","python_version","usePackageMetadata","useQuery","enabled","queryKey","queryFn","usePackagesMetadata","packages","useQueries","getFile","url","fetch","response","getYamlFile","YAML","parse","getAdviseDocument","analysis_id","organizeAdviseDocument","query","parameters","status","metadata","result","justifications","report","products","justification","stack_info","project","product","package_list","lockfile","requirements_locked","Object","entries","replace","_meta","sources","find","source","operating_system","useAdviseDocument","startsWith","getAdviseLogs","useAdviseLogs","log","lastLog","JSON","split","at","organizeQuery","param","Error","headCells","initState","lookupType","operating_system_name","operating_system_version","cuda_version","cudnn_version","mkl_version","openblas_version","openmpi_version","base_image","AdviseCreation","useReducer","adviseHistory","analysis_ids","useAdviseDocuments","ids","localStorage","getItem","s","every","doc","document_id","isValid","valid","keys","forEach","includes","Collapse","in","marginRight","mt","padding","marginBottom","multiline","sm","LoadingButton","ImageSearch","images","container_images","image_name","mr","package_extract_document_id","environment_name","Footer","marginTop","alt","src","logo","Stack","paddingX","textTransform","paddingBottom","Link","underline","href","Home","mode","setMode","useTheme","matches","useMediaQuery","breakpoints","up","maxWidth","margin","textAlign","ToggleButtonGroup","exclusive","newMode","ToggleButton","Divider","NotFound","MainLayout","marginY","useLicenseMetric","packagesMetadata","allPackagesMetadataLoaded","isFetched","queryFunction","base","pkg","importlib_metadata","packageLicenses","Classifier","classifier","parsed","generalLicense","License","specificLicense","isOsiApproved","license","pkgName","package_name","toLowerCase","specific","loadingProgress","loadingText","openedMixin","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","Drawer","styled","shouldForwardProp","prop","open","flexShrink","whiteSpace","boxSizing","CustomListItem","to","selected","icon","chipData","disabled","hideOnClosed","ListItem","hexFromArgb","light","colorContainer","onColorContainer","button","RouterLink","secondaryAction","info","Chip","warning","ListItemIcon","ListItemText","disableTypography","marginLeft","fontWeight","AdviserLayout","useLocation","licenseMetric","computeLicenseMetricTotals","values","computeStackInfoTotals","t","licenses","useSidebarTotals","setOpen","currentTab","pathname","List","NavigationLayout","goHome","IconText","link","rel","CustomAlert","Alert","severity","message","AdviseHeader","ERROR","toUpperCase","statusText","statusColor","time","errorMessage","msg","error_msg","levelname","findCVEPackages","cves","Map","Promise","all","just","Array","from","matchAll","has","set","findPackagesWithWarnings","pkgs","package_justification","sorted_array","top_bucket","top_packages","avg","reduce","prev","findUnmaintainedPackages","visited","Set","add","not_maintained","last_release","low_maintainers","total","k","v","now","getTime","useImportantJustifications","setLoadingText","unmaintainedPackages","warningPackages","cvePackages","CVEPackages","selectedCVE","setSelectedCVE","containerRef","useRef","Card","ref","CardHeader","subheader","CardContent","Slide","current","Fragment","transform","fontStyle","published","toLocaleString","details","affected","i","package","ecosystem","ranges","range","events","fixed","introduced","disablePadding","dense","cve","ListItemButton","join","Skeleton","Graph","nodes","visEdges","this","Node","node","destination","sourceNode","destinationNode","addAdjacent","first","visitList","pop","shift","getAdjacents","adj","path","newPath","nextPath","findPath","destinationKey","parents","parent","paths","findAllPaths","adjacents","useGraph","createGraph","graph","package_dict","dependency_graph","addVertex","edges","edge","addEdge","PieChart","setHovered","hovered","stroke","strokeWidth","onValueMouseOver","onSeriesMouseOut","DependencySummary","direct","indirect","roots","bfs","graphSearch","some","useDependencyMetric","dependencies","lg","angle","LicenseSummary","warnings","totalPkgWarnings","errors","totalPkgErrors","approved","totalPkgApproved","TimelineChart","timestamp","x","y","opacity","left","right","bottom","ticks","line","colorType","getOpacity","point","getColor","UnmaintainedPackages","setSelected","obj","fontSize","toDateString","BubbleHistogram","handleClick","selectionStart","setSelectionStart","selectionEnd","setSelectionEnd","updateDragState","area","start","end","selection","inX","inX0","x0","inStart","inEnd","sourceMax","min","Infinity","bins","ceil","histogram","fill","Color","rgb","mix","lighten","hex","selectedColor","darken","y0","tickFormat","toString","tickTotal","d","drag","enableY","onDrag","onDragEnd","WarningPackages","warningPackagesSelected","setWarningPackagesSelected","toFixed","AdviseSummary","Masonry","columns","PackageList","selected_package","onPackageClick","search","setSearch","alerts","packageAlerts","pkg_name","maxHeight","overflow","ListItemSecondaryAction","manipulation","interaction","hoverConnectedEdges","selectConnectedEdges","selectable","chosen","smooth","arrowStrikethrough","arrows","border","borderWidth","labelHighlightBold","font","physics","hierarchicalRepulsion","damping","springLength","solver","minVelocity","DependencyGraph","graphHeight","visJsRef","visGraphEdges","useVisGraphEdges","useEffect","selectedNode","findAllNodesOnAllPaths","app_node","convertedNodes","DataSet","visData","network","Network","networkCanvas","document","getElementById","getElementsByTagName","changeCursor","newCursorStyle","cursor","on","flexFlow","DropdownListItem","KeyboardArrowDown","ScorecardItem","tags","short","risk","passing","tag","getMatch","scorecards","pattern","Maintained","Contributors","Fuzzing","Packaging","SAST","Vulnerabilities","scorecard","ScorecardMetric","setScorecard","ossfDefinitions","scorecardJustifications","checks","match","useScorecard","PATTERNS","LinkData","linkData","temp","orientation","CustomJustificationCard","avatar","packageParameters","packageMetadata","packageJustifications","adjacent","warningsCount","cur","errorCount","infoCount","files","summary","Summary","SelectedPackage","selectedPackage","setSelectedPackage","usePackageData","packageData","justificationCards","cards","dependents","deps","browseLink","gutterBottom","dep","AdviseDetails","useParams","flexGrow","overflowY","ScrollTop","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","anchor","ownerDocument","querySelector","scrollIntoView","behavior","block","position","ScrollToTop","Fab","AdviseCompare","adviseDocument","cmp","setComparison","comparison","compareDoc","differencesOnly","setDifferencesOnly","importText","setImportText","optionList","setOptionList","load","localHistory","env","readable","handleClose","reason","handleImport","setItem","history","COMPARE_COLORS","old","new","change","equal","comparePaths","obj1","obj2","mapping","obj1_mapped","obj2_mapped","renderCompareLine","compareType","borderStyles","paddingTop","doubleRenderTypography","headerStyles","compareArrays","array1","array2","s1","stringify","s2","set1","set2","merged","createProjectCompare","proj1","proj2","dev_packages","field","hardware","cpu_model","cpu_family","gpu_model","trim","createCompare","doc1","doc2","accepted_final_states_count","discarded_final_states_count","resolver_iterations","pipeline","advised_manifest_changes","patch","op","arguments","advise","distribution","os_release","python","major","minor","micro","api_version","implementation_name","releaselevel","compareJSX","borderBottomStyle","borderTopLeftRadius","borderTopRightRadius","Dialog","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","flexWrap","DialogActions","columnSpacing","borderTopStyle","borderBottomLeftRadius","borderBottomRightRadius","textOverflow","marginX","FormControl","Select","displayEmpty","MenuItem","FormControlLabel","control","Switch","defaultChecked","checked","AdviseLogs","module","lineno","funcname","created","asctime","msecs","relative_created","process","stickyHeader","DynamicCard","compact","down","titleTypographyProps","GridList","items","primaryTypographyProps","secondaryTypographyProps","isButton","ListItemCustom","disableGutters","expandedContent","subtitle","StackInfoEnvMetric","metric","provided","StackInfoInstallErrorMetric","name_index","inset","StackInfoMetric","ignoreLinks","types","metrics","concat","formatData","alignContent","c","recommendedItems","otherItems","typeTotals","StackInfoRulesMetric","rules","name_constraint_index","rule","constraint","flexItem","AdviseStackInfo","useContext","xl","EditableLabel","itemKey","itemSubKey","handleSubmit","editMode","AdviseEnvironmentInfo","currentRuntimeEnvironment","setCurrentRuntimeEnvironment","setErrorMessage","setEditMode","subKey","original","detail","group","platform","formatted_json","format","formatObj","subValue","yaml","dump","getIcon","subItem","verticalAlign","ListItemAvatar","navigator","clipboard","writeText","AdviseLicenses","pkgData","fromBytes","bytes","KB","MB","GB","TB","AdviseDependencies","setDependents","setDependencies","packagesDataList","packagesDataMap","usePackagesData","nodeData","agg_size","agg_license","agg_warnings","direct_deps","indirect_deps","rowSpacing","KeyboardArrowDownRounded","KeyboardDoubleArrowDownRounded","GavelRounded","AdviseNotFound","AdviseRoutes","adviseDocumentQuery","isSuccess","element","ParamDropdown","SpecContext","specs","defaultSpecs","package_version","encodeURIComponent","index_url","renderValue","PackageHeader","allVersions","allEnvironments","showEnvParams","setShowEnvParams","versionOptions","dups","indexUrlOptions","osNameOptions","osVersionOptions","pythonVersionOptions","Name","InfoCard","cardMeta","cardBody","cardAction","subTitle","VersionDropdown","anchorEl","setAnchorEl","noDup","currentKey","buckets","fixedOptions","array","currentTarget","endIcon","specifier","Menu","divider","PackageDependencies","visitedOrder","extra","PackageNotFound","getPackageVersions","getPackageEnvironments","ErrorPage","createContext","PackageOverview","setDefaultSpecs","decodeURIComponent","usePackageEnvironments","environments","val","setGraph","tempGraph","app","depth","useSimpleGraph","PackageRoutes","RouterConfig","basename","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc456597.chunk.js","sourcesContent":["import { QueryClient } from \"@tanstack/react-query\";\n\nconst queryConfig = {\n  queries: {\n    useErrorBoundary: false,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    retry: false,\n  },\n};\n\nexport const queryClient = new QueryClient({ defaultOptions: queryConfig });\n","import React from \"react\";\n\n// material ui\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { createTheme, responsiveFontSizes } from \"@mui/material/styles\";\nimport { argbFromHex, customColor } from \"@material/material-color-utilities\";\n\nlet theme = createTheme();\n\n// key colors and theme\ntheme = createTheme(theme, {\n  palette: {\n    primary: {\n      main: \"#f39200\",\n    },\n    secondary: {\n      main: \"#4fc1ea\",\n    },\n    background: {\n      default: \"rgb(249, 249, 249)\",\n      paper: \"#fff\",\n    },\n    text: {\n      primary: \"#363636\",\n      secondary: \"#999999\",\n    },\n  },\n  shape: {\n    borderRadius: 12,\n  },\n});\n\nexport const activeColor = customColor(0, {\n  value: argbFromHex(theme.palette.primary.main),\n  name: \"active\",\n  blend: false,\n});\n\ntheme = responsiveFontSizes(theme);\n\ntheme = createTheme(theme, {\n  components: {\n    MuiPopover: {\n      defaultProps: {\n        elevation: 2,\n      },\n      styleOverrides: {\n        paper: {\n          paddingLeft: 0,\n          paddingRight: 0,\n          borderRadius: \"4px\",\n        },\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        PaperProps: {\n          elevation: 3,\n        },\n      },\n    },\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          borderStyle: \"hidden\",\n          backgroundColor: theme.palette.background.default,\n        },\n      },\n    },\n    MuiLink: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n          \"&:hover\": {\n            color: theme.palette.primary.main,\n          },\n        },\n      },\n    },\n  },\n});\n\ninterface ITheme {\n  children?: JSX.Element;\n}\n\nfunction Theme({ children }: ITheme) {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  );\n}\n\nexport default Theme;\n","import * as React from \"react\";\n\nexport interface GlobalState {\n  loading: {\n    [key: string]: {\n      text?: string;\n      percent?: number;\n      key: string;\n      isLoading: boolean;\n      isError: boolean;\n    };\n  };\n}\n\ninterface GlobalAction {\n  type: string;\n  payload: unknown;\n}\n\ninterface IActionMap {\n  setLoading: (key: string, isLoading?: boolean, isError?: boolean, percent?: number, text?: string) => void;\n}\n\nfunction reducer(state: GlobalState, action: GlobalAction) {\n  switch (action.type) {\n    case \"loading\": {\n      const payload = action.payload as {\n        key: string;\n        isLoading: boolean;\n        isError: boolean;\n        percent?: number;\n        text?: string;\n      };\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          [payload.key]: { ...payload },\n        },\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const StateContext = React.createContext<GlobalState>({\n  loading: {},\n});\n\nexport const DispatchContext = React.createContext<IActionMap>({\n  setLoading: () => undefined,\n});\n\ninterface IGlobal {\n  children?: JSX.Element;\n  defaultState?: GlobalState;\n}\n\nexport default function Global({ children, defaultState }: IGlobal) {\n  // for state control\n  const [state, dispatch] = React.useReducer(\n    reducer,\n    defaultState ?? {\n      loading: {},\n    },\n  );\n\n  const actionMap: IActionMap = {\n    setLoading: (key: string, isLoading?: boolean, isError?: boolean, percent?: number, text?: string) => {\n      dispatch({ type: \"loading\", payload: { key, isLoading, isError, percent, text } });\n    },\n  };\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={actionMap}>{children}</DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n}\n","import * as React from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { queryClient } from \"lib/react-query\";\nimport { Button } from \"@mui/material\";\nimport Theme from \"styles/Theme\";\nimport Global, { GlobalState } from \"stores/Global\";\n\ninterface IAppProvider {\n  children?: JSX.Element;\n  defaultState?: GlobalState;\n}\n\nconst ErrorFallback = () => {\n  return (\n    <div>\n      <h2>Oops, something went wrong :( </h2>\n      <Button onClick={() => window.location.assign(window.location.origin)}>Refresh</Button>\n    </div>\n  );\n};\n\nexport const AppProvider: React.FC<IAppProvider> = ({ children, defaultState }) => {\n  return (\n    <Theme>\n      <Global defaultState={defaultState}>\n        <ErrorBoundary FallbackComponent={ErrorFallback}>\n          <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n        </ErrorBoundary>\n      </Global>\n    </Theme>\n  );\n};\n","import React from \"react\";\n\ninterface IProps extends React.ComponentPropsWithoutRef<\"div\"> {\n  children: React.ReactNode;\n  /** The unique identifier of the tab. */\n  index: string | number;\n  /** The state variable passed in from the parent which is compared to the index */\n  value: string | number;\n}\n\n/**\n * A tab panel used to encapsulate different tab content.\n */\nconst TabPanel = ({ children, value, index, ...props }: IProps) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...props}\n    >\n      {value === index && children}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","export default __webpack_public_path__ + \"static/media/thoth-logo.1a28a729.png\";","import React from \"react\";\n\n// material ui\nimport { Typography, Box, Paper, InputBase, InputBaseProps } from \"@mui/material\";\nimport { SxProps } from \"@mui/system\";\n\ninterface IProps extends InputBaseProps {\n  /** The error text or default label text */\n  label?: string;\n  /** callback function when textbox ENTER is pressed */\n  onEnter?: () => void;\n  /** helper text for the search bar */\n  helpertext?: string;\n  /** if there is an error or not */\n  error?: boolean;\n  /** icon displayed on the left of the text box */\n  lefticon?: React.ReactNode;\n  /** icon displayed on the right of the text box */\n  righticon?: React.ReactNode;\n  /** Props added to the text box */\n  boxprops?: SxProps;\n}\n\n/**\n *\n */\nconst SearchBar = ({ onEnter, label, helpertext, boxprops, error = false, lefticon, righticon, ...props }: IProps) => {\n  return (\n    <Box>\n      <Typography variant={\"body1\"} sx={{ color: error ? \"error.main\" : \"text.secondary\" }}>\n        {label}\n      </Typography>\n      <Paper\n        variant=\"outlined\"\n        sx={{\n          p: \"8px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          borderColor: error ? \"red\" : undefined,\n          paddingLeft: 2,\n          paddingRight: 2,\n          ...boxprops,\n        }}\n      >\n        {lefticon}\n        <InputBase\n          sx={{ ml: 1, flex: 1 }}\n          placeholder={helpertext}\n          error={error}\n          onChange={props.onChange}\n          onKeyPress={ev => {\n            if (onEnter && ev.key === \"Enter\") {\n              onEnter();\n              ev.preventDefault();\n            }\n          }}\n          {...props}\n        />\n        {righticon}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SearchBar;\n","const useProd = true;\nexport const LOCAL_STORAGE_KEY = \"THOTH_SEARCH_ADVISE_HISTORY\";\nexport const THOTH_URL =\n  !useProd && (process.env.REACT_APP_DEPLOYMENT === \"STAGE\" || process.env.NODE_ENV === \"development\")\n    ? \"https://stage.thoth-station.ninja/api/v1\"\n    : \"https://khemenu.thoth-station.ninja/api/v1\";\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/advise/python\"][\"post\"];\ntype requestBody = path[\"requestBody\"][\"content\"][\"application/json\"];\ntype requestResponseSuccess = path[\"responses\"][\"202\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n    \"Content-Type\": \"application/json\";\n  };\n}\n\nexport const postAdvise = (\n  pipfile: requestBody[\"application_stack\"][\"requirements\"],\n  pipfileLock: requestBody[\"application_stack\"][\"requirements_lock\"],\n  runtime_environment: requestBody[\"runtime_environment\"],\n) => {\n  const config: IConfig = {\n    params: {\n      recommendation_type: \"stable\",\n    },\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const data: path[\"requestBody\"][\"content\"][\"application/json\"] = {\n    application_stack: {\n      requirements: pipfile,\n      requirements_format: \"pipenv\",\n      requirements_lock: pipfileLock,\n    },\n    runtime_environment: runtime_environment,\n  };\n\n  return axios.post<requestResponseSuccess>(THOTH_URL + \"/advise/python\", data, config);\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/versions\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getPackageExists = async (name: requestParams[\"name\"]) => {\n  const config: IConfig = {\n    params: {\n      name: name,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n  return axios\n    .get<requestResponseSuccess>(THOTH_URL + \"/python/package/versions\", config)\n    .then(res => {\n      return res.data.versions.length > 0;\n    })\n    .catch(() => false);\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"../../../lib/schema\";\n\ntype path = paths[\"/analyze\"][\"post\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess = path[\"responses\"][\"202\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n    \"Content-Type\": \"application/json\";\n  };\n}\n\nexport const postImageAnalyze = (image: requestParams[\"image\"]) => {\n  const config: IConfig = {\n    params: {\n      image: image,\n    },\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post<requestResponseSuccess>(THOTH_URL + \"/analyze\", {}, config);\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useInfiniteQuery, useQuery } from \"@tanstack/react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/container-images\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure = path[\"responses\"][\"400\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getContainerImages = async (\n  page: requestParams[\"page\"] = 0,\n  per_page: requestParams[\"per_page\"] = 100,\n) => {\n  const config: IConfig = {\n    params: {\n      page: page,\n      per_page: per_page,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n  return axios.get<requestResponseSuccess>(THOTH_URL + \"/container-images\", config);\n};\n\nexport const useContainerImages = (config: { [key: string]: unknown }) => {\n  return useQuery<AxiosResponse<requestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    queryKey: [\"container-images\"],\n    queryFn: () => getContainerImages(),\n  });\n};\n\nexport const useInfiniteContainerImages = (config: { [key: string]: unknown }) => {\n  return useInfiniteQuery<AxiosResponse<requestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    queryKey: [\"container-images\"],\n    queryFn: input => {\n      return getContainerImages(input.pageParam);\n    },\n    getNextPageParam: (lastPage: AxiosResponse<requestResponseSuccess>) => {\n      return lastPage.data.container_images.length === 0 ? undefined : lastPage.data.parameters.page + 1;\n    },\n  });\n};\n","import { Button, Grid, Typography } from \"@mui/material\";\nimport SearchBar from \"components/molecules/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPackageExists } from \"../api\";\n\nexport const PackageSearch = () => {\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchError, setSearchError] = useState(\"\");\n\n  const handleAnalyze = async () => {\n    // if no query\n    if (searchQuery === \"\") {\n      return;\n    }\n\n    const exists = await getPackageExists(searchQuery);\n\n    if (exists) {\n      navigate(\"/package/\" + searchQuery);\n    } else {\n      setSearchError(\"Thoth does not know about that package\");\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n    if (searchError !== \"\") {\n      setSearchError(\"\");\n    }\n  };\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Grid alignSelf=\"flex-start\" item xs={12}>\n        <Typography color=\"error\" variant=\"body1\" sx={{ minHeight: 30 }}>\n          {searchError ?? \"\"}\n        </Typography>\n      </Grid>\n      <Grid container spacing={2} item xs={12}>\n        <Grid item xs={12} md={10}>\n          <SearchBar\n            error={searchError !== \"\"}\n            onChange={e => handleChange(e)}\n            helpertext={\"Search for a Python package\"}\n            type=\"search\"\n            lefticon={<SearchRoundedIcon />}\n            onEnter={handleAnalyze}\n          />\n        </Grid>\n        <Grid item xs={12} md={2}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleAnalyze()}\n            sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n          >\n            <b>Analyze</b>\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport { useMemo } from \"react\";\n\ninterface IComboBox {\n  suggestions: string[];\n  label: string;\n  help: string;\n  required: boolean;\n  error: boolean;\n  value: string | { title: string; inputValue?: string };\n  setValue: (e: { title: string; inputValue?: string } | null) => void;\n}\n\nconst filter = createFilterOptions<{ title: string; inputValue?: string }>();\n\nexport default function ComboBox({ suggestions, label, help, required, error, value, setValue }: IComboBox) {\n  const suggestions_mapped = useMemo<{ title: string; inputValue?: string }[]>(() => {\n    return suggestions.map(suggestion => {\n      return {\n        title: suggestion,\n      };\n    });\n  }, [suggestions]);\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        if (typeof newValue === \"string\") {\n          setValue({ title: newValue });\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({ title: newValue.inputValue });\n        } else {\n          setValue(newValue);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        if (params.inputValue !== \"\") {\n          filtered.push({\n            inputValue: params.inputValue,\n            title: `Add \"${params.inputValue}\"`,\n          });\n        }\n\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={suggestions_mapped ?? []}\n      getOptionLabel={option => {\n        // Value selected with enter, right from the input\n        if (typeof option === \"string\") {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.title;\n      }}\n      renderOption={(props, option) => <li {...props}>{option.title}</li>}\n      freeSolo\n      renderInput={params => (\n        <TextField {...params} fullWidth label={label} required={required} error={error} helperText={help} />\n      )}\n    />\n  );\n}\n","import * as React from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport { IGenericTable } from \"./GenericTable\";\n\nexport interface IEnhancedTableHead {\n  order: \"asc\" | \"desc\";\n  orderBy: IGenericTable[\"headers\"][number][\"id\"];\n  onRequestSort: (property: IGenericTable[\"headers\"][number][\"id\"]) => void;\n  rowCount: number;\n  headers: IGenericTable[\"headers\"];\n}\nexport function EnhancedTableHead(props: IEnhancedTableHead) {\n  const { order, orderBy, onRequestSort, headers } = props;\n  const createSortHandler = (property: typeof headers[number][\"id\"]) => {\n    onRequestSort(property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headers.map(headCell => (\n          <TableCell key={headCell.id} sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              data-testid=\"column-header-label\"\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={() => createSortHandler(headCell.id)}\n            >\n              <b>{headCell.label}</b>\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell />\n      </TableRow>\n    </TableHead>\n  );\n}\n","function descendingComparator(a: { [key: string]: any }, b: { [key: string]: any }, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\nexport function getComparator(order: \"desc\" | \"asc\", orderBy: string) {\n  return order === \"desc\"\n    ? (a: { [key: string]: any }, b: { [key: string]: any }) => descendingComparator(a, b, orderBy)\n    : (a: { [key: string]: any }, b: { [key: string]: any }) => -descendingComparator(a, b, orderBy);\n}\n","import { Box, CircularProgress, Typography } from \"@mui/material\";\nimport React from \"react\";\n\ninterface ILoading {\n  loadingLabel?: string;\n  errorTitle?: string;\n  errorSubtitle?: string;\n  progress?: number;\n  isLoading?: boolean;\n  isError?: boolean;\n}\n\n/** A centered loading element in place of a not yet loaded component */\nconst Loading = ({\n  isLoading = false,\n  isError = false,\n  loadingLabel,\n  progress,\n  errorTitle,\n  errorSubtitle,\n}: ILoading) => {\n  if (isError) {\n    return (\n      <Box height=\"100%\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" align=\"center\">\n          {errorTitle ?? \"An error occurred\"}\n        </Typography>\n        <Typography variant=\"body2\" align=\"center\">\n          {errorSubtitle}\n        </Typography>\n      </Box>\n    );\n  } else if (isLoading) {\n    return (\n      <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <CircularProgress variant={progress ? \"determinate\" : undefined} value={progress} />\n        <Typography variant=\"body2\">{loadingLabel}</Typography>\n      </Box>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Loading;\n","import * as React from \"react\";\n\nimport ArrowForwardRoundedIcon from \"@mui/icons-material/ArrowForwardRounded\";\nimport {\n  Box,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n} from \"@mui/material\";\n\nimport { EnhancedTableHead, IEnhancedTableHead } from \"./EnhancedTableHead\";\nimport { getComparator } from \"./utils\";\nimport Loading from \"components/atoms/Loading\";\n\nexport interface IGenericTable {\n  headers: {\n    id: string;\n    label: string;\n  }[];\n  rows: { [key: string]: unknown }[];\n  onAction?: (row: any) => void;\n}\n\nconst GenericTable = ({ headers, rows, onAction }: IGenericTable) => {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState<typeof headers[number][\"id\"]>(headers[0].id);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleRequestSort = (property: typeof headers[number][\"id\"]) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event: any, newPage: React.SetStateAction<number>) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: { target: { value: string } }) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  if (!rows) {\n    return (\n      <div data-testid=\"loading-spinner\" className=\"w-full h-48 flex justify-center items-center\">\n        <Loading isLoading />\n      </div>\n    );\n  }\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }} variant=\"outlined\">\n        <TableContainer>\n          <Table sx={{ minWidth: 750 }} size=\"medium\">\n            <EnhancedTableHead\n              order={order as IEnhancedTableHead[\"order\"]}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headers={headers}\n            />\n            <TableBody>\n              {rows\n                .slice()\n                .sort(getComparator(order as IEnhancedTableHead[\"order\"], orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow hover tabIndex={-1} key={labelId}>\n                      {headers.map((header, j) => {\n                        if (j === 0) {\n                          return (\n                            <TableCell\n                              data-testid=\"table-cell\"\n                              component=\"th\"\n                              id={labelId}\n                              scope=\"row\"\n                              key={header.id + j}\n                            >\n                              {row[header.id] as string}\n                            </TableCell>\n                          );\n                        } else {\n                          return (\n                            <TableCell data-testid=\"table-cell\" key={header.id + j} align=\"left\">\n                              {row[header.id] as string}\n                            </TableCell>\n                          );\n                        }\n                      })}\n\n                      {onAction ? (\n                        <TableCell align=\"right\">\n                          <IconButton data-testid=\"action-button\" onClick={() => onAction(row)}>\n                            <ArrowForwardRoundedIcon />\n                          </IconButton>\n                        </TableCell>\n                      ) : undefined}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  );\n};\n\nexport default GenericTable;\n","/**\n * Get the time between now and a date in a string format.\n *\n * @param date\n */\nexport default function timeSince(date: Date) {\n  const startTime = new Date();\n  const seconds = Math.floor((startTime.valueOf() - date.valueOf()) / 1000);\n\n  let interval = seconds / 3.154e7;\n\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" year\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 2.628e6;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" month\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 86400;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" day\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 3600;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" hour\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 60;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" minute\" + (num !== 1 ? \"s\" : \"\");\n  }\n  const num = Math.floor(seconds);\n\n  return num + \" second\" + (num !== 1 ? \"s\" : \"\");\n}\n","import timeSince from \"utils/timeSince\";\n\n/**\n * Given either a date and time, calculated time since that date.\n * This is used to calculate how long ago an Advisor document was generated or has been generating.\n * It is specific to the document formatting\n *\n * @param finished_at - for when the advise document is completed\n * @param started_at - the time at which the document was started (is preceded by finished at)\n * @param datetime - fallback to datetime\n * @returns {string} - English version of date\n */\nexport const calcTime = (finished_at?: string | null, started_at?: string | null, datetime?: string | null) => {\n  // if status says finished\n  if (finished_at) {\n    return \"Advise finished \" + timeSince(new Date(finished_at)) + \" ago.\";\n  }\n  // if status is pending\n  else if (started_at) {\n    return \"Advise started \" + timeSince(new Date(started_at)) + \" ago.\";\n  }\n  // if status is nulled so use metadata end date\n  else if (datetime) {\n    return \"Advise finished \" + timeSince(new Date(datetime)) + \" ago.\";\n  } else {\n    return \"Time started/finished not available\";\n  }\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQueries, useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/version/metadata\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\nexport type PackageMetadataRequestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure = path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getPackageMetadata = (\n  name: requestParams[\"name\"],\n  version: requestParams[\"version\"],\n  index: requestParams[\"index\"],\n  os_name: requestParams[\"os_name\"],\n  os_version: requestParams[\"os_version\"],\n  python_version: requestParams[\"python_version\"],\n) => {\n  const config: IConfig = {\n    params: {\n      name: name,\n      version: version,\n      index: index,\n      os_name: os_name,\n      os_version: os_version,\n      python_version: python_version,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n  return axios.get<PackageMetadataRequestResponseSuccess>(THOTH_URL + \"/python/package/version/metadata\", config);\n};\n\nexport const usePackageMetadata = (\n  name?: requestParams[\"name\"],\n  version?: requestParams[\"version\"],\n  index?: requestParams[\"index\"],\n  os_name?: requestParams[\"os_name\"],\n  os_version?: requestParams[\"os_version\"],\n  python_version?: requestParams[\"python_version\"],\n  config?: { [key: string]: any },\n): UseQueryResult<AxiosResponse<PackageMetadataRequestResponseSuccess>, AxiosError<requestResponseFailure>> => {\n  return useQuery<AxiosResponse<PackageMetadataRequestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    enabled: !!name && !!version && !!index && !!os_name && !!os_version && !!python_version,\n    queryKey: [\"packageMetadata\", name, version, index, os_name, os_version, python_version],\n    queryFn: () =>\n      getPackageMetadata(name ?? \"\", version ?? \"\", index ?? \"\", os_name ?? \"\", os_version ?? \"\", python_version ?? \"\"),\n  });\n};\n\nexport const usePackagesMetadata = (\n  packages: requestParams[] = [],\n  config?: { [key: string]: any },\n): UseQueryResult<AxiosResponse<PackageMetadataRequestResponseSuccess>, AxiosError<requestResponseFailure>>[] => {\n  return useQueries({\n    queries: packages.map(p => {\n      return {\n        ...config,\n        enabled: !!p.name && !!p.version && !!p.index && !!p.os_name && !!p.os_version && !!p.python_version,\n        queryKey: [\"packageMetadata\", p.name, p.version, p.index, p.os_name, p.os_version, p.python_version],\n        queryFn: () => getPackageMetadata(p.name, p.version, p.index, p.os_name, p.os_version, p.python_version),\n      };\n    }),\n  }) as UseQueryResult<AxiosResponse<PackageMetadataRequestResponseSuccess>, AxiosError<requestResponseFailure>>[];\n};\n","import YAML from \"yaml\";\n\nexport async function getFile(url: RequestInfo) {\n  const response = await fetch(url);\n  return await response.text();\n}\n\nexport async function getYamlFile(url: string) {\n  const text = await getFile(url);\n  return YAML.parse(text);\n}\n","import axios, { AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQueries, useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { paths } from \"lib/schema\";\nimport { PipfileRequirementsLocked } from \"lib/types/Pipfile\";\nimport { useMemo } from \"react\";\n\ntype path = paths[\"/advise/python/{analysis_id}\"][\"get\"];\nexport type AdviseDocumentRequestParams = path[\"parameters\"][\"path\"];\nexport type AdviseDocumentRequestResponse = path[\"responses\"][\"200\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"202\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n/**\n * An async function that returns a promise for `{base_url}/advise/python`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseDocument = (analysis_id?: AdviseDocumentRequestParams[\"analysis_id\"]) => {\n  return axios.get<AdviseDocumentRequestResponse>(THOTH_URL + \"/advise/python/\" + analysis_id, {\n    headers: {\n      accept: \"application/json\",\n    },\n  });\n};\n\nconst organizeAdviseDocument = (query: UseQueryResult<AxiosResponse<AdviseDocumentRequestResponse>>) => {\n  if (!query.data?.data) {\n    return {\n      query: query,\n    };\n  }\n  return {\n    // all\n    parameters: query.data?.data.parameters,\n    data: query.data?.data,\n    query: query,\n\n    // 202\n    status: query.data?.data.status,\n\n    // 404, 400\n    error: query.data?.data.error,\n\n    // 200\n    metadata: query.data?.data.metadata,\n    result: query.data?.data.result,\n\n    // 200: pulled out\n    justifications: query.data?.data?.result?.report?.products?.[0].justification,\n    stack_info: query.data?.data?.result?.report?.stack_info,\n    project: query.data?.data?.result?.report?.products?.[0].project,\n    product: query.data?.data?.result?.report?.products?.[0],\n\n    // organize packages into a list of fully queryable packages\n    package_list: (() => {\n      const lockfile = query.data.data?.result?.report?.products?.[0]?.project;\n      const requirements_locked = lockfile?.requirements_locked as PipfileRequirementsLocked;\n      return Object.entries(requirements_locked?.default ?? {}).map(([key, value]) => {\n        return {\n          name: key,\n          version: value.version.replace(\"==\", \"\"),\n          index:\n            requirements_locked._meta.sources.find(source => source.name === value.index)?.url ??\n            \"https://pypi.org/simple\",\n          os_name: lockfile?.runtime_environment?.operating_system?.name ?? \"\",\n          os_version: lockfile?.runtime_environment?.operating_system?.version ?? \"\",\n          python_version: lockfile?.runtime_environment?.python_version ?? \"\",\n        };\n      });\n    })(),\n  };\n};\n\nexport const useAdviseDocument = (\n  analysis_id?: AdviseDocumentRequestParams[\"analysis_id\"],\n  config?: { [key: string]: unknown },\n) => {\n  const query = useQuery({\n    ...config,\n    enabled: !!analysis_id && analysis_id.startsWith(\"adviser\"),\n    queryKey: [\"adviseDocument\", analysis_id],\n    queryFn: () => getAdviseDocument(analysis_id),\n  });\n\n  return useMemo(() => organizeAdviseDocument(query), [query.status]);\n};\n\nexport const useAdviseDocuments = (\n  analysis_ids: AdviseDocumentRequestParams[\"analysis_id\"][],\n  config?: { [key: string]: unknown },\n) => {\n  const queries = useQueries({\n    queries: analysis_ids.map(id => {\n      return {\n        ...config,\n        queryKey: [\"adviseDocument\", id],\n        queryFn: () => getAdviseDocument(id),\n      };\n    }),\n  });\n\n  return [...queries.map(query => organizeAdviseDocument(query))];\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/advise/python/{analysis_id}/log\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"path\"];\ntype requestResponse = path[\"responses\"][\"200\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n/**\n * An async function that returns a promise for `{base_url}/advise/python/logs`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseLogs = async (analysis_id?: requestParams[\"analysis_id\"]) => {\n  return axios.get<requestResponse>(THOTH_URL + \"/advise/python/\" + analysis_id + \"/log\", {\n    headers: {\n      accept: \"application/json\",\n    },\n  });\n};\n\nconst organizeQuery = (query: UseQueryResult<AxiosResponse<requestResponse>>) => {\n  if (!query.data?.data) {\n    return {\n      query: query,\n    };\n  }\n  return {\n    // all\n    parameters: query.data?.data.parameters,\n    data: query.data?.data,\n\n    // 404, 400\n    error: query.data?.data.error,\n\n    // 200\n    log: query.data?.data.log,\n\n    // 200: pulled out\n    lastLog: (() => {\n      try {\n        return JSON.parse(query.data?.data.log?.split(\"\\n\")?.at(-2) ?? \"{}\") as {\n          message?: string;\n          levelname?: string;\n        };\n      } catch (e) {\n        return {};\n      }\n    })(),\n  };\n};\n\nexport const useAdviseLogs = (analysis_id?: requestParams[\"analysis_id\"], config?: { [key: string]: unknown }) => {\n  const query = useQuery<AxiosResponse<requestResponse>, AxiosError<requestResponse>>({\n    ...config,\n    queryKey: [\"adviseLogs\", analysis_id],\n    queryFn: () => getAdviseLogs(analysis_id),\n  });\n\n  return organizeQuery(query);\n};\n","import { Button, Collapse, Grid, Paper, TextField, Typography } from \"@mui/material\";\nimport SearchBar from \"components/molecules/SearchBar\";\nimport React, { useMemo, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { postAdvise } from \"../api\";\nimport ComboBox from \"./ComboBox/ComboBox\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport { components } from \"lib/schema\";\nimport GenericTable from \"components/organisms/GenericTable\";\nimport { LOCAL_STORAGE_KEY } from \"../../../config\";\nimport { calcTime } from \"../../../utils/calcTime\";\nimport { useAdviseDocuments } from \"api\";\n\ninterface IAdviseState {\n  error: { [key: string]: string | undefined };\n  id?: string;\n  pipfile?: string;\n  pipfileLock?: string;\n  loading: boolean;\n  lookupType: string;\n  operating_system_name: string;\n  operating_system_version: string;\n  python_version: string;\n  cuda_version: string;\n  cudnn_version: string;\n  mkl_version: string;\n  name: string;\n  openblas_version: string;\n  openmpi_version: string;\n  base_image: string;\n}\n\nfunction reducer(state: IAdviseState, action: { [key: string]: any }) {\n  switch (action.type) {\n    case \"loading\":\n      return { ...state, loading: action.payload };\n    case \"error\":\n      return {\n        ...state,\n        error: { ...state.error, [action.param]: action.payload },\n      };\n    case \"clear-error\":\n      state.error = {};\n      return state;\n    case \"input\":\n      return {\n        ...state,\n        [action.param]: action.payload,\n        error: { ...state.error, [action.param]: undefined },\n      };\n    default:\n      throw new Error(\"Advise state dispatch error\");\n  }\n}\n\nconst headCells = [\n  {\n    id: \"document_id\",\n    label: \"Document ID\",\n  },\n  {\n    id: \"status\",\n    label: \"Status\",\n  },\n  {\n    id: \"name\",\n    label: \"Name\",\n  },\n  {\n    id: \"os_name\",\n    label: \"OS Name\",\n  },\n  {\n    id: \"os_version\",\n    label: \"OS Version\",\n  },\n  {\n    id: \"python_version\",\n    label: \"Python Version\",\n  },\n  {\n    id: \"date\",\n    label: \"Last Run\",\n  },\n];\n\nexport const initState: IAdviseState = {\n  error: {},\n  loading: false,\n  lookupType: \"id\",\n  operating_system_name: \"ubi\",\n  operating_system_version: \"8\",\n  python_version: \"3.8\",\n  cuda_version: \"\",\n  cudnn_version: \"\",\n  mkl_version: \"\",\n  name: \"\",\n  openblas_version: \"\",\n  openmpi_version: \"\",\n  base_image: \"\",\n};\n\nexport const AdviseCreation = () => {\n  const navigate = useNavigate();\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const localHistory: string[] = useMemo(() => {\n    const ids = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (ids) {\n      return ids.split(\",\").filter(s => s !== \"\");\n    } else {\n      return [];\n    }\n  }, []);\n\n  const adviseHistory = useAdviseDocuments(localHistory);\n\n  const rows = useMemo(() => {\n    if (adviseHistory?.every(doc => !doc.query.isLoading)) {\n      return adviseHistory.map(doc => {\n        const status = () => {\n          if (doc?.data?.status) {\n            return doc.data?.status.state;\n          } else if (doc?.data?.result.report?.products) {\n            return \"success\";\n          } else {\n            return \"error\";\n          }\n        };\n        return {\n          document_id: doc?.data?.metadata?.document_id,\n          name: doc?.data?.result?.report?.products?.[0].project.runtime_environment?.name,\n          os_name: doc?.data?.result?.report?.products?.[0].project.runtime_environment?.operating_system?.name,\n          os_version: doc?.data?.result?.report?.products?.[0].project.runtime_environment?.operating_system?.version,\n          python_version: doc?.data?.result?.report?.products?.[0].project.runtime_environment?.python_version,\n          status: status(),\n          date: calcTime(doc?.data?.status?.finished_at, doc?.data?.status?.started_at, doc?.data?.metadata?.datetime),\n        };\n      });\n    } else {\n      return [];\n    }\n  }, [adviseHistory]);\n\n  const tableRowAction = (row: { document_id: string }) => {\n    navigate(\"/advise/\" + row.document_id);\n  };\n\n  const isValid = () => {\n    if (state.lookupType === \"id\") {\n      if (!state.id || state.id === \"\") {\n        dispatch({\n          type: \"error\",\n          param: \"id\",\n          payload: \"Field cant be empty\",\n        });\n        return false;\n      }\n    } else {\n      let valid = true;\n      if (!state.pipfile) {\n        valid = false;\n        dispatch({\n          type: \"error\",\n          param: \"pipfile\",\n          payload: \"Field cant be empty\",\n        });\n      }\n      if (!state.pipfileLock) {\n        valid = false;\n        dispatch({\n          type: \"error\",\n          param: \"pipfileLock\",\n          payload: \"Field cant be empty\",\n        });\n      }\n      if (!state.name) {\n        valid = false;\n        dispatch({\n          type: \"error\",\n          param: \"name\",\n          payload: \"Field cant be empty\",\n        });\n      }\n\n      return valid;\n    }\n\n    return true;\n  };\n\n  const handleAnalyze = async () => {\n    if (state.loading || !isValid()) {\n      return;\n    }\n\n    if (state.lookupType === \"id\") {\n      navigate(\"/advise/\" + state.id);\n    } else {\n      dispatch({ type: \"loading\", payload: true });\n      const runtime_environment: components[\"schemas\"][\"RuntimeEnvironment\"] = {\n        operating_system: {\n          name: state.operating_system_name,\n          version: state.operating_system_version,\n        },\n        python_version: state.python_version,\n        base_image: state.base_image,\n        cuda_version: state.cuda_version,\n        cudnn_version: state.cudnn_version,\n        mkl_version: state.mkl_version,\n        name: state.name,\n        openblas_version: state.openblas_version,\n        openmpi_version: state.openmpi_version,\n      };\n\n      (Object.keys(runtime_environment) as Array<keyof typeof runtime_environment>).forEach(key => {\n        if (runtime_environment[key] === \"\") {\n          delete runtime_environment[key];\n        }\n      });\n      if (\n        runtime_environment?.[\"operating_system\"]?.[\"name\"] === \"\" ||\n        runtime_environment?.[\"operating_system\"]?.[\"version\"] === \"\"\n      ) {\n        delete runtime_environment[\"operating_system\"];\n      }\n\n      if (!state.pipfile) {\n        dispatch({\n          type: \"error\",\n          param: \"pipfile\",\n          payload: \"Pipfile is required\",\n        });\n      } else if (!state.pipfileLock) {\n        dispatch({\n          type: \"error\",\n          param: \"pipfileLock\",\n          payload: \"Pipfile.lock is required\",\n        });\n      } else {\n        postAdvise(state.pipfile, state.pipfileLock, runtime_environment)\n          .then(response => {\n            dispatch({ type: \"loading\", payload: false });\n            navigate(\"/advise/\" + response.data.analysis_id + \"/summary\");\n          })\n          .catch(error => {\n            dispatch({ type: \"loading\", payload: false });\n            if (error?.response?.status === 400) {\n              if (error?.response?.data?.error?.includes(\"Pipfile.lock\")) {\n                dispatch({\n                  type: \"error\",\n                  param: \"pipfileLock\",\n                  payload: error?.response?.data?.error,\n                });\n              } else if (error?.response?.data?.error?.includes(\"Pipfile\")) {\n                dispatch({\n                  type: \"error\",\n                  param: \"pipfile\",\n                  payload: error?.response?.data?.error,\n                });\n              }\n            }\n          });\n      }\n    }\n  };\n\n  return (\n    <>\n      <Collapse in={state.lookupType === \"id\"}>\n        <>\n          <Grid container justifyContent=\"center\">\n            <Grid item xs={12}>\n              <Typography color=\"error\" variant=\"body1\" sx={{ minHeight: 30 }}>\n                {state.error?.id}\n              </Typography>\n            </Grid>\n            <Grid container item xs={12} spacing={2}>\n              <Grid item xs={12} md={10}>\n                <SearchBar\n                  error={state.error?.id !== undefined}\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"id\",\n                      payload: e.target.value,\n                    })\n                  }\n                  helpertext={\"Analysis ID\"}\n                  type=\"search\"\n                  boxprops={{ marginRight: 2 }}\n                  lefticon={<SearchRoundedIcon />}\n                  onEnter={handleAnalyze}\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => handleAnalyze()}\n                  sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                >\n                  <b>Analyze</b>\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Button\n            onClick={() =>\n              dispatch({\n                type: \"input\",\n                param: \"lookupType\",\n                payload: \"manual\",\n              })\n            }\n          >\n            New Advise\n          </Button>\n          <Button\n            onClick={() =>\n              dispatch({\n                type: \"input\",\n                param: \"lookupType\",\n                payload: \"history\",\n              })\n            }\n          >\n            History\n          </Button>\n        </>\n      </Collapse>\n\n      <Collapse in={state.lookupType === \"history\"}>\n        <>\n          <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n            Local Thoth Advise History\n          </Typography>\n          <GenericTable headers={headCells} rows={rows} onAction={tableRowAction} />\n        </>\n      </Collapse>\n\n      <Collapse in={state.lookupType === \"manual\"}>\n        <>\n          <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n            Advise Parameters\n          </Typography>\n          <Paper\n            sx={{\n              backgroundColor: \"white\",\n              padding: 3,\n              marginBottom: 5,\n            }}\n            variant=\"outlined\"\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <SearchBar\n                  label={state.error?.pipfile ? state.error?.pipfile : \"Pipfile contents\"}\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"pipfile\",\n                      payload: e.target.value,\n                    })\n                  }\n                  error={state.error?.pipfile !== undefined}\n                  multiline\n                  rows={8}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <SearchBar\n                  label={state.error?.pipfileLock ? state.error?.pipfileLock : \"Pipfile.lock contents\"}\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"pipfileLock\",\n                      payload: e.target.value,\n                    })\n                  }\n                  error={state.error?.pipfileLock !== undefined}\n                  multiline\n                  rows={8}\n                />\n              </Grid>\n            </Grid>\n            <Grid container mt={4} spacing={2}>\n              <Grid item xs={12} sm={6} md={4}>\n                <TextField\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"base_image\",\n                      payload: e.target.value,\n                    })\n                  }\n                  value={state.base_image}\n                  sx={{ minWidth: \"100%\" }}\n                  label=\"Base Image\"\n                  required={false}\n                  helperText=\"A base container image used to run the application.\"\n                  error={state.error?.base_image !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"cuda_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.cuda_version}\n                  suggestions={[\"9.0\"]}\n                  label=\"CUDA Version\"\n                  required={false}\n                  help=\"Nvidia CUDA version which the application uses.\"\n                  error={state.error?.cuda_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"cudnn_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.cudnn_version}\n                  suggestions={[\"8\"]}\n                  label=\"cuDNN Version\"\n                  required={false}\n                  help=\"NVIDIA cuDNN version used, if any.\"\n                  error={state.error?.cudnn_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"mkl_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.mkl_version}\n                  suggestions={[\"2021.1.1\"]}\n                  label=\"MKL Version\"\n                  required={false}\n                  help=\"Intel® Math Kernel Library version used, if any.\"\n                  error={state.error?.mkl_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"name\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.name}\n                  suggestions={[\"ubi:8-prod\"]}\n                  label=\"Name\"\n                  required={true}\n                  help=\"User defined name of the runtime environment.\"\n                  error={state.error?.name !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"openblas_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.openblas_version}\n                  suggestions={[\"0.3.13\"]}\n                  label=\"OpenBLAS Version\"\n                  required={false}\n                  help=\"OpenBLAS version used, if any.\"\n                  error={state.error?.openblas_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"openmpi_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.openmpi_version}\n                  suggestions={[\"4.1\"]}\n                  label=\"Open MPI Version\"\n                  required={false}\n                  help=\"Open MPI version used, if any.\"\n                  error={state.error?.openmpi_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <TextField\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"operating_system_name\",\n                      payload: e.target.value,\n                    })\n                  }\n                  value={state.operating_system_name}\n                  sx={{ minWidth: \"100%\" }}\n                  label=\"Operating System Name\"\n                  required={false}\n                  helperText=\"Operating system name used.\"\n                  error={state.error?.operating_system_name !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <TextField\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"operating_system_version\",\n                      payload: e.target.value,\n                    })\n                  }\n                  value={state.operating_system_version}\n                  sx={{ minWidth: \"100%\" }}\n                  label=\"Operating System Version\"\n                  required={false}\n                  helperText=\"Operating system version used.\"\n                  error={state.error?.operating_system_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"python_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.python_version}\n                  suggestions={[\"2.7\", \"3.6\", \"3.7\", \"3.8\", \"3.9\"]}\n                  label=\"Python Version\"\n                  required={false}\n                  help=\"Python version on which the application runs on.\"\n                  error={state.error?.python_version !== undefined}\n                />\n              </Grid>\n              <Grid container item xs={12} spacing={2}>\n                <Grid item xs={6} md={6}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() =>\n                      dispatch({\n                        type: \"input\",\n                        param: \"lookupType\",\n                        payload: \"id\",\n                      })\n                    }\n                    sx={{\n                      minHeight: \"100%\",\n                      minWidth: \"100%\",\n                    }}\n                  >\n                    <b>Cancel</b>\n                  </Button>\n                </Grid>\n                <Grid item xs={6}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleAnalyze()}\n                    loading={state.loading}\n                    sx={{\n                      minHeight: \"100%\",\n                      minWidth: \"100%\",\n                    }}\n                  >\n                    <b>Analyze</b>\n                  </LoadingButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        </>\n      </Collapse>\n    </>\n  );\n};\n","import { Button, Collapse, Grid, Typography } from \"@mui/material\";\nimport SearchBar from \"components/molecules/SearchBar\";\nimport React, { useMemo, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { postImageAnalyze, useContainerImages } from \"../api\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport GenericTable from \"components/organisms/GenericTable/GenericTable\";\nimport timeSince from \"utils/timeSince\";\n\ninterface ImageSearchState {\n  error: { [key: string]: string | undefined };\n  loading: boolean;\n  lookupType: string;\n  id: string;\n}\n\nfunction reducer(state: ImageSearchState, action: { [key: string]: any }) {\n  switch (action.type) {\n    case \"loading\":\n      return { ...state, loading: action.payload };\n    case \"error\":\n      return {\n        ...state,\n        error: { ...state.error, [action.param]: action.payload },\n      };\n    case \"clear-error\":\n      state.error = {};\n      return state;\n    case \"input\":\n      return {\n        ...state,\n        [action.param]: action.payload,\n        error: { ...state.error, [action.param]: undefined },\n      };\n    default:\n      throw new Error(\"Image state dispatch error\");\n  }\n}\n\nconst headCells = [\n  {\n    id: \"environment_name\",\n    label: \"Image Name\",\n  },\n  {\n    id: \"os_name\",\n    label: \"OS Name\",\n  },\n  {\n    id: \"os_version\",\n    label: \"OS Version\",\n  },\n  {\n    id: \"python_version\",\n    label: \"Python Version\",\n  },\n  {\n    id: \"date\",\n    label: \"Last Updated\",\n  },\n];\n\nconst initState: ImageSearchState = {\n  error: {},\n  loading: false,\n  lookupType: \"id\",\n  id: \"\",\n};\n\nexport const ImageSearch = () => {\n  const navigate = useNavigate();\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const images = useContainerImages({ useErrorBoundary: false });\n\n  const rows = useMemo(() => {\n    if (images?.data?.data?.container_images) {\n      return images?.data?.data?.container_images.map(image => {\n        return {\n          ...image,\n          date: timeSince(new Date(image.datetime)) + \" ago\",\n        };\n      });\n    } else {\n      return [];\n    }\n  }, [images?.data]);\n\n  const tableRowAction = (row: { package_extract_document_id: string; environment_name: string }) => {\n    navigate(\"/image/\" + row.package_extract_document_id, {\n      state: { image_name: row.environment_name },\n    });\n  };\n\n  const handleAnalyze = async () => {\n    if (state.loading) {\n      return;\n    }\n\n    if (state.id.includes(\"package-extract\")) {\n      navigate(\"/image/\" + state.id);\n      return;\n    }\n\n    dispatch({ type: \"loading\", payload: true });\n\n    postImageAnalyze(state.id)\n      .then(response => {\n        dispatch({ type: \"loading\", payload: false });\n        navigate(\"/image/\" + response.data.analysis_id, {\n          state: { image_name: state.id },\n        });\n      })\n      .catch(error => {\n        dispatch({ type: \"loading\", payload: false });\n        if (error?.response?.status === 400) {\n          dispatch({\n            type: \"error\",\n            param: \"id\",\n            payload: error?.response?.data?.error ?? \"An unknown error occurred\",\n          });\n        }\n      });\n  };\n\n  return (\n    <>\n      <Collapse in={state.lookupType === \"id\"}>\n        <>\n          <Grid container justifyContent=\"center\">\n            <Grid item xs={12}>\n              <Typography color=\"error\" variant=\"body1\" sx={{ minHeight: 30 }}>\n                {state.error?.id}\n              </Typography>\n            </Grid>\n            <Grid container item xs={12} spacing={2}>\n              <Grid item xs={12} md={10}>\n                <SearchBar\n                  error={state.error?.id != undefined}\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"id\",\n                      payload: e.target.value,\n                    })\n                  }\n                  helpertext={\"Analysis ID or image name\"}\n                  type=\"search\"\n                  boxprops={{ mr: 2 }}\n                  lefticon={<SearchRoundedIcon />}\n                  onEnter={handleAnalyze}\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleAnalyze}\n                  sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                >\n                  <b>Analyze</b>\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Button\n            onClick={() =>\n              dispatch({\n                type: \"input\",\n                param: \"lookupType\",\n                payload: \"lookup\",\n              })\n            }\n          >\n            Lookup Thoth Images\n          </Button>\n        </>\n      </Collapse>\n\n      <Collapse in={state.lookupType === \"lookup\"}>\n        <>\n          <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n            Available Thoth Container Images\n          </Typography>\n          <GenericTable headers={headCells} rows={rows} onAction={tableRowAction} />\n        </>\n      </Collapse>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/footer-logo.7d0f9037.png\";","import React from \"react\";\n\nimport { Box, Link, Paper, Stack, Typography } from \"@mui/material\";\nimport logo from \"assets/footer-logo.png\";\n\nconst Footer = () => {\n  return (\n    <Paper variant=\"outlined\" sx={{ padding: 4, marginTop: 10, marginBottom: 5 }}>\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"flex-start\">\n        <img style={{ paddingLeft: 2, paddingRight: 2, height: \"40px\" }} alt=\"Red Hat Sponsor Logo\" src={logo} />\n        <Stack sx={{ paddingX: 2 }}>\n          <Typography\n            sx={{\n              textTransform: \" uppercase\",\n              paddingBottom: \"20px\",\n            }}\n            variant=\"h6\"\n          >\n            Useful links\n          </Typography>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://github.com/orgs/thoth-station/projects/\">\n            GitHub project board\n          </Link>\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"http://bit.ly/thoth-on-youtube\">\n            YouTube channel\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://twitter.com/ThothStation\">\n            Twitter\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://github.com/thoth-station\">\n            GitHub organization\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://www.kaggle.com/thothstation\">\n            Kaggle datasets\n          </Link>\n        </Stack>\n\n        <Stack sx={{ paddingX: 2 }}>\n          <Typography\n            sx={{\n              textTransform: \" uppercase\",\n              paddingBottom: \"20px\",\n            }}\n            variant=\"h6\"\n          >\n            Info\n          </Typography>\n\n          <Link\n            underline=\"hover\"\n            sx={{ paddingBottom: 1 }}\n            href=\"https://thoth-station.ninja/docs/developers/adviser/landing_page.html#landing-page\"\n          >\n            Thoth&apos;s landing page\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://thoth-station.ninja/docs/developers/adviser/\">\n            Main documentation page\n          </Link>\n        </Stack>\n\n        <Stack sx={{ paddingX: 2 }}>\n          <Typography\n            sx={{\n              textTransform: \" uppercase\",\n              paddingBottom: \"20px\",\n            }}\n            variant=\"h6\"\n          >\n            Friends\n          </Typography>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://github.com/AICoE/aicoe-ci\">\n            AICoE-CI\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://www.operate-first.cloud/\">\n            Operate First\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"http://opendatahub.io/\">\n            Open Data Hub\n          </Link>\n        </Stack>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default Footer;\n","// react\nimport React, { useState } from \"react\";\n\n// material-ui\nimport { Typography, Grid, Divider, ToggleButtonGroup, ToggleButton, Box } from \"@mui/material\";\n\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\n// local\nimport TabPanel from \"components/atoms/TabPanel\";\nimport logo from \"assets/thoth-logo.png\";\n\nimport { PackageSearch, AdviseCreation, ImageSearch } from \"../components\";\nimport Footer from \"components/organisms/Footer\";\n\nexport const Home = () => {\n  // utility states\n  const [mode, setMode] = useState<string>(\"package\");\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  // change mode view\n  const handleMode = (event: any, newMode: string) => {\n    if (newMode) {\n      setMode(newMode);\n    }\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" sx={{ paddingX: 2, maxWidth: \"1000px\", margin: \"auto\" }}>\n      <Grid item>\n        <Box sx={{ marginTop: 10 }}>\n          <img alt=\"Thoth Logo\" src={logo} height={!matches ? \"auto\" : 300} width={\"100%\"} />\n        </Box>\n      </Grid>\n      <Grid container item justifyContent=\"center\" mt={5} spacing={0}>\n        <Grid item xs={12} alignItems=\"left\" mb={3}>\n          <Typography variant=\"h4\">\n            <b>Thoth Search</b>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} alignItems=\"left\">\n          <Typography variant=\"subtitle1\">\n            Thoth Search is a tool that runs analysis on a Python application. It utilizes package metadata and Thoth\n            Adviser to analyze and recommend a software stack. You can run analysis on an entire Python application\n            using a properly formatted Pipfile and Pipfile.lock. Alternatively, you can analyze a single Python package\n            to see what Thoth knows about the package.\n          </Typography>\n        </Grid>\n        <Grid item textAlign=\"center\" xs={12} mt={3} mb={4}>\n          <ToggleButtonGroup value={mode} exclusive onChange={handleMode} size={!matches ? \"small\" : \"large\"}>\n            <ToggleButton value=\"package\">\n              <b>package</b>\n            </ToggleButton>\n            <ToggleButton value=\"environment\">\n              <b>environment</b>\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item xs={12} sx={{ marginBottom: 3 }}>\n          <Divider />\n          <TabPanel value={mode} index=\"package\">\n            <PackageSearch />\n          </TabPanel>\n          <TabPanel value={mode} index=\"environment\">\n            <AdviseCreation />\n          </TabPanel>\n          <TabPanel value={mode} index=\"image\">\n            <ImageSearch />\n          </TabPanel>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Footer />\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\n\nexport const NotFound = () => {\n  return <div>404</div>;\n};\n","import * as React from \"react\";\nimport { Box } from \"@mui/material\";\n\ninterface IProps {\n  children: NonNullable<React.ReactNode>;\n}\n\n/**\n * Main layout adds margins and spacing to the whole app.\n */\nexport const MainLayout = ({ children }: IProps) => {\n  return <Box sx={{ marginY: 2, marginRight: 2, height: \"calc(100vh - 32px)\" }}>{children}</Box>;\n};\n","import { useMemo } from \"react\";\nimport { useAdviseDocument, usePackagesMetadata } from \"api\";\nimport { PackageMetadata } from \"lib/types/PackageMetadata\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nexport type LicenseMetricType = {\n  /** The license name */\n  [key: string]: {\n    /** The packages that use this license as an object */\n    packages: {\n      [key: string]: {\n        specific?: string;\n      };\n    };\n    /** License specific information */\n    metadata: {\n      /** If license is approved by OSI standards */\n      isOsiApproved: boolean | null;\n    };\n  };\n};\n\nexport const useLicenseMetric = (analysis_id: string) => {\n  const { package_list } = useAdviseDocument(analysis_id);\n  const packagesMetadata = usePackagesMetadata(package_list);\n  const allPackagesMetadataLoaded =\n    useMemo(() => packagesMetadata?.every(query => query.isFetched), [packagesMetadata]) ?? false;\n\n  const queryFunction = () => {\n    if (!allPackagesMetadataLoaded) {\n      throw \"not all metadata has been loaded\";\n    }\n\n    const base: LicenseMetricType = {};\n\n    packagesMetadata.forEach(pkg => {\n      const metadata = pkg.data?.data.metadata.importlib_metadata.metadata as PackageMetadata | undefined;\n\n      if (metadata) {\n        // license metric\n        type PackageLicenses = {\n          generalLicense: string;\n          specificLicense?: string;\n          isOsiApproved: boolean | null;\n        }[];\n        const packageLicenses: PackageLicenses = [];\n\n        // get general classification\n        metadata?.Classifier?.forEach(classifier => {\n          const parsed = classifier.split(\" :: \");\n\n          if (parsed[0] === \"License\") {\n            if (parsed[1] === \"OSI Approved\") {\n              packageLicenses.push({\n                generalLicense: parsed?.[2] ?? metadata?.License,\n                specificLicense: metadata?.License,\n                isOsiApproved: true,\n              });\n            } else {\n              packageLicenses.push({\n                generalLicense: parsed?.[1] ?? metadata?.License,\n                specificLicense: metadata?.License,\n                isOsiApproved: false,\n              });\n            }\n          }\n        });\n\n        if (packageLicenses.length === 0) {\n          packageLicenses.push({\n            generalLicense: metadata?.License ?? \"N/A\",\n            specificLicense: metadata?.License ?? \"N/A\",\n            isOsiApproved: null,\n          });\n        }\n\n        // get specific classification\n        packageLicenses.forEach(license => {\n          const pkgName = pkg.data?.data.metadata.package_name.toLowerCase();\n          if (!base[license.generalLicense]) {\n            base[license.generalLicense] = {\n              packages: {},\n              metadata: {\n                isOsiApproved: license.isOsiApproved,\n              },\n            };\n          }\n\n          if (pkgName) {\n            base[license.generalLicense].packages = {\n              ...base[license.generalLicense].packages,\n              [pkgName]: {\n                specific: license.specificLicense,\n              },\n            };\n          }\n        });\n      }\n    });\n\n    return base;\n  };\n\n  const query = useQuery({\n    queryKey: [\"license_metric\", analysis_id],\n    enabled: allPackagesMetadataLoaded,\n    queryFn: async () => queryFunction(),\n  });\n\n  return {\n    data: query.data,\n    isLoading: query.isLoading,\n    isError: query.isError,\n    loadingProgress: null,\n    loadingText: \"Creating license metric\",\n  };\n};\n","import * as React from \"react\";\nimport { Box, Button, Chip, CSSObject, IconButton, Stack, styled, Theme, Typography } from \"@mui/material\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport AutoAwesomeMosaicRoundedIcon from \"@mui/icons-material/AutoAwesomeMosaicRounded\";\nimport ArticleRoundedIcon from \"@mui/icons-material/ArticleRounded\";\nimport CompareArrowsRoundedIcon from \"@mui/icons-material/CompareArrowsRounded\";\nimport TerminalRoundedIcon from \"@mui/icons-material/TerminalRounded\";\nimport { Link as RouterLink, useLocation, useNavigate } from \"react-router-dom\";\nimport CircleRoundedIcon from \"@mui/icons-material/CircleRounded\";\nimport { useMemo } from \"react\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\nimport MenuRoundedIcon from \"@mui/icons-material/MenuRounded\";\nimport MenuOpenRoundedIcon from \"@mui/icons-material/MenuOpenRounded\";\nimport { hexFromArgb } from \"@material/material-color-utilities\";\n\nimport { activeColor } from \"styles/Theme\";\nimport { useSidebarTotals } from \"hooks/useSidebarTotals\";\n\nconst drawerWidth = 360;\n\ninterface IProps {\n  children: React.ReactNode;\n  analysis_id: string;\n}\n\ninterface ICustomListItem {\n  label: string;\n  to: string;\n  icon?: React.ReactNode;\n  selected: boolean;\n  chipData?: {\n    info: number;\n    warning: number;\n    error: number;\n  };\n  disabled?: boolean;\n  open: boolean;\n  hideOnClosed?: boolean;\n}\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: \"80px\",\n});\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: prop => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nconst CustomListItem = ({\n  label,\n  to,\n  selected = false,\n  icon,\n  chipData,\n  disabled,\n  open,\n  hideOnClosed,\n}: ICustomListItem) => {\n  if (!open && hideOnClosed) {\n    return null;\n  }\n\n  return (\n    <ListItem\n      sx={{\n        borderRadius: 100,\n        height: 48,\n        paddingLeft: 3,\n        paddingRight: 3,\n        marginRight: 1.5,\n        marginY: 0.5,\n        justifyContent: !open ? \"center\" : undefined,\n        backgroundColor: selected ? hexFromArgb(activeColor.light.colorContainer) : undefined,\n        color: selected ? hexFromArgb(activeColor.light.onColorContainer) : undefined,\n      }}\n      button\n      disabled={disabled}\n      component={RouterLink}\n      to={to}\n      secondaryAction={\n        chipData && open ? (\n          <Stack direction=\"row\" spacing={1}>\n            {chipData.info ? (\n              <Chip variant=\"outlined\" size=\"small\" icon={<InfoOutlinedIcon />} label={chipData.info} color=\"info\" />\n            ) : undefined}\n            {chipData.warning ? (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                icon={<WarningAmberOutlinedIcon />}\n                label={chipData.warning}\n                color=\"warning\"\n              />\n            ) : undefined}\n            {chipData.error ? (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                icon={<ErrorOutlineOutlinedIcon />}\n                label={chipData.error}\n                color=\"error\"\n              />\n            ) : undefined}\n          </Stack>\n        ) : undefined\n      }\n    >\n      {icon ? (\n        <ListItemIcon\n          sx={{\n            minWidth: 3,\n            marginRight: open ? 1.5 : 0,\n            color: selected ? hexFromArgb(activeColor.light.onColorContainer) : undefined,\n          }}\n        >\n          {icon}\n        </ListItemIcon>\n      ) : undefined}\n      {open ? (\n        <ListItemText disableTypography sx={{ marginLeft: icon ? undefined : 4.5 }}>\n          <Typography fontWeight=\"600\" variant=\"body2\">\n            {label}\n          </Typography>\n        </ListItemText>\n      ) : undefined}\n    </ListItem>\n  );\n};\n\nexport const AdviserLayout = ({ children, analysis_id }: IProps) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { data: chipData } = useSidebarTotals(analysis_id);\n\n  const [open, setOpen] = React.useState(false);\n\n  const currentTab = useMemo(() => {\n    return location.pathname.split(\"/\").at(3);\n  }, [location.pathname]);\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <Drawer open={open} variant=\"permanent\">\n        {open ? (\n          <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            sx={{\n              marginBottom: 1,\n              marginTop: 3,\n              paddingRight: 1.5,\n            }}\n          >\n            <Typography\n              component={Button}\n              onClick={() => navigate(\"/\")}\n              variant=\"h5\"\n              sx={{\n                textAlign: \"center\",\n                color: \"primary.main\",\n                marginLeft: 3,\n                width: \"fit-content\",\n              }}\n            >\n              SEARCH UI\n            </Typography>\n            <IconButton onClick={() => setOpen(false)}>\n              <MenuOpenRoundedIcon />\n            </IconButton>\n          </Stack>\n        ) : (\n          <Box\n            sx={{\n              marginBottom: 1,\n              marginTop: 3,\n              textAlign: \"center\",\n            }}\n          >\n            <IconButton onClick={() => setOpen(true)}>\n              <MenuRoundedIcon />\n            </IconButton>\n          </Box>\n        )}\n        <List sx={{ paddingLeft: 1.5, paddingRight: 1.5 }}>\n          <CustomListItem\n            selected={currentTab === \"summary\"}\n            label=\"Summary\"\n            to=\"summary\"\n            icon={<AutoAwesomeMosaicRoundedIcon />}\n            open={open}\n          />\n          <CustomListItem\n            label=\"Packages\"\n            to=\"packages\"\n            selected={currentTab === \"packages\"}\n            icon={<ArticleRoundedIcon />}\n            open={open}\n          />\n          <CustomListItem\n            label=\"Compare\"\n            to=\"compare\"\n            selected={currentTab === \"compare\"}\n            icon={<CompareArrowsRoundedIcon />}\n            open={open}\n          />\n          <CustomListItem\n            label=\"Logs\"\n            to=\"logs\"\n            selected={currentTab === \"logs\"}\n            icon={<TerminalRoundedIcon />}\n            open={open}\n          />\n        </List>\n        {open ? <Divider /> : undefined}\n        <List sx={{ paddingLeft: 1, paddingRight: 1.5 }}>\n          <CustomListItem\n            label=\"Environment\"\n            to=\"environment\"\n            icon={<CircleRoundedIcon />}\n            selected={currentTab === \"environment\"}\n            open={open}\n            hideOnClosed\n          />\n          <CustomListItem\n            label=\"Licenses\"\n            to=\"licenses\"\n            chipData={chipData?.[\"licenses\"]}\n            icon={<CircleRoundedIcon />}\n            selected={currentTab === \"licenses\"}\n            open={open}\n            hideOnClosed\n          />\n          <CustomListItem\n            label=\"Dependency Tree\"\n            to=\"dependency-tree\"\n            icon={<CircleRoundedIcon />}\n            selected={currentTab === \"dependency-tree\"}\n            open={open}\n            hideOnClosed\n          />\n          <CustomListItem\n            label=\"Stack Info\"\n            to=\"stack-info\"\n            icon={<CircleRoundedIcon />}\n            selected={currentTab === \"stack-info\"}\n            chipData={chipData?.[\"stack-info\"]}\n            open={open}\n            hideOnClosed\n          />\n        </List>\n      </Drawer>\n      <Box sx={{ width: \"100%\", overflowX: \"hidden\" }}>{children}</Box>\n    </Box>\n  );\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useAdviseDocument } from \"api\";\nimport { useLicenseMetric } from \"./useLicenseMetric\";\n\nexport const useSidebarTotals = (analysis_id: string) => {\n  const { stack_info } = useAdviseDocument(analysis_id);\n  const { data: licenseMetric } = useLicenseMetric(analysis_id);\n\n  const computeLicenseMetricTotals = () => {\n    const data = {\n      info: 0,\n      warning: 0,\n      error: 0,\n    };\n\n    if (!licenseMetric) {\n      return data;\n    }\n\n    Object.values(licenseMetric).forEach(license => {\n      switch (license.metadata.isOsiApproved) {\n        case null:\n          data.warning += Object.keys(license.packages).length;\n          break;\n        case false:\n          data.error += Object.keys(license.packages).length;\n          break;\n      }\n    });\n\n    return data;\n  };\n\n  const computeStackInfoTotals = () => {\n    if (!stack_info) {\n      return {\n        info: 0,\n        warning: 0,\n        error: 0,\n      };\n    }\n    return {\n      info: stack_info.filter(t => t.type === \"INFO\").length ?? 0,\n      warning: stack_info.filter(t => t.type === \"WARNING\").length ?? 0,\n      error: stack_info.filter(t => t.type === \"ERROR\").length ?? 0,\n    };\n  };\n\n  const queryFunction = () => {\n    return {\n      \"stack-info\": computeStackInfoTotals(),\n      licenses: computeLicenseMetricTotals(),\n    };\n  };\n\n  const query = useQuery({\n    queryKey: [\"sidebar_totals\", analysis_id],\n    enabled: !!stack_info && !!licenseMetric,\n    queryFn: async () => queryFunction(),\n  });\n\n  return {\n    data: query.data,\n    isLoading: query.isLoading,\n    isError: query.isError,\n    loadingProgress: null,\n    loadingText: \"totaling warnings and errors\",\n  };\n};\n","import * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"@mui/material\";\n\ninterface IProps {\n  children: React.ReactNode;\n  goHome?: boolean;\n}\n\n/**\n * Layout is used in most of the app and allows for backwards navigation.\n */\nexport const NavigationLayout = ({ children, goHome = false }: IProps) => {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          if (goHome) {\n            navigate(\"/\");\n          } else {\n            navigate(-1);\n          }\n        }}\n      >\n        {goHome ? \"go home\" : \"go back\"}\n      </Button>\n      <div>{children}</div>\n    </>\n  );\n};\n","import React from \"react\";\n\n// material-ui\nimport { Link, Stack, BoxProps, Typography } from \"@mui/material\";\n\ninterface IIconText extends BoxProps {\n  /** The text shown */\n  text: string;\n  /** The icon component to be displayed */\n  icon: React.ReactNode;\n  /** Optional link if text is selected */\n  link?: string;\n}\n\n/**\n * Text with an icon to the right of it.\n */\nconst IconText = ({ text, icon, link, ...props }: IIconText) => {\n  return (\n    <Stack {...props} direction=\"row\" spacing={1} alignItems=\"center\">\n      {icon}\n      {link ? (\n        <Link\n          underline=\"none\"\n          href={link ? link : undefined}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          variant=\"body2\"\n          align=\"center\"\n        >\n          {text}\n        </Link>\n      ) : (\n        <Typography variant=\"body2\" align=\"center\">\n          {text}\n        </Typography>\n      )}\n    </Stack>\n  );\n};\n\nexport default IconText;\n","import React from \"react\";\nimport { Button, Alert, AlertColor, AlertProps } from \"@mui/material\";\n\ninterface ICustomAlert extends AlertProps {\n  /** The alert content. */\n  info: {\n    /** Link to navigate to if alert is clicked on. */\n    link?: string;\n    /** Text displayed in the alert. */\n    message: string;\n    /** Severity (color) of alert: `[\"error\", \"warning\", \"info\", \"success\"]`. */\n    type: AlertColor;\n  };\n}\n\n/**\n * A custom alert card.\n */\nconst CustomAlert = ({ info, ...props }: ICustomAlert) => {\n  return (\n    <Alert\n      action={\n        info.link ? (\n          <Button color=\"inherit\" size=\"small\" href={info?.link}>\n            DETAILS\n          </Button>\n        ) : undefined\n      }\n      severity={info.type}\n      {...props}\n    >\n      {info?.message}\n    </Alert>\n  );\n};\n\nexport default CustomAlert;\n","// React\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Chip, ChipProps, AlertColor, Stack, Paper } from \"@mui/material\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\n\n// local\nimport IconText from \"components/molecules/IconText\";\nimport CustomAlert from \"components/atoms/CustomAlert\";\n\n// utils\nimport { calcTime } from \"utils/calcTime\";\nimport { useAdviseLogs, useAdviseDocument } from \"api\";\n\n/**\n * Displays basic Advise document information and\n * displays any errors, info, or warnings that came up\n * in the document generation.\n */\nconst AdviseHeader = ({ analysis_id }: { analysis_id: string }) => {\n  const { result, status, metadata } = useAdviseDocument(analysis_id);\n  const { lastLog } = useAdviseLogs(analysis_id);\n\n  // get status of the report\n  const [statusText, statusColor] = useMemo<[string, ChipProps[\"color\"]]>(() => {\n    // if report is done\n    if (result) {\n      if (result?.report?.ERROR || result?.error) {\n        return [\"ERROR\", \"error\"];\n      } else {\n        return [\"COMPLETE\", \"success\"];\n      }\n    }\n    // if report is not done\n    else if (status) {\n      return [(status[\"state\"] as string)?.toUpperCase(), \"info\"];\n    }\n\n    return [\"UNKNOWN\", undefined];\n  }, [result, status]);\n\n  const time = useMemo(() => {\n    let finished_at = null;\n    let started_at = null;\n    let datetime = null;\n\n    if (status) {\n      finished_at = status.finished_at;\n      started_at = status.started_at;\n    }\n    if (metadata) {\n      datetime = metadata.datetime;\n    }\n\n    return calcTime(finished_at, started_at, datetime);\n  }, [status, metadata]);\n\n  const errorMessage = useMemo(() => {\n    let msg = \"\";\n\n    if (result) {\n      msg = result?.report?.ERROR ?? result?.error_msg ?? \"\";\n    }\n\n    return msg;\n  }, [result]);\n\n  return (\n    <div>\n      <Paper variant=\"outlined\" sx={{ padding: 2 }}>\n        <Typography variant=\"h5\" mb={1}>\n          <b>{analysis_id ?? \"Unknown Adviser Run\"}</b>\n        </Typography>\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n          <Chip label={statusText} color={statusColor} />\n          <IconText text={time} icon={<AccessTimeIcon />} />\n        </Stack>\n      </Paper>\n      <>\n        {statusText === \"ERROR\" ? (\n          <CustomAlert\n            variant=\"filled\"\n            sx={{ margin: 1, marginTop: 2 }}\n            info={{\n              message: errorMessage,\n              type: \"error\",\n            }}\n          />\n        ) : statusText !== \"COMPLETE\" ? (\n          <CustomAlert\n            variant=\"outlined\"\n            sx={{ margin: 1, marginTop: 2 }}\n            info={{\n              message: lastLog?.message ?? \"\",\n              type: lastLog?.levelname?.toLowerCase() as AlertColor,\n            }}\n          />\n        ) : undefined}\n      </>\n    </div>\n  );\n};\n\nexport default AdviseHeader;\n","import { useAdviseDocument } from \"../api\";\nimport { components } from \"lib/schema\";\nimport { useState } from \"react\";\nimport { getYamlFile } from \"../api\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nexport type OpenSourceVulnerabilityFormat = {\n  id: string;\n  published: string;\n  details: string;\n  affected: {\n    package: {\n      ecosystem: string;\n      name: string;\n    };\n    ranges: {\n      type: string;\n      repo?: string;\n      events: {\n        introduced?: string;\n        fixed?: string;\n      }[];\n    }[];\n    ecosystem_specific?: {\n      severity?: string;\n    };\n  }[];\n  references: {\n    type: string;\n    url: string;\n  }[];\n};\n\nconst findCVEPackages = async (justifications: components[\"schemas\"][\"Justification\"]) => {\n  const cves = new Map<\n    string,\n    {\n      packages: { name: string; version: string; index: string }[];\n      report?: OpenSourceVulnerabilityFormat;\n    }\n  >();\n\n  await Promise.all(\n    justifications.map(async just => {\n      if (just.message.includes(\"CVE\") && !just.message.startsWith(\"No known\")) {\n        const matches = Array.from(just.message.matchAll(/'(.*?)'/g));\n        if (matches && matches.length === 4) {\n          if (!cves.has(matches[3][1])) {\n            const report = await getYamlFile(\n              `https://raw.githubusercontent.com/pypa/advisory-database/main/vulns/${matches[0][1]}/${matches[3][1]}.yaml`,\n            );\n            cves.set(matches[3][1], {\n              report: report,\n              packages: [\n                {\n                  name: matches[0][1],\n                  version: matches[1][1],\n                  index: matches[2][1],\n                },\n              ],\n            });\n          } else {\n            cves.set(matches[3][1], {\n              ...(cves.get(matches[3][1]) ?? {}),\n              packages: [\n                ...(cves.get(matches[3][1])?.packages ?? []),\n                {\n                  name: matches[0][1],\n                  version: matches[1][1],\n                  index: matches[2][1],\n                },\n              ],\n            });\n          }\n        }\n      }\n    }),\n  );\n\n  return { data: cves };\n};\n\nconst findPackagesWithWarnings = (justifications: components[\"schemas\"][\"Justification\"]) => {\n  const pkgs = new Map<string, number>();\n  justifications.forEach(just => {\n    const package_justification = just as { package_name?: string };\n    if (just.type === \"WARNING\" && package_justification?.package_name) {\n      pkgs.set(package_justification.package_name, (pkgs.get(package_justification.package_name) ?? 0) + 1);\n    }\n  });\n\n  const sorted_array = Array.from(pkgs.entries()).sort(([, a], [, b]) => a - b);\n\n  const top_bucket = sorted_array.at(-1)?.[1] ?? 0;\n\n  return {\n    data: {\n      values: sorted_array,\n      top_packages: sorted_array.filter(([, count]) => count === top_bucket),\n      avg: sorted_array.reduce((prev, [, cur]) => prev + cur, 0) / sorted_array.length,\n    },\n  };\n};\n\nconst findUnmaintainedPackages = (justifications: components[\"schemas\"][\"Justification\"]) => {\n  const pkgs = new Map<\n    string,\n    {\n      not_maintained?: boolean;\n      last_release?: string;\n      low_maintainers?: boolean;\n    }\n  >();\n  const visited = new Set();\n  justifications.forEach(just => {\n    const package_name = (just as { package_name?: string }).package_name;\n    if (package_name) {\n      visited.add(package_name);\n    }\n\n    if (package_name && just.message.includes(\"actively maintained\") && just.type === \"WARNING\") {\n      pkgs.set(package_name, { ...pkgs.get(package_name), not_maintained: true });\n    }\n\n    if (package_name && just.message.includes(\"has no recent release\")) {\n      const date = just.message.split(\"dates back to \").at(-1);\n      pkgs.set(package_name, { ...pkgs.get(package_name), last_release: date });\n    }\n\n    if (package_name && just.message.includes(\"low number of maintainers\")) {\n      pkgs.set(package_name, { ...pkgs.get(package_name), low_maintainers: true });\n    }\n  });\n\n  return {\n    data: {\n      total: visited.size,\n      packages: Array.from(pkgs.entries())\n        .map(([k, v]) => ({\n          ...v,\n          id: k,\n        }))\n        .sort(\n          (a, b) => new Date(b.last_release ?? Date.now()).getTime() - new Date(a.last_release ?? Date.now()).getTime(),\n        ),\n    },\n  };\n};\n\nexport const useImportantJustifications = (analysis_id?: string) => {\n  const { justifications } = useAdviseDocument(analysis_id);\n  const [loadingText, setLoadingText] = useState<string | null>(null);\n\n  const queryFunction = async () => {\n    setLoadingText(\"Finding unmaintained packages\");\n    const unmaintainedPackages = findUnmaintainedPackages(justifications ?? []);\n    setLoadingText(\"Finding package warnings\");\n    const warningPackages = findPackagesWithWarnings(justifications ?? []);\n    setLoadingText(\"Finding cves\");\n    const cvePackages = await findCVEPackages(justifications ?? []);\n\n    return {\n      cvePackages: cvePackages.data,\n      warningPackages: warningPackages.data,\n      unmaintainedPackages: unmaintainedPackages.data,\n    };\n  };\n\n  const query = useQuery({\n    queryKey: [\"important_justifications\", analysis_id],\n    enabled: !!justifications,\n    queryFn: async () => queryFunction(),\n  });\n\n  return { data: query.data, isLoading: query.isLoading, isError: query.isError, loadingProgress: null, loadingText };\n};\n","import {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Skeleton,\n  Slide,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport NavigateNextRoundedIcon from \"@mui/icons-material/NavigateNextRounded\";\nimport { OpenSourceVulnerabilityFormat, useImportantJustifications } from \"hooks/useImportantJustifications\";\nimport { Link } from \"react-router-dom\";\n\nconst CVEPackages = ({ analysis_id }: { analysis_id?: string }) => {\n  const [selectedCVE, setSelectedCVE] = useState<OpenSourceVulnerabilityFormat | null>(null);\n  const containerRef = React.useRef(null);\n  const { data: { cvePackages } = {} } = useImportantJustifications(analysis_id);\n\n  if (!cvePackages) {\n    return (\n      <>\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"rectangular\" height={118} />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n      </>\n    );\n  }\n\n  return (\n    <Card variant=\"outlined\" ref={containerRef}>\n      <CardHeader\n        title=\"CVE Warnings\"\n        subheader=\"Security advisories for packages published on PyPI\"\n        action={\n          <IconButton href=\"https://thoth-station.ninja/j/cve\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <OpenInNewRoundedIcon />\n          </IconButton>\n        }\n      />\n      <CardContent>\n        <Slide direction=\"right\" in={selectedCVE !== null} container={containerRef.current}>\n          <div>\n            {selectedCVE !== null ? (\n              <React.Fragment>\n                <Stack alignItems=\"center\" direction=\"row\">\n                  <IconButton size=\"small\" onClick={() => setSelectedCVE(null)}>\n                    <NavigateNextRoundedIcon sx={{ transform: \"rotate(180deg)\" }} />\n                  </IconButton>\n                  <Typography variant=\"h5\" fontWeight=\"bold\">\n                    {selectedCVE?.id}\n                  </Typography>\n                </Stack>\n                {selectedCVE.id ? (\n                  <>\n                    <Typography sx={{ marginLeft: 4 }} variant=\"subtitle2\" fontStyle=\"italic\" color=\"gray\">\n                      Published: {new Date(selectedCVE?.published).toLocaleString()}\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ marginTop: 2 }}>\n                      {selectedCVE?.details}\n                    </Typography>\n                    <Typography sx={{ marginTop: 2 }} variant=\"h6\" fontWeight=\"bold\">\n                      Affected Packages\n                    </Typography>\n                    {selectedCVE?.affected?.map((pkg, i) => (\n                      <Box sx={{ marginBottom: 1 }} key={pkg?.package?.name + i}>\n                        <Stack direction=\"row\" spacing={1}>\n                          <Typography variant=\"body1\" color=\"gray\">{`[${pkg?.package?.ecosystem}]`}</Typography>\n                          <Typography variant=\"body1\">\n                            {\" \"}\n                            <Link replace to={\"../packages/\" + pkg?.package?.name}>\n                              {pkg?.package?.name}\n                            </Link>\n                          </Typography>\n                        </Stack>\n                        {pkg?.ranges?.map((range, j) => (\n                          <Grid\n                            container\n                            key={range.type + j + i}\n                            sx={{\n                              marginLeft: 2,\n                              marginTop: 0.5,\n                            }}\n                          >\n                            <Grid item xs={2}>\n                              <Typography variant=\"body2\" fontWeight=\"bold\">\n                                Type\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"body2\">{range.type}</Typography>\n                            </Grid>\n\n                            <Grid item xs={2}>\n                              <Typography variant=\"body2\" fontWeight=\"bold\">\n                                Events\n                              </Typography>\n                            </Grid>\n                            <Grid\n                              item\n                              xs={10}\n                              sx={{\n                                marginBottom: 2,\n                              }}\n                            >\n                              {range.events.map((event, k) => (\n                                <Grid container key={\"event\" + i + j + k} direction=\"row\" spacing={1}>\n                                  <Grid item xs={3}>\n                                    <Typography variant=\"body2\" fontWeight=\"bold\">\n                                      {event.fixed ? \"Fixed\" : \"Introduced\"}\n                                    </Typography>\n                                  </Grid>\n                                  <Grid item xs={9}>\n                                    <Typography variant=\"body2\">{event.introduced ?? event.fixed}</Typography>\n                                  </Grid>\n                                </Grid>\n                              ))}\n                            </Grid>\n                          </Grid>\n                        ))}\n                      </Box>\n                    ))}\n                  </>\n                ) : (\n                  <Typography variant=\"body2\" color=\"red\" textAlign=\"center\">\n                    Unable to fetch CVE details\n                  </Typography>\n                )}\n              </React.Fragment>\n            ) : undefined}\n          </div>\n        </Slide>\n        <Slide direction=\"left\" in={selectedCVE === null} container={containerRef.current}>\n          <div>\n            {selectedCVE === null ? (\n              <List disablePadding dense>\n                {Array.from(cvePackages.entries()).map(([cve, value]) => (\n                  <ListItem disablePadding dense key={cve}>\n                    <ListItemButton onClick={() => setSelectedCVE(value.report ?? null)}>\n                      <ListItemText\n                        primary={cve}\n                        secondary={value.packages.map(pkg => `${pkg.name} ${pkg.version}`).join(\", \")}\n                      />\n                      <ListItemIcon>\n                        <NavigateNextRoundedIcon />\n                      </ListItemIcon>\n                    </ListItemButton>\n                  </ListItem>\n                ))}\n              </List>\n            ) : undefined}\n          </div>\n        </Slide>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CVEPackages;\n","import { Node, NodeValue } from \"lib/interfaces/Node\";\n\n/**\n * Graph data structure implemented with an adjacent list\n */\nexport class Graph<NodeType extends Node<NodeValue>> {\n  nodes: Map<NodeType[\"key\"], NodeType>;\n  visEdges: {\n    id: number | string;\n    to: string;\n    from: string;\n  }[];\n\n  constructor() {\n    this.nodes = new Map();\n    this.visEdges = [];\n  }\n\n  /**\n   * Add a node to the graph.\n   */\n  addVertex(\n    key: NodeType[\"key\"],\n    value: NodeType[\"value\"],\n    Node: new (key: string, value: NodeType[\"value\"]) => NodeType,\n  ): NodeType {\n    let node = this.nodes.get(key);\n    if (node) {\n      return node;\n    }\n\n    node = new Node(key, value);\n    this.nodes.set(key, node);\n    return node;\n  }\n\n  /**\n   * Create a connection between the source node and the destination node.\n   * If the nodes don't exist, then it will make them on the fly.\n   */\n  addEdge(source: NodeType[\"key\"], destination: NodeType[\"key\"]): [NodeType | undefined, NodeType | undefined] {\n    const sourceNode = this.nodes.get(source);\n    const destinationNode = this.nodes.get(destination);\n\n    if (sourceNode && destinationNode) {\n      sourceNode.addAdjacent(destinationNode);\n    }\n\n    return [sourceNode, destinationNode];\n  }\n\n  /**\n   * Generic graph search where we can pass a bfs or dfs\n   */\n  *graphSearch(first: NodeType, type = \"bfs\"): Generator<NodeType> {\n    const visited = new Set();\n    const visitList = [];\n\n    visitList.push(first);\n\n    while (visitList.length !== 0) {\n      const node = type === \"dfs\" ? visitList.pop() : visitList.shift();\n      if (node && !visited.has(node)) {\n        yield node;\n        visited.add(node);\n        node.getAdjacents().forEach(adj => visitList.push(adj));\n      }\n    }\n  }\n\n  /**\n   * Find a path between source and destination\n   * It might not be the optimal path\n   */\n  findPath(source: NodeType[\"key\"], destination: NodeType[\"key\"], path: Set<NodeType> = new Set()): NodeType[] {\n    const sourceNode = this.nodes.get(source);\n    const destinationNode = this.nodes.get(destination);\n    const newPath = new Set(path);\n\n    if (!destinationNode || !sourceNode) return [];\n\n    newPath.add(sourceNode);\n\n    if (source === destination) {\n      return Array.from(newPath);\n    }\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const node of sourceNode.getAdjacents()) {\n      if (!newPath.has(node)) {\n        const nextPath = this.findPath(\n          node.key, // TODO might still be node.value\n          destination,\n          newPath,\n        );\n        if (nextPath.length) {\n          return nextPath;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  findAllNodesOnAllPaths(\n    source: NodeType,\n    destinationKey: NodeType[\"key\"],\n    visited: Map<NodeType[\"key\"], NodeType> = new Map(),\n  ): Map<NodeType[\"key\"], NodeType> {\n    const visitList: (NodeType | undefined)[] = [];\n\n    visitList.push(source);\n\n    while (visitList.length !== 0) {\n      const node = visitList.pop();\n      if (node && node.key === destinationKey) {\n        continue;\n      }\n      if (node && !visited.has(node.key)) {\n        visited.set(node.key, node);\n        node.parents.forEach(parent => visitList.push(this.nodes.get(parent)));\n      }\n    }\n\n    return visited;\n  }\n\n  /**\n   * Find all paths from source to destination\n   */\n  findAllPaths(source: NodeType[\"key\"], destination: NodeType[\"key\"], path: Set<NodeType> = new Set()): NodeType[][] {\n    const sourceNode = this.nodes.get(source);\n    const destinationNode = this.nodes.get(destination);\n    const newPath = new Set(path);\n\n    if (!destinationNode || !sourceNode) return [];\n\n    newPath.add(sourceNode);\n\n    if (source === destination) {\n      return [Array.from(newPath)];\n    }\n\n    const paths: NodeType[][] = [];\n    sourceNode.getAdjacents().forEach(node => {\n      if (!newPath.has(node)) {\n        const nextPaths = this.findAllPaths(\n          node.key, // TODO might need to use node.value.id\n          destination,\n          newPath,\n        );\n        nextPaths.forEach(nextPath => {\n          paths.push(nextPath);\n        });\n      }\n    });\n    return paths;\n  }\n}\n","export interface NodeValue {\n  [key: string]: unknown;\n}\n\n/**\n * Graph node/vertex that hold adjacency nodes\n * For performance, uses a HashSet instead of array for adjacent.\n */\nexport class Node<GenericNodeValue extends NodeValue> {\n  /** Nodes connected (children) to this node **/\n  adjacents: Set<this>;\n  /** the unique identifier **/\n  key: string;\n  value: GenericNodeValue;\n  /** Nodes connected (parents) to this node **/\n  parents: Set<string>;\n\n  constructor(key: string, value: GenericNodeValue) {\n    this.adjacents = new Set(); // adjacency list\n    this.key = key; // key\n    this.value = value;\n    this.parents = new Set<string>();\n  }\n\n  /**\n   * Add node to adjacency list\n   * Runtime: O(1)\n   * @param {this} node\n   */\n  addAdjacent(node: this) {\n    this.adjacents.add(node);\n  }\n\n  /**\n   * Check if a Node is adjacent to other\n   * Runtime: O(1)\n   * @param {this} node\n   */\n  isAdjacent(node: this) {\n    return this.adjacents.has(node);\n  }\n\n  /**\n   * Get all adjacent nodes\n   */\n  getAdjacents() {\n    return Array.from(this.adjacents);\n  }\n}\n","import { useAdviseDocument } from \"api\";\nimport { Graph, Node } from \"lib/interfaces\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { PackageVersionValue } from \"lib/interfaces/PackageVersionValue\";\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useGraph(analysis_id?: string) {\n  // fetch data\n  const { package_list, product } = useAdviseDocument(analysis_id);\n\n  const createGraph = () => {\n    if (!(package_list && product)) {\n      throw \"missing input\";\n    }\n\n    // create graph\n    const graph = new Graph<Node<PackageVersionValue>>();\n\n    const package_dict = new Map<string, typeof package_list[number]>();\n    package_list?.forEach(pkg => {\n      package_dict.set(pkg.name.toLowerCase(), pkg);\n    });\n\n    product?.dependency_graph.nodes.forEach(node => {\n      const pkg = package_dict.get(node.toLowerCase());\n      if (pkg) {\n        const value: PackageVersionValue = pkg;\n        graph.addVertex(value.name, value, Node);\n      }\n    });\n\n    product.dependency_graph.edges.forEach(edge => {\n      const sourceNode = graph.nodes.get(product.dependency_graph.nodes?.[edge[0]]?.toLowerCase());\n      const destinationNode = graph.nodes.get(product.dependency_graph.nodes?.[edge[1]]?.toLowerCase());\n      if (sourceNode && destinationNode) {\n        graph.addEdge(sourceNode.key, destinationNode.key);\n\n        // set parent\n        destinationNode.parents.add(sourceNode.key);\n      }\n    });\n\n    // add app node to graph\n    const root = graph.addVertex(\n      \"*App\",\n      {\n        name: \"App\",\n        version: \"\",\n        index: \"\",\n        os_name: \"\",\n        os_version: \"\",\n        python_version: \"\",\n      },\n      Node,\n    );\n\n    graph.nodes.forEach(node => {\n      if (node.parents.size === 0 && node.key !== \"*App\") {\n        graph.addEdge(root.key, node.key);\n        node.parents.add(root.key);\n      }\n    });\n\n    return graph;\n  };\n\n  const query = useQuery({\n    queryKey: [\"graph\", analysis_id],\n    enabled: !!package_list && !!product,\n    queryFn: async () => createGraph(),\n  });\n\n  return {\n    data: query.data,\n    isLoading: query.isLoading,\n    isError: query.isError,\n    loadingProgress: null,\n    loadingText: \"Constructing dependency graph\",\n  };\n}\n","import { useState } from \"react\";\nimport { useGraph } from \"./useGraph\";\nimport { useAdviseDocument } from \"api\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nexport type AdviseMetricType = {\n  justification: Record<string, number>;\n  /** which build is being displayed (new or old) */\n  build: string;\n};\n\nexport const useAdviseMetric = (analysis_id: string) => {\n  const { data: graph } = useGraph(analysis_id);\n  const { metadata, justifications } = useAdviseDocument(analysis_id);\n  const [loadingProgress, setLoadingProgress] = useState<number | null>(null);\n  const [loadingText, setLoadingText] = useState<string | null>(null);\n\n  const queryFunction = () => {\n    if (!graph || !metadata || !justifications) {\n      throw \"Missing input data\";\n    }\n\n    setLoadingProgress(0);\n    setLoadingText(\"Counting justifications\");\n\n    const base: AdviseMetricType = {\n      justification: {},\n      build: \"\",\n    };\n\n    //build environment\n    base.build = `We have analyzed an application stack running on ${metadata.os_release.name} ${metadata.os_release.version}, running Python (${metadata.python.implementation_name}) ${metadata.python.major}.${metadata.python.minor}.${metadata.python.micro}. It was Adviser Job ID ${metadata.document_id}, by ${metadata.analyzer} v${metadata.analyzer_version}.`;\n\n    //justification counts\n    justifications?.forEach((justification, i) => {\n      setLoadingProgress(i / justifications.length);\n      if (base.justification[justification.type]) {\n        base.justification[justification.type] = base.justification[justification.type] + 1;\n      } else {\n        base.justification[justification.type] = 1;\n      }\n    });\n\n    return base;\n  };\n\n  const query = useQuery({\n    queryKey: [\"advise_metric\", analysis_id],\n    enabled: !!graph && !!metadata,\n    queryFn: async () => queryFunction(),\n  });\n\n  return { data: query.data, isLoading: query.isLoading, isError: query.isError, loadingProgress, loadingText };\n};\n","import React, { CSSProperties } from \"react\";\n\nimport { RadialChart } from \"react-vis\";\nimport Loading from \"components/atoms/Loading\";\nimport { Stack } from \"@mui/material\";\n\ninterface IPieChart {\n  source?: Array<{\n    angle?: number | undefined;\n    label?: string | undefined;\n    radius?: number | undefined;\n    style?: CSSProperties | undefined;\n  }>;\n  setHovered: (val: { label: string } | undefined) => void;\n  hovered: { label: string } | undefined;\n}\n\nconst PieChart = ({ source, setHovered, hovered }: IPieChart) => {\n  if (!source) {\n    return <Loading isLoading />;\n  }\n\n  return (\n    <Stack alignItems=\"center\" justifyContent=\"center\">\n      <RadialChart\n        height={150}\n        width={150}\n        data={source.map(row => {\n          if (hovered && hovered?.label === row?.label) {\n            return { ...row, style: { stroke: \"black\", strokeWidth: \"5px\" } };\n          }\n          return row;\n        })}\n        onValueMouseOver={row => setHovered(row as { label: string })}\n        onSeriesMouseOut={() => setHovered(undefined)}\n      />\n    </Stack>\n  );\n};\n\nexport default PieChart;\n","import { Card, CardContent, CardHeader, Grid, Skeleton, Stack, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useDependencyMetric } from \"hooks\";\nimport PieChart from \"components/molecules/PieChart\";\n\nconst DependencySummary = ({ analysis_id }: { analysis_id: string }) => {\n  const { data: dependencies } = useDependencyMetric(analysis_id);\n  const [hovered, setHovered] = useState<{ label: string } | undefined>();\n\n  if (!dependencies) {\n    return (\n      <>\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n      </>\n    );\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title=\"Project Dependencies\"\n        subheader=\"Packages are categorized based on their depth in the dependency tree,\n                   with roots being the packages defined on the Pipfile\"\n      />\n\n      <CardContent>\n        <Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n          <Grid item md={12} lg={4}>\n            <PieChart\n              hovered={hovered}\n              setHovered={setHovered}\n              source={[\n                { label: \"Roots\", angle: dependencies.roots },\n                { label: \"Direct\", angle: dependencies.direct },\n                { label: \"Indirect\", angle: dependencies.indirect },\n              ]}\n            />\n          </Grid>\n          <Grid item md={12} lg={8}>\n            <Stack justifyContent=\"space-around\" width=\"100%\">\n              <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                    <Typography fontWeight={hovered?.label === \"Roots\" ? \"bold\" : undefined} variant=\"h4\">\n                      Root Packages\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item>\n                  <Typography fontWeight={hovered?.label === \"Roots\" ? \"bold\" : undefined} variant=\"h4\">\n                    {dependencies.roots}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                    <Typography fontWeight={hovered?.label === \"Direct\" ? \"bold\" : undefined} variant=\"h4\">\n                      Direct Packages\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item>\n                  <Typography fontWeight={hovered?.label === \"Direct\" ? \"bold\" : undefined} variant=\"h4\">\n                    {dependencies.direct}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                    <Typography fontWeight={hovered?.label === \"Indirect\" ? \"bold\" : undefined} variant=\"h4\">\n                      Indirect Packages\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item>\n                  <Typography fontWeight={hovered?.label === \"Indirect\" ? \"bold\" : undefined} variant=\"h4\">\n                    {dependencies.indirect}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Stack>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DependencySummary;\n","import { useGraph } from \"./useGraph\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nexport type DependencyMetricType = {\n  /** number of dependencies directly related to root packages */\n  direct: number;\n  /** number of dependencies directly or indirectly related to the direct packages*/\n  indirect: number;\n  /** number of dependencies that have no dependents*/\n  roots: number;\n};\n\nexport const useDependencyMetric = (analysis_id: string) => {\n  const { data: graph } = useGraph(analysis_id);\n\n  const queryFunction = () => {\n    if (!graph || graph?.nodes?.size === 0) {\n      throw \"no packages found\";\n    }\n\n    const base: DependencyMetricType = {\n      direct: 0,\n      indirect: 0,\n      roots: 0,\n    };\n\n    const root = graph.nodes.get(\"*App\");\n    if (root) {\n      const bfs = graph.graphSearch(root);\n      const nodes = Array.from(bfs);\n      const roots = new Set<string>();\n      const visited = new Set<string>();\n\n      nodes.forEach(node => {\n        if (!visited.has(node.key)) {\n          if (node.parents.has(\"*App\")) {\n            base.roots += 1;\n            roots.add(node.key);\n          } else if ([...node.parents].some(k => roots.has(k))) {\n            base.direct += 1;\n          } else {\n            base.indirect += 1;\n          }\n\n          visited.add(node.key);\n        }\n      });\n    }\n\n    return base;\n  };\n\n  const query = useQuery({\n    queryKey: [\"dependency_metric\", analysis_id],\n    enabled: !!graph,\n    queryFn: async () => queryFunction(),\n  });\n\n  return { data: query.data, isLoading: query.isLoading, isError: query.isError, loadingProgress: null, loadingText: null };\n};\n","import { Card, CardContent, CardHeader, Grid, Skeleton, Stack, Typography } from \"@mui/material\";\nimport React, { useMemo } from \"react\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\nimport { useLicenseMetric } from \"hooks\";\n\nconst LicenseSummary = ({ analysis_id }: { analysis_id: string }) => {\n  const { data: licenses, isLoading } = useLicenseMetric(analysis_id);\n\n  const { warnings, errors, approved, totalPkgErrors, totalPkgWarnings, totalPkgApproved } = useMemo(() => {\n    if (licenses) {\n      let warnings = 0;\n      let totalPkgWarnings = 0;\n      let errors = 0;\n      let totalPkgErrors = 0;\n      let approved = 0;\n      let totalPkgApproved = 0;\n\n      Object.entries(licenses).forEach(([, value]) => {\n        if (value.metadata.isOsiApproved === null) {\n          totalPkgWarnings += Object.keys(value.packages).length;\n          warnings++;\n        } else if (!value.metadata.isOsiApproved) {\n          totalPkgErrors += Object.keys(value.packages).length;\n          errors++;\n        } else {\n          totalPkgApproved += Object.keys(value.packages).length;\n          approved++;\n        }\n      });\n      return {\n        warnings: warnings,\n        totalPkgWarnings: totalPkgWarnings,\n        totalPkgErrors: totalPkgErrors,\n        errors: errors,\n        approved: approved,\n        totalPkgApproved: totalPkgApproved,\n      };\n    }\n\n    return {\n      warnings: null,\n      totalPkgWarnings: null,\n      errors: null,\n      totalPkgErrors: null,\n      approved: null,\n      totalPkgApproved: null,\n    };\n  }, [licenses]);\n\n  if (!licenses) {\n    if (isLoading) {\n      return (\n        <>\n          <Skeleton variant=\"text\" />\n          <Skeleton variant=\"text\" />\n          <Skeleton variant=\"rectangular\" height={118} />\n        </>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title=\"Unapproved Licenses\"\n        subheader=\"Total number of licenses that are unknown or unapproved by OSI\"\n      />\n      <CardContent>\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n              <DoneRoundedIcon color=\"success\" />\n              <Typography variant=\"h4\">Approved</Typography>\n            </Stack>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h4\">{approved}</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              sx={{ marginLeft: 4.5 }}\n              variant=\"body1\"\n              color=\"gray\"\n            >{`${totalPkgApproved} total packages`}</Typography>\n          </Grid>\n        </Grid>\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n              <WarningAmberOutlinedIcon color=\"warning\" />\n              <Typography variant=\"h4\">Unknown Approval</Typography>\n            </Stack>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h4\">{warnings}</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              sx={{ marginLeft: 4.5 }}\n              variant=\"body1\"\n              color=\"gray\"\n            >{`${totalPkgWarnings} total packages`}</Typography>\n          </Grid>\n        </Grid>\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n              <ErrorOutlineOutlinedIcon color=\"error\" />\n              <Typography variant=\"h4\">Unapproved</Typography>\n            </Stack>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h4\">{errors}</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              sx={{ marginLeft: 4.5 }}\n              variant=\"body1\"\n              color=\"gray\"\n            >{`${totalPkgErrors} total packages`}</Typography>\n          </Grid>\n        </Grid>\n        {errors === 0 && warnings === 0 ? (\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n            <DoneRoundedIcon color=\"success\" />\n            <Typography variant=\"h4\">All licenses are OSI approved</Typography>\n          </Stack>\n        ) : undefined}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default LicenseSummary;\n","import React from \"react\";\n\nimport { FlexibleWidthXYPlot, MarkSeries, XAxis } from \"react-vis\";\n\ninterface ITimeline {\n  source?: [string, string | undefined][];\n  selected?: string;\n}\n\nconst TimelineChart = ({ source, selected }: ITimeline) => {\n  const data = React.useMemo(() => {\n    if (source) {\n      return source.map(([id, timestamp]) => {\n        return {\n          x: (Date.now() - new Date(timestamp ?? Date.now()).getTime()) / 3.154e10,\n          y: 0,\n          opacity: 0.5,\n          id: id,\n        };\n      });\n    }\n  }, [source]);\n\n  return (\n    <div>\n      <FlexibleWidthXYPlot margin={{ left: 8, right: 8, bottom: 16 }} height={70}>\n        <XAxis\n          style={{\n            ticks: { stroke: \"#000000\" },\n            line: { stroke: \"#000000\", transform: \"translateY(-44px)\" },\n            text: { stroke: \"none\", transform: \"translateY(-20px)\" },\n          }}\n        />\n        <MarkSeries\n          colorType=\"literal\"\n          data={data}\n          getOpacity={point => {\n            if (selected === point.id) {\n              return 1;\n            } else {\n              return 0.5;\n            }\n          }}\n          getColor={point => {\n            if (selected === point.id) {\n              return \"#000000\";\n            }\n          }}\n        />\n      </FlexibleWidthXYPlot>\n    </div>\n  );\n};\n\nexport default TimelineChart;\n","import { Card, CardContent, CardHeader, Divider, Grid, IconButton, Skeleton, Stack, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport TimelineChart from \"components/molecules/TimelineChart/TimelineChart\";\nimport CheckRoundedIcon from \"@mui/icons-material/CheckRounded\";\nimport ClearRoundedIcon from \"@mui/icons-material/ClearRounded\";\nimport ArrowBackIosRoundedIcon from \"@mui/icons-material/ArrowBackIosRounded\";\nimport ArrowForwardIosRoundedIcon from \"@mui/icons-material/ArrowForwardIosRounded\";\nimport { Link } from \"react-router-dom\";\nimport { useImportantJustifications } from \"hooks/useImportantJustifications\";\n\nconst UnmaintainedPackages = ({ analysis_id }: { analysis_id: string }) => {\n  const { data: { unmaintainedPackages } = {}, isLoading, isError } = useImportantJustifications(analysis_id);\n  const [selected, setSelected] = useState<number>(0);\n\n  const next = () => {\n    setSelected((selected + 1) % (unmaintainedPackages?.packages?.length ?? 0));\n  };\n  const previous = () => {\n    setSelected(\n      (((selected - 1) % (unmaintainedPackages?.packages?.length ?? 0)) +\n        (unmaintainedPackages?.packages?.length ?? 0)) %\n        (unmaintainedPackages?.packages?.length ?? 0),\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <>\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"rectangular\" width={210} height={118} />\n      </>\n    );\n  } else if (isError || !unmaintainedPackages) {\n    return null;\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title=\"Package Maintenance\"\n        subheader=\"Which packages are not well maintained or haven't released a new version recently\"\n      />\n      <CardContent>\n        <Grid container justifyContent=\"center\">\n          <Grid item width={\"100%\"}>\n            <Typography textAlign=\"center\" sx={{ marginBottom: 1 }} variant=\"body2\">\n              Number of months a package last had a release\n            </Typography>\n          </Grid>\n          <Grid item style={{ height: \"100%\", width: \"100%\" }}>\n            <TimelineChart\n              source={unmaintainedPackages.packages\n                .filter(obj => obj.last_release !== undefined)\n                .map(obj => [obj.id, obj.last_release])}\n              selected={unmaintainedPackages.packages[selected].id}\n            />\n          </Grid>\n          <Grid item width={\"100%\"} sx={{ marginBottom: 2 }}>\n            <Stack direction=\"row\" alignItems=\"center\">\n              <IconButton onClick={previous}>\n                <ArrowBackIosRoundedIcon fontSize=\"small\" />\n              </IconButton>\n              <Typography variant=\"body1\" fontWeight=\"bold\">{`${selected + 1}/${\n                unmaintainedPackages.packages.length\n              }`}</Typography>\n              <IconButton onClick={next}>\n                <ArrowForwardIosRoundedIcon fontSize=\"small\" />\n              </IconButton>\n              <Typography variant=\"body1\" fontWeight=\"bold\">\n                <Link replace to={\"../packages/\" + unmaintainedPackages.packages[selected].id}>\n                  {unmaintainedPackages.packages[selected].id}\n                </Link>\n              </Typography>\n            </Stack>\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n              {unmaintainedPackages.packages[selected].not_maintained ? (\n                <ClearRoundedIcon color=\"error\" fontSize=\"small\" />\n              ) : (\n                <CheckRoundedIcon color=\"success\" fontSize=\"small\" />\n              )}\n              <Typography variant=\"body2\">{`Package is ${\n                unmaintainedPackages.packages[selected].not_maintained ? \"not\" : \"\"\n              } actively maintained according to Security Scorecards`}</Typography>\n            </Stack>\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n              {unmaintainedPackages.packages[selected].low_maintainers ? (\n                <ClearRoundedIcon color=\"error\" fontSize=\"small\" />\n              ) : (\n                <CheckRoundedIcon color=\"success\" fontSize=\"small\" />\n              )}\n              <Typography variant=\"body2\">{`Package has ${\n                unmaintainedPackages.packages[selected].low_maintainers\n                  ? \"low number of maintainers on PyPI (less than 3)\"\n                  : \"sufficient maintainers on PyPI (more than 3)\"\n              }`}</Typography>\n            </Stack>\n            {unmaintainedPackages.packages[selected].last_release ? (\n              <Typography sx={{ marginLeft: 3.5 }} variant=\"body2\">{`Package's last release was on ${new Date(\n                unmaintainedPackages.packages[selected].last_release ?? \"\",\n              ).toDateString()}`}</Typography>\n            ) : undefined}\n          </Grid>\n          <Grid item xs={12} sx={{ marginBottom: 2 }}>\n            <Divider />\n          </Grid>\n          <Grid item xs={12}>\n            <Stack direction=\"row\" spacing={1}>\n              <Typography fontWeight=\"bold\" textAlign=\"center\" variant=\"body1\">\n                {`${Array.from(unmaintainedPackages.packages.values()).filter(p => p.low_maintainers).length} out of ${\n                  unmaintainedPackages.total\n                }`}\n              </Typography>\n              <Typography textAlign=\"center\" variant=\"body1\">\n                packages have a low number of maintainers ( less than 3 )\n              </Typography>\n            </Stack>\n          </Grid>\n          <Grid item xs={12}>\n            <Stack direction=\"row\" spacing={1}>\n              <Typography fontWeight=\"bold\" textAlign=\"center\" variant=\"body1\">\n                {`${Array.from(unmaintainedPackages.packages.values()).filter(p => p.not_maintained).length} out of ${\n                  unmaintainedPackages.total\n                }`}\n              </Typography>\n              <Typography textAlign=\"center\" variant=\"body1\">\n                packages are not maintained according to Security Scorecards\n              </Typography>\n            </Stack>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default UnmaintainedPackages;\n","import React, { useMemo, useState } from \"react\";\n\nimport { HorizontalRectSeries, XAxis, FlexibleWidthXYPlot, Highlight, HighlightArea, YAxis } from \"react-vis\";\nimport Color from \"color\";\nimport { histogram } from \"./utils\";\n\nexport interface IBubbleHistogram {\n  source?: {\n    values: [string, number][];\n  };\n  handleClick: (pkgs: [string, number][]) => void;\n}\n\nconst BubbleHistogram = ({ source, handleClick }: IBubbleHistogram) => {\n  const [selectionStart, setSelectionStart] = useState<number | null>(null);\n  const [selectionEnd, setSelectionEnd] = useState<number | null>(null);\n\n  const updateDragState = (area: HighlightArea | null) => {\n    const start = (area && area.left) ?? null;\n    const end = (area && area.right) ?? null;\n\n    setSelectionStart(start);\n    setSelectionEnd(end);\n\n    if (start && end) {\n      const selection: [string, number][] = [];\n      data?.forEach(pkg => {\n        const inX = pkg.x >= start && pkg.x <= end;\n        const inX0 = pkg.x0 >= start && pkg.x0 <= end;\n        const inStart = start >= pkg.x0 && start <= pkg.x;\n        const inEnd = end >= pkg.x0 && end <= pkg.x;\n\n        if (inStart || inEnd || inX || inX0) {\n          selection.push(...pkg.pkgs);\n        }\n      });\n\n      handleClick(selection);\n    } else {\n      handleClick([]);\n    }\n  };\n\n  const sourceMax = useMemo(() => {\n    if (source) {\n      return Math.max(...source.values.map(([, val]) => val));\n    }\n  }, [source]);\n\n  const data = React.useMemo(() => {\n    if (source && sourceMax) {\n      return histogram(\n        source.values.map(([, n]) => n),\n        1,\n      ).map((b, i) => {\n        return {\n          color: Color.rgb(46, 125, 50)\n            .mix(Color.rgb(237, 108, 2), (i + 1) / sourceMax)\n            .lighten(0.25)\n            .hex(),\n          selectedColor: Color.rgb(46, 125, 50)\n            .mix(Color.rgb(237, 108, 2), (i + 1) / sourceMax)\n            .darken(0.25)\n            .hex(),\n          x: i,\n          y: 0,\n          x0: i + 1,\n          y0: b + 1,\n          index: i,\n          pkgs: source.values.filter(([, count]) => count === i + 1),\n        };\n      });\n    }\n  }, [source, sourceMax]);\n\n  return (\n    <div data-testid=\"plot\">\n      <FlexibleWidthXYPlot margin={{ left: 8, right: 8 }} height={150}>\n        <XAxis\n          tickFormat={value => value.toString()}\n          tickTotal={(data?.length ?? 0) / 2}\n          style={{\n            ticks: { stroke: \"#000000\" },\n            text: { stroke: \"none\" },\n          }}\n        />\n        <YAxis />\n        <HorizontalRectSeries\n          colorType=\"literal\"\n          data={data}\n          getOpacity={d => {\n            if (selectionStart === null || selectionEnd === null) {\n              return 1;\n            }\n            const inX = d.x >= selectionStart && d.x <= selectionEnd;\n            const inX0 = d.x0 >= selectionStart && d.x0 <= selectionEnd;\n            const inStart = selectionStart >= d.x0 && selectionStart <= d.x;\n            const inEnd = selectionEnd >= d.x0 && selectionEnd <= d.x;\n\n            return inStart || inEnd || inX || inX0 ? 1 : 0.6;\n          }}\n        />\n        <Highlight color=\"#829AE3\" drag enableY={false} onDrag={updateDragState} onDragEnd={updateDragState} />\n      </FlexibleWidthXYPlot>\n    </div>\n  );\n};\n\nexport default BubbleHistogram;\n","export function histogram(data: number[], size: number) {\n  let min = Infinity;\n  let max = -Infinity;\n\n  for (const item of data) {\n    if (item < min) min = item;\n    else if (item > max) max = item;\n  }\n\n  const bins = Math.ceil((max - min + 1) / size);\n\n  const histogram = new Array(bins).fill(0);\n\n  for (const item of data) {\n    histogram[Math.floor((item - min) / size)]++;\n  }\n\n  return histogram;\n}\n","import { Card, CardContent, CardHeader, Divider, Grid, Skeleton, Stack, Typography } from \"@mui/material\";\nimport BubbleHistogram from \"components/molecules/BubbleHistogram\";\nimport { useImportantJustifications } from \"hooks/useImportantJustifications\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst WarningPackages = ({ analysis_id }: { analysis_id?: string }) => {\n  const { data: { warningPackages } = {} } = useImportantJustifications(analysis_id);\n  const [warningPackagesSelected, setWarningPackagesSelected] = useState<[string, number][]>([]);\n\n  const handleClick = (pkgs: [string, number][]) => {\n    setWarningPackagesSelected(pkgs);\n  };\n\n  if (!warningPackages?.values) {\n    return (\n      <>\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"rectangular\" width={210} height={118} />\n      </>\n    );\n  } else if (!warningPackages) {\n    return null;\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader title=\"Package Warnings\" subheader=\"The distribution of all package warnings generated by Thoth\" />\n      <CardContent>\n        <Grid container justifyContent=\"center\">\n          <Grid item style={{ height: \"100%\", width: \"100%\" }}>\n            <BubbleHistogram source={warningPackages} handleClick={handleClick} />\n          </Grid>\n          <Grid item width={\"100%\"}>\n            <Typography textAlign=\"center\" sx={{ marginBottom: 0.5 }} variant=\"body1\" fontStyle=\"italic\">\n              {warningPackagesSelected.length > 0\n                ? `${warningPackagesSelected.length} packages selected`\n                : \"Click and drag on the chart to select packages\"}\n            </Typography>\n            {warningPackagesSelected.length > 0 && (\n              <>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography fontWeight=\"bold\" variant=\"body1\">\n                    Average Warnings:\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {(warningPackagesSelected.reduce((p, [, c]) => p + c, 0) / warningPackagesSelected.length).toFixed(\n                      1,\n                    )}\n                  </Typography>\n                </Stack>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography fontWeight=\"bold\" variant=\"body1\">\n                    Max Warnings:\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {warningPackagesSelected.sort(([, a], [, b]) => a - b).at(-1)?.[1]}\n                  </Typography>\n                </Stack>\n                <Stack direction=\"row\" spacing={1} sx={{ marginBottom: 2 }}>\n                  <Typography fontWeight=\"bold\" variant=\"body1\">\n                    Min Warnings:\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {warningPackagesSelected.sort(([, a], [, b]) => a - b).at(0)?.[1]}\n                  </Typography>\n                </Stack>\n                {Array.from(new Set(warningPackagesSelected.map(([, c]) => c)).values())\n                  .sort((a, b) => b - a)\n                  .map(count => (\n                    <React.Fragment key={count}>\n                      <Typography color=\"gray\" variant=\"subtitle2\" fontStyle=\"italic\">{`${count} warnings`}</Typography>\n                      <Divider />\n                      <Grid\n                        container\n                        spacing={1.5}\n                        sx={{\n                          marginBottom: 1,\n                          marginLeft: 1,\n                        }}\n                      >\n                        {warningPackagesSelected\n                          .filter(([, c]) => c === count)\n                          .map(([pkg]) => (\n                            <Grid key={pkg} item>\n                              <Link replace to={\"../packages/\" + pkg}>\n                                {pkg}\n                              </Link>\n                            </Grid>\n                          ))}\n                      </Grid>\n                    </React.Fragment>\n                  ))}\n              </>\n            )}\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default WarningPackages;\n","import React from \"react\";\nimport AdviseHeader from \"components/organisms/AdviseHeader\";\nimport { Masonry } from \"@mui/lab\";\nimport CVEPackages from \"components/organisms/summary_charts/CVEPackages\";\nimport DependencySummary from \"components/organisms/summary_charts/DependencySummary\";\nimport LicenseSummary from \"components/organisms/summary_charts/LicenseSummary\";\nimport UnmaintainedPackages from \"components/organisms/summary_charts/UnmaintainedPackages\";\nimport WarningPackages from \"components/organisms/summary_charts/WarningPackages\";\n\nexport const AdviseSummary = ({ analysis_id }: { analysis_id: string }) => {\n  return (\n    <Masonry columns={{ xs: 1, md: 2 }} spacing={3} sx={{ mb: 3, mt: 1 }}>\n      <AdviseHeader analysis_id={analysis_id} />\n      <WarningPackages analysis_id={analysis_id} />\n      <CVEPackages analysis_id={analysis_id} />\n      <LicenseSummary analysis_id={analysis_id} />\n      <DependencySummary analysis_id={analysis_id} />\n      <UnmaintainedPackages analysis_id={analysis_id} />\n    </Masonry>\n  );\n};\n","import React, { useMemo, useState } from \"react\";\n\n// mui\nimport { Chip, List, ListItemButton, ListItemSecondaryAction, ListItemText, Stack, Typography } from \"@mui/material\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\n\n// local\nimport SearchBar from \"components/molecules/SearchBar\";\nimport { useAdviseDocument } from \"api\";\n\ninterface IPackageList {\n  analysis_id: string;\n  selected_package?: string;\n  onPackageClick: (pkg: string) => void;\n}\n\n/**\n * The table cells and total structure specific to\n * python packages.\n */\nfunction PackageList({ analysis_id, selected_package, onPackageClick }: IPackageList) {\n  const [search, setSearch] = useState<string>(\"\");\n  const { package_list, justifications } = useAdviseDocument(analysis_id);\n\n  const handleSearch = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setSearch(event.target.value);\n  };\n\n  const alerts = useMemo(() => {\n    const packageAlerts = new Map<string, { errors: number; warnings: number }>();\n\n    if (justifications) {\n      justifications.forEach(j => {\n        const pkg_name = (j as unknown as { package_name: string })?.package_name;\n        if (pkg_name) {\n          packageAlerts.set(pkg_name, {\n            errors: (j.type === \"ERROR\" ? 1 : 0) + (packageAlerts.get(pkg_name)?.errors ?? 0),\n            warnings: (j.type === \"WARNING\" ? 1 : 0) + (packageAlerts.get(pkg_name)?.warnings ?? 0),\n          });\n        }\n      });\n    }\n\n    return packageAlerts;\n  }, [justifications]);\n\n  if (!package_list || package_list.length === 0) {\n    return null;\n  }\n\n  return (\n    <Stack spacing={2} sx={{ maxHeight: \"100%\" }}>\n      <SearchBar onChange={handleSearch} lefticon={<SearchRoundedIcon />} />\n      <List sx={{ overflow: \"scroll\" }} dense>\n        {package_list\n          .filter(p => p.name.startsWith(search))\n          .map(p => {\n            return (\n              <ListItemButton\n                key={p.name + p.version}\n                onClick={() => onPackageClick(p.name)}\n                selected={selected_package === p.name}\n                sx={{ borderRadius: 1.5 }}\n              >\n                <ListItemText primary={<Typography variant=\"h5\">{p.name}</Typography>} secondary={`v${p.version}`} />\n                <ListItemSecondaryAction>\n                  <Stack direction=\"row\" spacing={1}>\n                    {alerts.get(p.name)?.warnings ? (\n                      <Chip\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        icon={<WarningAmberOutlinedIcon />}\n                        label={alerts.get(p.name)?.warnings}\n                        color=\"warning\"\n                      />\n                    ) : undefined}\n                    {alerts.get(p.name)?.errors ? (\n                      <Chip\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        icon={<ErrorOutlineOutlinedIcon />}\n                        label={alerts.get(p.name)?.errors}\n                        color=\"error\"\n                      />\n                    ) : undefined}\n                  </Stack>\n                </ListItemSecondaryAction>\n              </ListItemButton>\n            );\n          })}\n      </List>\n    </Stack>\n  );\n}\n\nexport default PackageList;\n","/**\n * used for vis-js graph render engine\n */\nexport const config = {\n  manipulation: {\n    enabled: false,\n  },\n  interaction: {\n    hover: true,\n    hoverConnectedEdges: false,\n    selectConnectedEdges: false,\n    selectable: true,\n  },\n  edges: {\n    chosen: false,\n    smooth: false,\n    color: {\n      color: \"#5c6470\",\n    },\n    arrowStrikethrough: false,\n    arrows: {\n      from: {\n        enabled: true,\n        type: \"triangle\",\n      },\n    },\n  },\n\n  nodes: {\n    chosen: false,\n    color: {\n      background: \"#5c6470\",\n      border: \"#fff\",\n      hover: {\n        background: \"#f39200\",\n        border: \"#fff\",\n      },\n    },\n    shape: \"dot\",\n    size: 10,\n    borderWidth: 2,\n    labelHighlightBold: false,\n    font: {\n      color: \"#393e46\",\n      strokeWidth: 2,\n      size: 15,\n    },\n  },\n  physics: {\n    hierarchicalRepulsion: {\n      damping: 0.1,\n      springLength: 200,\n    },\n    solver: \"hierarchicalRepulsion\",\n    minVelocity: 0.15,\n  },\n};\n","// react\nimport React, { useEffect, useRef } from \"react\";\n\n// utils and configs\nimport { config } from \"./config\";\n\n// vis-network\nimport { Network, DataSet, Data } from \"vis-network/standalone\";\n\n// Types\nimport { PackageNodeValue } from \"lib/interfaces\";\nimport { useGraph } from \"hooks\";\nimport { VisGraphNode } from \"lib/interfaces/VisGraphNode\";\nimport { useVisGraphEdges } from \"hooks/useVisGraphEdges\";\n\ninterface IDependencyGraph {\n  // advise to create graph from\n  analysis_id: string;\n  // starting package for the graph\n  root?: PackageNodeValue[\"id\"];\n  // The height of the graph\n  graphHeight?: string | number;\n}\n\n/**\n * Renders a network graph visualization using `vis-network`.\n */\nconst DependencyGraph = ({ analysis_id, root = \"*App\", graphHeight = \"50vh\", ...props }: IDependencyGraph) => {\n  const visJsRef = useRef<HTMLDivElement>(null);\n  const { data: edges } = useVisGraphEdges(analysis_id);\n  const { data: graph } = useGraph(analysis_id);\n\n  // create the graph\n  useEffect(() => {\n    if (!graph || !edges) {\n      return;\n    }\n\n    const selectedNode = graph.nodes.get(root);\n\n    if (selectedNode) {\n      const nodes = graph.findAllNodesOnAllPaths(selectedNode, \"*App\");\n\n      const app_node = graph.nodes.get(\"*App\");\n      if (app_node) {\n        nodes.set(\"*App\", app_node);\n      }\n\n      // convert to vis graph format\n      const convertedNodes = new DataSet<VisGraphNode>();\n      nodes.forEach(node => {\n        // default colors\n        let color = config.nodes.color.background;\n        let font = undefined;\n\n        // if node is root\n        if (node.key === \"*App\") {\n          color = \"#4fc1ea\";\n          font = { color: \"#4fc1ea\", strokeWidth: 3, size: 20 };\n        }\n        // if selected node\n        else if (node.key === selectedNode?.key) {\n          color = \"#f39200\";\n        }\n\n        convertedNodes.add({\n          ...node.value,\n          label: node.value.name,\n          id: node.key,\n          color: color,\n          font: font,\n        });\n      });\n\n      const visData: Data = {\n        nodes: convertedNodes,\n        edges: new DataSet(edges ?? []),\n      };\n\n      const network = visJsRef.current && new Network(visJsRef.current, visData, config);\n\n      // change cursor when hovering and grabbing\n      // Get the canvas HTML element\n      const networkCanvas = document?.getElementById(\"mynetwork\")?.getElementsByTagName(\"canvas\")[0];\n\n      // changes the cursor graphic depending on where and what the mouse is doing\n      const changeCursor = (newCursorStyle: string) => {\n        if (networkCanvas) {\n          networkCanvas.style.cursor = newCursorStyle;\n        }\n      };\n\n      if (network) {\n        network.on(\"hoverNode\", function () {\n          changeCursor(\"grab\");\n        });\n        network.on(\"blurNode\", function () {\n          changeCursor(\"default\");\n        });\n        network.on(\"dragStart\", function () {\n          changeCursor(\"grabbing\");\n        });\n        network.on(\"dragging\", function () {\n          changeCursor(\"grabbing\");\n        });\n        network.on(\"dragEnd\", function () {\n          changeCursor(\"grab\");\n        });\n      }\n    }\n  }, [root, graph, visJsRef, edges]);\n\n  return (\n    <div {...props} style={{ display: \"flex\", flexFlow: \"column nowrap\" }}>\n      <div ref={visJsRef} id=\"mynetwork\" style={{ flex: \"1 1 auto\", height: graphHeight }} />\n    </div>\n  );\n};\n\nexport default DependencyGraph;\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useGraph } from \"./useGraph\";\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useVisGraphEdges(analysis_id: string) {\n  const { data: graph } = useGraph(analysis_id);\n\n  const queryFunction = async () => {\n    if (!graph) {\n      return;\n    }\n\n    const visGraphEdges = new Map<string, { id: string; to: string; from: string }>();\n\n    // add edges from old graph\n    graph.nodes.forEach(node => {\n      // set package edges\n      node.adjacents.forEach(adj => {\n        visGraphEdges.set(node.key + adj.key, {\n          id: node.key + adj.key,\n          to: node.key,\n          from: adj.key,\n        });\n      });\n    });\n    return Array.from(visGraphEdges.values());\n  };\n\n  const query = useQuery({\n    queryKey: [\"vis_graph_edges\", analysis_id],\n    enabled: !!graph,\n    queryFn: async () => queryFunction(),\n  });\n\n  return { data: query.data, isLoading: query.isLoading, loadingProgress: null, loadingText: null };\n}\n","import React, { useState } from \"react\";\nimport { Box, Collapse, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\ninterface IDropdownListItem {\n  title: string;\n  children: JSX.Element;\n  icon?: JSX.Element;\n}\n\nconst DropdownListItem = ({ title, icon, children }: IDropdownListItem) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Box>\n      <Grid\n        container\n        alignItems=\"center\"\n        sx={{\n          backgroundColor: open ? \"action.selected\" : undefined,\n          borderRadius: \"16px\",\n        }}\n      >\n        <Grid item xs={11}>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n            <IconButton onClick={() => setOpen(!open)}>\n              <KeyboardArrowDown\n                sx={{\n                  mr: -1,\n                  transform: open ? \"rotate(0deg)\" : \"rotate(-90deg)\",\n                  transition: \"0.2s\",\n                }}\n              />\n            </IconButton>\n            <Typography variant=\"body1\" fontWeight=\"bolder\">\n              {title}\n            </Typography>\n          </Stack>\n        </Grid>\n        <Grid item xs={1}>\n          <Box display=\"flex\" justifyContent=\"flex-end\" sx={{ marginRight: 2 }}>\n            {icon}\n          </Box>\n        </Grid>\n      </Grid>\n      <Collapse in={open}>{children}</Collapse>\n    </Box>\n  );\n};\n\nexport default DropdownListItem;\n","import React from \"react\";\nimport { Chip, Grid, Stack, Typography } from \"@mui/material\";\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport DropdownListItem from \"components/molecules/DropdownListItem/DropdownListItem\";\n\ntype ScoreCardItemProp = {\n  tags: string;\n  name: string;\n  short: string;\n  risk: string;\n  passing?: boolean;\n  justification?: string;\n};\nexport const ScorecardItem = ({ tags, name, short, risk, passing, justification }: ScoreCardItemProp) => {\n  return (\n    <DropdownListItem\n      title={name}\n      icon={!passing ? <CloseRoundedIcon color=\"error\" /> : <DoneRoundedIcon color=\"success\" />}\n    >\n      <Grid container sx={{ marginLeft: 5, marginBottom: 1, paddingRight: 1 }}>\n        <Grid item xs={12} sx={{ marginBottom: 2 }}>\n          <Typography variant=\"body2\">{short}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography fontWeight=\"bolder\" variant=\"body2\">\n            Reason\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sx={{ marginBottom: 1 }}>\n          <Typography variant=\"body2\">{justification}</Typography>\n        </Grid>\n        <Grid item xs={12} sx={{ marginBottom: 1 }}>\n          <Stack alignItems=\"center\" direction=\"row\" spacing={1}>\n            <Typography variant=\"body2\">risk: </Typography>\n            <Chip size=\"small\" label={risk} color={risk === \"High\" ? \"error\" : risk == \"Medium\" ? \"warning\" : \"info\"} />\n          </Stack>\n        </Grid>\n        <Grid item xs={12}>\n          <Stack alignItems=\"center\" direction=\"row\" spacing={1}>\n            <Typography variant=\"body2\">tags: </Typography>\n            {tags.split(\", \").map(tag => {\n              return <Chip size=\"small\" key={tag} label={tag} />;\n            })}\n          </Stack>\n        </Grid>\n      </Grid>\n    </DropdownListItem>\n  );\n};\n","import { useEffect, useMemo, useState } from \"react\";\nimport { getYamlFile } from \"api\";\nimport { components } from \"lib/schema\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n// match package name and scorecard justification\nfunction getMatch(name: string, scorecards: components[\"schemas\"][\"Justification\"]) {\n  const matchLookup = {\n    Maintained: \"actively maintained\",\n    \"Dependency-Update-Tool\": \"automatic dependency updates\",\n    \"Binary-Artifacts\": \"binary artifacts\",\n    \"Branch-Protection\": \"branch protection\",\n    \"CI-Tests\": \"CI tests\",\n    \"CII-Best-Practices\": \"CII Best Practices\",\n    \"Code-Review\": \"code review\",\n    Contributors: \"contributors\",\n    Fuzzing: \"fuzzing\",\n    Packaging: \"published as a package\",\n    \"Pinned-Dependencies\": \"pinned dependencies\",\n    SAST: \"static source code analysis\",\n    \"Security-Policy\": \"security policy\",\n    \"Signed-Releases\": \"sign tags\",\n    \"Token-Permissions\": \"least privilege\",\n    Vulnerabilities: \"vulnerabilities\",\n    \"Dangerous-Workflow\": \"dangerous\",\n    License: \"license\",\n  };\n\n  const pattern = matchLookup[name as keyof typeof matchLookup];\n  return scorecards.find(scorecard => scorecard.message.includes(pattern));\n}\n\nexport type ScorecardJustificationType = {\n  tags: string;\n  name: string;\n  short: string;\n  risk: string;\n  passing?: boolean | undefined;\n  justification?: string | undefined;\n}[];\n\nexport const useScorecard = (package_name?: string, justifications?: components[\"schemas\"][\"Justification\"]) => {\n  // scorecard metric state for specific package\n  const [scorecard, setScorecard] = useState<ScorecardJustificationType>([]);\n\n  // queries ossf data and caches it\n  const ossfDefinitions = useQuery([\"ossfDefs\"], () => {\n    return getYamlFile(\"https://raw.githubusercontent.com/ossf/scorecard/main/docs/checks/internal/checks.yaml\");\n  });\n\n  const scorecardJustifications = useMemo(() => {\n    if (justifications && package_name) {\n      // extract only scorecard justifications\n      return Array.from(justifications.values()).filter(s => {\n        const justification = s as typeof s & { package_name?: string };\n        if (\n          justification.link === \"https://github.com/ossf/scorecard/blob/main/docs/checks.md\" &&\n          justification.package_name === package_name\n        ) {\n          return true;\n        }\n        return false;\n      });\n    }\n  }, [justifications, package_name]);\n\n  useEffect(() => {\n    if (!ossfDefinitions.data) {\n      return;\n    }\n\n    setScorecard(\n      Object.entries(ossfDefinitions.data?.checks ?? {})\n        .filter(([key]) => getMatch(key, scorecardJustifications ?? []))\n        .map(([name, value]) => {\n          const info = value as { [k: string]: unknown };\n          const match = getMatch(name, scorecardJustifications ?? []);\n          return {\n            tags: info?.tags as string,\n            name: name as string,\n            short: info?.short as string,\n            risk: info?.risk as string,\n            justification: match?.message as string,\n            passing: match?.type !== \"WARNING\",\n          };\n        }),\n    );\n  }, [ossfDefinitions.data, scorecardJustifications]);\n\n  // const query = useQuery({\n  //   queryKey: [\"vis_graph_edges\", analysis_id],\n  //   enabled: !!graph,\n  //   queryFn: async () => queryFunction()\n  // })\n\n  // return {data: query.data, isLoading: query.isLoading, loadingProgress: null, loadingText: null};\n\n  return scorecard;\n};\n","import React from \"react\";\nimport { Card, CardContent, CardHeader, IconButton, Stack } from \"@mui/material\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\n\nimport { ScorecardItem } from \"./ScorecardItem\";\nimport { useScorecard } from \"./useScorecard\";\nimport { useAdviseDocument } from \"api\";\n\ninterface IScorecardMetric {\n  package_name: string;\n  analysis_id: string;\n}\n\nconst ScorecardMetric = ({ package_name, analysis_id }: IScorecardMetric) => {\n  const { justifications } = useAdviseDocument(analysis_id);\n  const scorecard = useScorecard(package_name, justifications);\n\n  return (\n    <Card variant=\"outlined\" sx={{ marginTop: 2 }}>\n      <CardHeader\n        title=\"Security Scorecards\"\n        subheader={`Scorecards give consumers of open-source projects an easy way to judge whether their dependencies are safe.`}\n        action={\n          <IconButton\n            href={\"https://github.com/ossf/scorecard/blob/main/docs/checks.md\"}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <OpenInNewRoundedIcon />\n          </IconButton>\n        }\n      />\n      <CardContent>\n        <Stack>\n          {scorecard.map(value => {\n            return <ScorecardItem key={value.name} {...value} />;\n          })}\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ScorecardMetric;\n","import React, { useMemo } from \"react\";\nimport { components } from \"lib/schema\";\n\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport ArticleRoundedIcon from \"@mui/icons-material/ArticleRounded\";\nimport NewReleasesRoundedIcon from \"@mui/icons-material/NewReleasesRounded\";\nimport { Grid, Divider } from \"@mui/material\";\nimport IconText from \"components/molecules/IconText\";\n\nconst PATTERNS = [\n  \"libraries.io\",\n  \"released on PyPI\",\n  \"hosted on GitHub\",\n  \"Release notes\",\n  \"StackOverflow tags\",\n  \"project documentation\",\n];\n\nexport const linkFilterFunction = (message: string) => {\n  return PATTERNS.some(pattern => message.includes(pattern));\n};\n\nexport const LinkData = ({ justifications }: { justifications?: components[\"schemas\"][\"Justification\"] }) => {\n  const linkData = useMemo(() => {\n    let temp = {\n      \"libraries.io\": {\n        label: \"libraries.io\",\n        icon: <OpenInNewRoundedIcon />,\n        link: \"\",\n      },\n      \"released on PyPI\": {\n        label: \"PyPI\",\n        icon: <OpenInNewRoundedIcon />,\n        link: \"\",\n      },\n      \"hosted on GitHub\": {\n        label: \"GitHub\",\n        icon: <GitHubIcon />,\n        link: \"\",\n      },\n      \"Release notes\": {\n        label: \"Release\",\n        icon: <NewReleasesRoundedIcon />,\n        link: \"\",\n      },\n      \"StackOverflow tags\": {\n        label: \"StackOverflow\",\n        icon: <OpenInNewRoundedIcon />,\n        link: \"\",\n      },\n      \"project documentation\": {\n        label: \"Documentation\",\n        icon: <ArticleRoundedIcon />,\n        link: \"\",\n      },\n    };\n\n    if (justifications) {\n      justifications.forEach(s => {\n        PATTERNS.forEach(pattern => {\n          if (s.message.includes(pattern)) {\n            temp = {\n              ...temp,\n              [pattern]: {\n                ...temp[pattern as unknown as keyof typeof temp],\n                link: s?.link ?? \"\",\n              },\n            };\n          }\n        });\n      });\n    }\n\n    Object.entries(temp).forEach(([key, value]) => {\n      if (value.link === \"\") {\n        delete temp[key as keyof typeof temp];\n      }\n    });\n\n    return temp;\n  }, [justifications]);\n\n  return (\n    <React.Fragment>\n      {Object.values(linkData).map((value, i) => {\n        return (\n          <React.Fragment key={value?.link ?? \"\" + i}>\n            <Grid item>\n              <Divider orientation=\"vertical\" />\n            </Grid>\n            <Grid key={value.label} item>\n              <IconText text={value.label ?? \"\"} icon={value.icon} link={value?.link} />\n            </Grid>\n          </React.Fragment>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { CardHeader, Card, IconButton } from \"@mui/material\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport { components } from \"lib/schema\";\n\ninterface ICustomJustificationCard {\n  justification?: components[\"schemas\"][\"Justification\"][number];\n  avatar?: JSX.Element & React.ReactNode;\n}\n\nconst CustomJustificationCard = ({ justification, avatar }: ICustomJustificationCard) => {\n  if (!justification) {\n    return null;\n  }\n\n  return (\n    <Card variant=\"outlined\" sx={{ marginTop: 2 }}>\n      <CardHeader\n        title={justification.message}\n        action={\n          <IconButton href={justification.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            <OpenInNewRoundedIcon />\n          </IconButton>\n        }\n        avatar={avatar}\n      />\n    </Card>\n  );\n};\n\nexport default CustomJustificationCard;\n","import { useQueries, useQuery } from \"@tanstack/react-query\";\nimport {\n  PackageMetadataRequestResponseSuccess,\n  useAdviseDocument,\n  usePackageMetadata,\n  usePackagesMetadata,\n} from \"api\";\nimport { Graph, Node } from \"lib/interfaces\";\nimport { PackageVersionValue } from \"lib/interfaces/PackageVersionValue\";\nimport { PythonPackageParameters } from \"lib/types/PythonPackageParameters\";\nimport { useMemo } from \"react\";\nimport { useGraph } from \"./useGraph\";\n\nconst queryFunction = (\n  packageParameters?: PythonPackageParameters,\n  packageMetadata?: PackageMetadataRequestResponseSuccess,\n  justifications?: { package_name?: string; type: \"WARNING\" | \"ERROR\" | \"INFO\" }[],\n  graph?: Graph<Node<PackageVersionValue>>,\n) => {\n  const packageJustifications = justifications?.filter(j => j?.package_name === packageParameters?.name);\n  const node = graph?.nodes.get(packageParameters?.name as string);\n\n  return {\n    // graph dependent\n    adjacent: Array.from(node?.adjacents.values() ?? []).map(adj => adj.key),\n    parents: Array.from(node?.parents.values() ?? []),\n\n    // advise document dependent\n    ...packageParameters,\n    warningsCount: packageJustifications?.reduce((prev, cur) => (prev + cur.type === \"WARNING\" ? 1 : 0), 0),\n    errorCount: packageJustifications?.reduce((prev, cur) => (prev + cur.type === \"ERROR\" ? 1 : 0), 0),\n    infoCount: packageJustifications?.reduce((prev, cur) => (prev + cur.type === \"INFO\" ? 1 : 0), 0),\n\n    // metadata dependent\n    size: packageMetadata?.metadata?.importlib_metadata?.files.reduce(\n      (prev, cur: { size?: number }) => prev + (cur?.size ?? 0),\n      0,\n    ),\n    license: packageMetadata?.metadata?.importlib_metadata?.metadata?.License as string,\n    summary: packageMetadata?.metadata?.importlib_metadata?.metadata?.Summary as string,\n    dependencies: packageMetadata?.metadata?.dependencies,\n    packages: packageMetadata?.metadata?.packages,\n  };\n};\n\nexport const usePackageData = (package_name?: string, analysis_id?: string) => {\n  const { data: graph } = useGraph(analysis_id);\n  const { justifications, package_list } = useAdviseDocument(analysis_id);\n  const packageParameters = useMemo(\n    () => package_list?.find(pkg => pkg.name === package_name),\n    [package_list, package_name],\n  );\n  const packageMetadata = usePackageMetadata(\n    packageParameters?.name,\n    packageParameters?.version,\n    packageParameters?.index,\n    packageParameters?.os_name,\n    packageParameters?.os_version,\n    packageParameters?.python_version,\n  );\n\n  const query = useQuery({\n    queryKey: [\"package_data\", analysis_id, package_name, !!graph, !!packageMetadata],\n    enabled: !!packageParameters,\n    queryFn: async () => queryFunction(packageParameters, packageMetadata.data?.data, justifications, graph),\n  });\n\n  return {\n    data: query.data,\n    isLoading: query.isLoading,\n    isError: query.isError,\n    loadingProgress: null,\n    loadingText: \"extracting details from package metadata\",\n  };\n};\n\nexport const usePackagesData = (analysis_id?: string) => {\n  const { package_list, justifications } = useAdviseDocument(analysis_id);\n  const { data: graph } = useGraph(analysis_id);\n  const packagesMetadata = usePackagesMetadata(package_list);\n\n  const queries = useQueries({\n    queries: (package_list ?? []).map(packageParameters => {\n      const packageMetadata = packagesMetadata.find(\n        query => query.data?.data?.parameters?.name === packageParameters.name,\n      );\n      return {\n        queryKey: [\"package_data\", analysis_id, packageParameters.name, !!graph, !!packageMetadata?.data?.data],\n        enabled: !!packageParameters,\n        queryFn: async () => queryFunction(packageParameters, packageMetadata?.data?.data, justifications, graph),\n      };\n    }),\n  });\n  const data = useMemo(() => {\n    const packagesDataList = queries.map(query => query.data);\n    const packagesDataMap = new Map<string, typeof packagesDataList[number]>();\n    packagesDataList.forEach(pkg => pkg?.name && packagesDataMap.set(pkg.name, pkg));\n    return { packagesDataList, packagesDataMap };\n  }, [queries]);\n\n  const { isLoading, isError, progress } = useMemo(\n    () =>\n      queries.reduce(\n        (prev, cur) => ({\n          isLoading: prev.isLoading || cur.isLoading,\n          isError: prev.isError || cur.isError,\n          progress: prev.progress + (cur.isFetched ? 1 : 0),\n        }),\n        {\n          isLoading: false,\n          isError: false,\n          progress: 0,\n        },\n      ),\n    [queries],\n  );\n\n  return {\n    data,\n    isLoading,\n    isError,\n    loadingProgress: progress / queries.length,\n    loadingText: \"extracting details from package metadata\",\n  };\n};\n","// React\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Grid, Box, Link, Stack, CardHeader, CardContent, Card } from \"@mui/material\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\nimport ErrorRoundedIcon from \"@mui/icons-material/ErrorRounded\";\nimport StarRoundedIcon from \"@mui/icons-material/StarRounded\";\n\n// local\nimport IconText from \"components/molecules/IconText\";\nimport NetworkGraphView from \"../DependencyGraph\";\nimport ScorecardMetric from \"components/organisms/ScorecardMetric\";\nimport { LinkData, linkFilterFunction } from \"./LinkData\";\n\nimport InfoRoundedIcon from \"@mui/icons-material/InfoOutlined\";\nimport WarningAmberRoundedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomJustificationCard from \"../CustomJustificationCard\";\nimport { useAdviseDocument } from \"api\";\nimport { usePackageData } from \"hooks/usePackageData\";\nimport Loading from \"components/atoms/Loading\";\n\ninterface ISelectedPackage {\n  analysis_id: string;\n  selectedPackage: string;\n  setSelectedPackage?: (key: string) => void;\n}\n\n/**\n * Renders the selected package context variable's data. It will preform\n * a search of the list of packages using the selected package variable.\n */\nexport const SelectedPackage = ({\n  analysis_id,\n  selectedPackage,\n  setSelectedPackage = () => undefined,\n}: ISelectedPackage) => {\n  const { data: packageData, isLoading, isError, loadingText } = usePackageData(selectedPackage, analysis_id);\n  const { justifications } = useAdviseDocument(analysis_id);\n\n  const navigate = useNavigate();\n\n  const packageJustifications = useMemo(() => {\n    return justifications?.filter(j => (j as { package_name?: string }).package_name === selectedPackage);\n  }, [justifications, selectedPackage]);\n\n  const justificationCards = useMemo(() => {\n    if (packageJustifications) {\n      const cards = [\n        <ScorecardMetric key=\"scorecard\" analysis_id={analysis_id} package_name={selectedPackage} />,\n\n        <CustomJustificationCard\n          key=\"star\"\n          avatar={<StarRoundedIcon />}\n          justification={packageJustifications.find(j => j.message.includes(\"popularity on GitHub\"))}\n        />,\n      ];\n\n      packageJustifications\n        .filter(justification => {\n          if (justification.link === \"https://github.com/ossf/scorecard/blob/main/docs/checks.md\") {\n            return false;\n          } else if (justification.message.includes(\"Thoth Search UI\")) {\n            return false;\n          } else if (linkFilterFunction(justification.message)) {\n            return false;\n          }\n          return true;\n        })\n        .forEach((justification, i) => {\n          cards.push(\n            <CustomJustificationCard\n              key={justification.message + i}\n              avatar={\n                justification.type === \"ERROR\" ? (\n                  <ErrorRoundedIcon color=\"error\" />\n                ) : justification.type === \"WARNING\" ? (\n                  <WarningAmberRoundedIcon color=\"warning\" />\n                ) : (\n                  <InfoRoundedIcon color=\"info\" />\n                )\n              }\n              justification={justification}\n            />,\n          );\n        });\n\n      return cards;\n    }\n  }, [packageJustifications]);\n\n  const dependents = useMemo<string[]>(() => {\n    const deps: string[] = [];\n\n    if (packageData) {\n      [...packageData.parents]\n        .filter(p => p !== \"*App\")\n        .forEach(node => {\n          deps.push(node);\n        });\n    }\n\n    return deps;\n  }, [packageData]);\n\n  const browseLink = useMemo(() => {\n    if (packageJustifications) {\n      const just = packageJustifications.find(s => s.message.includes(\"Thoth Search UI\"));\n      return just?.link;\n    }\n  }, [packageJustifications]);\n\n  if (isLoading || isError || !packageData) {\n    return <Loading isLoading={isLoading} isError={isError} loadingLabel={loadingText} />;\n  }\n\n  return (\n    <Box sx={{ overflow: \"scroll\" }}>\n      <Card variant=\"outlined\" sx={{ padding: 2 }}>\n        <Grid container alignItems=\"center\" mb={1}>\n          <Grid item>\n            <Typography variant=\"h3\">\n              <Link underline=\"none\" href={browseLink}>\n                <b>{packageData?.name}</b>\n              </Link>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography ml={2} variant=\"h6\">\n              {packageData.version}\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={1}>\n          <Grid item>\n            <IconText text={packageData.license ?? \"NaN\"} icon={<GavelIcon />} />\n          </Grid>\n          <LinkData justifications={packageJustifications} />\n        </Grid>\n\n        <Typography sx={{ marginTop: 2 }} variant=\"body1\">\n          {packageData.summary}\n        </Typography>\n\n        {!packageData.summary && (\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ marginTop: 2 }}>\n            <ErrorRoundedIcon color=\"error\" sx={{ marginRight: \".5rem\" }} />\n            <Typography mb={0} color=\"error\" gutterBottom variant=\"body2\">\n              The package metadata could not be fetched.\n            </Typography>\n          </Stack>\n        )}\n      </Card>\n\n      {justificationCards}\n\n      <Card variant=\"outlined\" sx={{ marginTop: 2 }}>\n        <CardHeader\n          title=\"Dependency Graph\"\n          subheader={\n            <Typography variant=\"body1\" mb={2}>\n              {[...(packageData?.parents ?? [])].filter(p => p !== \"*App\")?.length === 0\n                ? packageData.name + \" is not a dependent of any package in this Python environment\"\n                : \"There are \" +\n                  [...(packageData?.parents ?? [])].filter(p => p !== \"*App\")?.length +\n                  \" package(s) that have \" +\n                  packageData.name +\n                  \" as a direct dependency: \"}\n              {dependents.map((dep, i) => {\n                return (\n                  <React.Fragment key={dep + i}>\n                    <Link\n                      underline=\"hover\"\n                      onClick={() => {\n                        setSelectedPackage(dep);\n                        navigate(\"../packages/\" + dep);\n                      }}\n                    >\n                      {dep}\n                    </Link>{\" \"}\n                  </React.Fragment>\n                );\n              })}\n            </Typography>\n          }\n        />\n        <CardContent>\n          <NetworkGraphView analysis_id={analysis_id} root={selectedPackage} />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default SelectedPackage;\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport PackageList from \"components/organisms/PackageList\";\nimport SelectedPackage from \"components/organisms/SelectedPackage\";\n\nexport const AdviseDetails = ({ analysis_id }: { analysis_id: string }) => {\n  const params = useParams();\n  const [selected, setSelected] = useState<string>(\"\");\n  // const {isLoading, isError, LoadingComponent} = useGraph(analysis_id)\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (params.pkg) {\n      setSelected(params.pkg);\n    }\n  }, [params.pkg]);\n\n  // if(isLoading || isError) {\n  //   return (\n  //     <LoadingComponent errorSubtitle=\"Package data not available. The advise run encountered an error.\" />\n  //   )\n  // }\n\n  return (\n    <Box flexDirection=\"column\" display=\"flex\" height=\"100%\" justifyContent=\"center\" alignItems=\"flex-start\">\n      <Box flexGrow={1} display=\"flex\" sx={{ overflowY: \"hidden\", width: \"100%\" }}>\n        <Box overflow=\"auto\" sx={{ marginRight: 2, minWidth: \"500px\" }}>\n          <PackageList\n            selected_package={selected}\n            analysis_id={analysis_id}\n            onPackageClick={key => {\n              setSelected(key);\n              navigate(\"../packages/\" + key);\n            }}\n          />\n        </Box>\n        <Box overflow=\"auto\" sx={{ minWidth: \"50%\", width: \"100%\" }}>\n          {!selected ? (\n            <Box height=\"100%\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n              <Typography variant=\"h5\" align=\"center\">\n                Choose a package\n              </Typography>\n              <Typography variant=\"body2\" align=\"center\">\n                Click on a package from the packages found in the Pipfile.lock\n              </Typography>\n            </Box>\n          ) : (\n            <SelectedPackage\n              selectedPackage={selected}\n              analysis_id={analysis_id}\n              setSelectedPackage={key => {\n                setSelected(key);\n                navigate(\"../packages/\" + key);\n              }}\n            />\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import * as React from \"react\";\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\nimport Box from \"@mui/material/Box\";\nimport Fab from \"@mui/material/Fab\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Zoom from \"@mui/material/Zoom\";\n\ninterface IScrollTop {\n  /** The oversized component */\n  children: React.ReactElement;\n  window?: () => Window;\n}\n\nfunction ScrollTop(props: IScrollTop) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n    if (anchor) {\n      anchor.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\",\n      });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <Box onClick={handleClick} role=\"presentation\" sx={{ position: \"fixed\", bottom: 16, right: 16 }}>\n        {children}\n      </Box>\n    </Zoom>\n  );\n}\n\n/**\n * A button that sits on top of a layout and navigates to the top of the screen.\n */\nfunction ScrollToTop(props: IScrollTop) {\n  return (\n    <React.Fragment>\n      <div id=\"back-to-top-anchor\" />\n      {props.children}\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n\nexport default ScrollToTop;\n","import React, { ReactElement, useEffect, useMemo, useState } from \"react\";\n\nimport {\n  Box,\n  Grid,\n  FormControl,\n  Stack,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n  TextField,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Paper,\n  Switch,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport AddRoundedIcon from \"@mui/icons-material/AddRounded\";\n\nimport { LOCAL_STORAGE_KEY } from \"config\";\nimport { components } from \"lib/schema\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useAdviseDocument, getAdviseDocument, AdviseDocumentRequestResponse } from \"api\";\nimport ScrollToTop from \"components/atoms/ScrollToTop\";\nimport { Lockfile } from \"utils/formatLockfile\";\nimport { Variant } from \"@mui/material/styles/createTypography\";\nimport { PipfileRequirements } from \"lib/types/Pipfile\";\n\ninterface IAdviseCompare {\n  analysis_id?: string;\n}\n\nexport const AdviseCompare = ({ analysis_id }: IAdviseCompare) => {\n  const params = useParams();\n  const navigate = useNavigate();\n  const { data: adviseDocument } = useAdviseDocument(analysis_id);\n\n  useEffect(() => {\n    if (params.cmp) {\n      setComparison(params.cmp);\n    }\n  }, [params.cmp]);\n\n  const [comparison, setComparison] = React.useState(adviseDocument?.metadata?.document_id ?? \"\");\n\n  const { data: compareDoc } = useAdviseDocument(comparison);\n\n  const [open, setOpen] = React.useState(false);\n  const [differencesOnly, setDifferencesOnly] = React.useState(false);\n\n  const [importText, setImportText] = React.useState<string | null>(\"\");\n\n  const [optionList, setOptionList] = useState<\n    ({\n      id: string;\n      readable: ReactElement;\n      timestamp: number;\n    } | null)[]\n  >([]);\n\n  useEffect(() => {\n    let active = true;\n    load();\n    return () => {\n      active = false;\n    };\n\n    async function load() {\n      setOptionList([]); // this is optional\n\n      const options = await Promise.all(\n        localHistory.map(item => {\n          // get detail of runs\n          return getAdviseDocument(item)\n            .then(doc => {\n              const env = (doc.data?.result?.parameters as { project: components[\"schemas\"][\"ProjectDef\"] })?.project\n                ?.runtime_environment;\n\n              if (env) {\n                return {\n                  id: item,\n                  timestamp: doc.data?.metadata?.timestamp ?? 0,\n                  readable: (\n                    <Typography>\n                      <i>{new Date(doc.data?.metadata?.datetime).toLocaleString()}</i> : <b>{env?.name ?? \"N/A\"}</b>,{\" \"}\n                      {env?.operating_system?.name}-{env?.operating_system?.version} (Python {env?.python_version})\n                    </Typography>\n                  ),\n                };\n              } else {\n                return null;\n              }\n            })\n            .catch(() => {\n              return null;\n            });\n        }),\n      );\n\n      if (!active) {\n        return;\n      }\n      setOptionList(options);\n    }\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event?: any, reason?: string) => {\n    if (reason !== \"backdropClick\") {\n      setOpen(false);\n    }\n  };\n\n  const handleImport = async () => {\n    if (importText) {\n      await getAdviseDocument(importText)\n        .then(() => {\n          const ids = localStorage.getItem(LOCAL_STORAGE_KEY) ?? \"\";\n\n          const split = ids.split(\",\");\n          if (!split.includes(importText)) {\n            split.push(importText);\n            localStorage.setItem(LOCAL_STORAGE_KEY, split.join(\",\"));\n          }\n\n          setImportText(\"\");\n          setOpen(false);\n          setComparison(importText);\n          navigate(\"../compare/\" + importText);\n        })\n        .catch(() => {\n          setImportText(null);\n        });\n    }\n  };\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setComparison(event.target.value);\n    navigate(\"../compare/\" + event.target.value);\n  };\n\n  const localHistory: string[] = useMemo(() => {\n    const history: string[] = [];\n\n    const ids = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (ids) {\n      history.push(...ids.split(\",\").filter(s => s !== \"\"));\n    }\n\n    return history;\n  }, [importText === \"\"]);\n\n  const COMPARE_COLORS = {\n    old: {\n      text: \"#b31412\",\n      background: \"#fad2cf\",\n    },\n    new: {\n      text: \"#217f70\",\n      background: \"#e3fbf7\",\n    },\n    change: {\n      text: \"#b38012\",\n      background: \"#fae7cf\",\n    },\n    equal: {\n      text: undefined,\n      background: undefined,\n    },\n  };\n\n  const comparePaths = (obj1: any, obj2: any, label?: string, mapping = (obj: typeof obj1) => obj) => {\n    // if not null\n    const obj1_mapped = obj1 ? mapping(obj1) : null;\n    const obj2_mapped = obj2 ? mapping(obj2) : null;\n\n    // compare if equal\n    if (obj1_mapped && obj2_mapped) {\n      if (obj1_mapped === obj2_mapped) {\n        if (!differencesOnly) {\n          return (\n            <React.Fragment key={label}>\n              {renderCompareLine(obj1_mapped as string, \"equal\", label)}\n              {renderCompareLine(obj2_mapped as string, \"equal\", label)}\n            </React.Fragment>\n          );\n        }\n      } else {\n        return (\n          <React.Fragment key={label}>\n            {renderCompareLine(obj1_mapped as string, \"change\", label)}\n            {renderCompareLine(obj2_mapped as string, \"change\", label)}\n          </React.Fragment>\n        );\n      }\n    } else if (obj1_mapped) {\n      return (\n        <React.Fragment key={label}>\n          {renderCompareLine(obj1_mapped as string, \"old\", label)}\n          {renderCompareLine(obj2_mapped as string, \"\", label)}\n        </React.Fragment>\n      );\n    } else if (obj2_mapped) {\n      return (\n        <React.Fragment key={label}>\n          {renderCompareLine(obj1_mapped as string, \"\", label)}\n          {renderCompareLine(obj2_mapped as string, \"new\", label)}\n        </React.Fragment>\n      );\n    } else {\n      return undefined;\n    }\n  };\n\n  const renderCompareLine = (value: string, compareType: \"old\" | \"new\" | \"equal\" | \"change\" | \"\", label?: string) => {\n    const borderStyles = {\n      height: \"100%\",\n      paddingBottom: 0.25,\n      paddingTop: 0.25,\n      borderRadius: 0,\n      borderStyle: \"hidden solid hidden solid\",\n      overflow: \"hidden\",\n    };\n    if (compareType) {\n      return (\n        <Grid item xs={6}>\n          <Paper\n            variant=\"outlined\"\n            sx={{\n              backgroundColor: COMPARE_COLORS[compareType].background,\n              ...borderStyles,\n            }}\n          >\n            <Stack direction=\"row\">\n              {compareType !== \"equal\" ? (\n                <Typography\n                  fontWeight=\"bold\"\n                  sx={{\n                    textAlign: \"center\",\n                    minWidth: \"2rem\",\n                    color: COMPARE_COLORS[compareType].text,\n                  }}\n                  variant=\"body2\"\n                >\n                  {compareType === \"old\" ? \"-\" : compareType === \"new\" ? \"+\" : \"~\"}\n                </Typography>\n              ) : (\n                <Box sx={{ minWidth: \"2rem\" }} />\n              )}\n              {label ? (\n                <Typography\n                  sx={{\n                    marginRight: 1,\n                    color: COMPARE_COLORS[compareType].text,\n                  }}\n                  variant=\"body2\"\n                  fontWeight=\"bold\"\n                >\n                  {label + \":\"}\n                </Typography>\n              ) : undefined}\n              <Typography sx={{ color: COMPARE_COLORS[compareType].text }} display=\"inline\" variant=\"body2\">\n                {value.toString()}\n              </Typography>\n            </Stack>\n          </Paper>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid item xs={6}>\n          <Paper\n            variant=\"outlined\"\n            sx={{\n              backgroundColor: COMPARE_COLORS[\"equal\"].background,\n              ...borderStyles,\n            }}\n          >\n            <Box />\n          </Paper>\n        </Grid>\n      );\n    }\n  };\n\n  const doubleRenderTypography = (\n    variant: Variant,\n    text: string,\n    styleOverrides: { [key: string]: string | number | undefined } = {},\n  ) => {\n    const headerStyles = {\n      paddingLeft: 4,\n      paddingBottom: 1,\n      paddingTop: 4,\n      borderRadius: 0,\n      borderStyle: \"hidden solid hidden solid\",\n      ...styleOverrides,\n    };\n    return (\n      <>\n        <Grid item xs={6}>\n          <Paper\n            variant=\"outlined\"\n            sx={{\n              ...headerStyles,\n            }}\n          >\n            <Typography variant={variant}>{text}</Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper\n            variant=\"outlined\"\n            sx={{\n              ...headerStyles,\n            }}\n          >\n            <Typography variant={variant}>{text}</Typography>\n          </Paper>\n        </Grid>\n      </>\n    );\n  };\n\n  const compareArrays = (array1: any[] = [], array2: any[] = [], mapping = (obj: any) => obj) => {\n    const s1 = array1.map(e => JSON.stringify(e));\n    const s2 = array2.map(e => JSON.stringify(e));\n    const set1 = new Set(s1);\n    const set2 = new Set(s2);\n\n    const merged = [...new Set([...s1, ...s2])];\n\n    return merged.sort().map(key => {\n      const value = JSON.parse(key);\n      return comparePaths(set1.has(key) ? value : undefined, set2.has(key) ? value : undefined, undefined, mapping);\n    });\n  };\n\n  const createProjectCompare = (\n    proj1?: components[\"schemas\"][\"ProjectDef\"],\n    proj2?: components[\"schemas\"][\"ProjectDef\"],\n  ) => {\n    const runtimeEnvironment: (keyof components[\"schemas\"][\"RuntimeEnvironment\"])[] = [\n      \"name\",\n      \"python_version\",\n      \"cuda_version\",\n      \"openblas_version\",\n      \"openmpi_version\",\n      \"cudnn_version\",\n      \"mkl_version\",\n      \"platform\",\n      \"base_image\",\n    ];\n    const dev_packages = [\n      ...new Set([\n        ...Object.keys((proj1?.requirements as PipfileRequirements)?.[\"dev-packages\"] ?? {}),\n        ...Object.keys((proj2?.requirements as PipfileRequirements)?.[\"dev-packages\"] ?? {}),\n      ]),\n    ];\n    const packages = [\n      ...new Set([\n        ...Object.keys((proj1?.requirements as PipfileRequirements)?.packages ?? {}),\n        ...Object.keys((proj2?.requirements as PipfileRequirements)?.packages ?? {}),\n      ]),\n    ];\n    const requirements_locked = [\n      ...new Set([\n        ...Object.keys((proj1?.requirements_locked as Lockfile)?.default ?? {}),\n        ...Object.keys((proj2?.requirements_locked as Lockfile)?.default ?? {}),\n      ]),\n    ];\n\n    return (\n      <React.Fragment>\n        {dev_packages.length > 0\n          ? doubleRenderTypography(\"h6\", \"Pipfile Dev Packages\", {\n              paddingTop: 0.5,\n              paddingBottom: 0.5,\n            })\n          : undefined}\n        {dev_packages.map(key => {\n          return comparePaths(\n            (proj1?.requirements as PipfileRequirements)?.[\"dev-packages\"][key],\n            (proj2?.requirements as PipfileRequirements)?.[\"dev-packages\"][key],\n            key,\n          );\n        })}\n\n        {packages.length > 0\n          ? doubleRenderTypography(\"h6\", \"Pipfile Packages\", {\n              paddingTop: 0.5,\n              paddingBottom: 0.5,\n            })\n          : undefined}\n        {packages.map(key => {\n          return comparePaths(\n            (proj1?.requirements as PipfileRequirements)?.packages[key],\n            (proj2?.requirements as PipfileRequirements)?.packages[key],\n            key,\n          );\n        })}\n\n        {doubleRenderTypography(\"h6\", \"Pipfile.lock Sources\")}\n        {compareArrays(\n          (proj1?.requirements_locked as Lockfile)?._meta?.sources,\n          (proj2?.requirements_locked as Lockfile)?._meta?.sources,\n          obj => {\n            return `${obj.name} (${obj.url})`;\n          },\n        )}\n\n        {doubleRenderTypography(\"h6\", \"Pipfile.lock Packages\")}\n        {requirements_locked.map(key => {\n          return comparePaths(\n            (proj1?.requirements_locked as Lockfile)?.default[key],\n            (proj2?.requirements_locked as Lockfile)?.default[key],\n            key,\n            obj => {\n              return obj?.version;\n            },\n          );\n        })}\n\n        {doubleRenderTypography(\"h6\", \"Runtime Environment\")}\n        {runtimeEnvironment.map(field => {\n          return comparePaths(proj1?.runtime_environment?.[field], proj2?.runtime_environment?.[field], field);\n        })}\n\n        {comparePaths(\n          proj1?.runtime_environment?.operating_system,\n          proj1?.runtime_environment?.operating_system,\n          \"operating_system\",\n          obj => {\n            return obj.name + \" \" + obj.version;\n          },\n        )}\n        {comparePaths(proj1?.runtime_environment?.hardware, proj1?.runtime_environment?.hardware, \"hardware\", obj => {\n          let text = \"\";\n          text += obj.cpu_model ?? \" \";\n          text += obj.cpu_family ?? \" \";\n          text += obj.gpu_model ?? \" \";\n          if (text.trim()) {\n            return text;\n          }\n        })}\n      </React.Fragment>\n    );\n  };\n\n  const createCompare = (doc1: AdviseDocumentRequestResponse, doc2: AdviseDocumentRequestResponse) => {\n    const metadataFields: (keyof AdviseDocumentRequestResponse[\"metadata\"])[] = [\n      \"document_id\",\n      \"analyzer\",\n      \"analyzer_version\",\n      \"datetime\",\n      \"thoth_deployment_name\",\n    ];\n    const argumentFields: string[] = [\n      \"beam_width\",\n      \"constraints\",\n      \"count\",\n      \"dev\",\n      \"labels\",\n      \"library_usage\",\n      \"limit\",\n      \"limit_latest_versions\",\n      \"no_pretty\",\n      \"output\",\n      \"pipeline\",\n      \"plot\",\n      \"predictor\",\n      \"recommendation_type\",\n      \"requirements\",\n      \"requirements_format\",\n      \"requirements_locked\",\n      \"runtime_environment\",\n      \"seed\",\n      \"user_stack_scoring\",\n    ];\n    const distributionFields: (keyof AdviseDocumentRequestResponse[\"metadata\"][\"distribution\"])[] = [\n      \"codename\",\n      \"id\",\n      \"like\",\n      \"version\",\n    ];\n    const osReleaseFields: (keyof AdviseDocumentRequestResponse[\"metadata\"][\"os_release\"])[] = [\n      \"id\",\n      \"name\",\n      \"platform_id\",\n      \"version\",\n    ];\n\n    return (\n      <>\n        {doubleRenderTypography(\"h5\", \"Result\", { paddingTop: 0 })}\n        {comparePaths(\n          doc1?.result?.report?.accepted_final_states_count,\n          doc2?.result?.report?.accepted_final_states_count,\n          \"accepted_final_states_count\",\n        )}\n        {comparePaths(\n          doc1?.result?.report?.discarded_final_states_count,\n          doc2?.result?.report?.discarded_final_states_count,\n          \"discarded_final_states_count\",\n        )}\n        {comparePaths(\n          doc1?.result?.report?.resolver_iterations,\n          doc2?.result?.report?.resolver_iterations,\n          \"resolver_iterations\",\n        )}\n        {comparePaths(doc1?.result?.report?.pipeline, doc2?.result?.report?.pipeline, \"pipeline\")}\n\n        {createProjectCompare(\n          doc1?.result?.report?.products?.[0]?.project,\n          doc2?.result?.report?.products?.[0]?.project,\n        )}\n\n        {doubleRenderTypography(\"h6\", \"Advised Manifest Changes\")}\n        {compareArrays(\n          doc1?.result?.report?.products?.[0]?.advised_manifest_changes ?? [],\n          doc2?.result?.report?.products?.[0]?.advised_manifest_changes ?? [],\n          obj => {\n            let text = \"\";\n            obj.forEach(\n              (change: {\n                patch: {\n                  path: any;\n                  op: any;\n                  value: { name: any; value: any };\n                };\n              }) => {\n                text += `[ ${change?.patch?.path}; ${change?.patch?.op}; ${change?.patch?.value?.name}: ${change?.patch?.value?.value} ]`;\n              },\n            );\n            return text;\n          },\n        )}\n\n        {doubleRenderTypography(\"h6\", \"Stack Info\")}\n        {compareArrays(doc1?.result?.report?.stack_info, doc2?.result?.report?.stack_info, obj => {\n          return obj.message;\n        })}\n\n        {doubleRenderTypography(\"h5\", \"Metadata\")}\n        {metadataFields.map(field => {\n          return comparePaths(doc1?.metadata?.[field], doc2.metadata?.[field], field);\n        })}\n        {comparePaths(doc1?.result?.error_msg, doc2?.result?.error_msg, \"error_msg\")}\n\n        {doubleRenderTypography(\"h6\", \"Arguments\")}\n        {argumentFields.map(field => {\n          return comparePaths(\n            (\n              doc1?.metadata?.arguments?.advise as {\n                [key: string]: any;\n              }\n            )?.[field],\n            (\n              doc2?.metadata?.arguments?.advise as {\n                [key: string]: any;\n              }\n            )?.[field],\n            field,\n          );\n        })}\n\n        {doubleRenderTypography(\"h6\", \"Distribution\")}\n        {distributionFields.map(field => {\n          return comparePaths(doc1?.metadata?.distribution?.[field], doc2?.metadata?.distribution?.[field], field);\n        })}\n\n        {doubleRenderTypography(\"h6\", \"OS Release\")}\n        {osReleaseFields.map(field => {\n          return comparePaths(\n            doc1?.metadata?.os_release?.[field],\n            doc2?.metadata?.os_release?.[field],\n            field as string,\n          );\n        })}\n\n        {doubleRenderTypography(\"h6\", \"Python\")}\n        {comparePaths(doc1?.metadata?.python, doc2?.metadata?.python, \"version\", obj => {\n          return `${obj.major}.${obj.minor}.${obj.micro}`;\n        })}\n        {comparePaths(doc1?.metadata?.python?.api_version, doc2?.metadata?.python?.api_version, \"api_version\")}\n        {comparePaths(\n          doc1?.metadata?.python?.implementation_name,\n          doc2?.metadata?.python?.implementation_name,\n          \"implementation_name\",\n        )}\n        {comparePaths(doc1?.metadata?.python?.releaselevel, doc2?.metadata?.python?.releaselevel, \"release level\")}\n      </>\n    );\n  };\n\n  const compareJSX = useMemo(() => {\n    if (!adviseDocument || !compareDoc) {\n      if (comparison === \"Original Lockfile\") {\n        return (\n          <React.Fragment>\n            {createProjectCompare(\n              adviseDocument?.result?.report?.products?.[0]?.project,\n              (\n                adviseDocument?.result?.parameters as {\n                  project: components[\"schemas\"][\"ProjectDef\"];\n                }\n              )?.project,\n            )}\n            {doubleRenderTypography(\"body1\", \" \", {\n              borderBottomStyle: \"solid\",\n              borderRadius: undefined,\n              borderTopLeftRadius: 0,\n              borderTopRightRadius: 0,\n            })}\n          </React.Fragment>\n        );\n      }\n      return undefined;\n    }\n    return (\n      <>\n        {createCompare(adviseDocument, compareDoc)}\n        {doubleRenderTypography(\"body1\", \" \", {\n          borderBottomStyle: \"solid\",\n          borderRadius: undefined,\n          borderTopLeftRadius: 0,\n          borderTopRightRadius: 0,\n        })}\n      </>\n    );\n  }, [adviseDocument, compareDoc, differencesOnly]);\n\n  if (!adviseDocument) {\n    return (\n      <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" align=\"center\">\n          Compare not available\n        </Typography>\n        <Typography variant=\"body2\" align=\"center\">\n          The adviser has not finished resolving packages\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <ScrollToTop>\n      <Box>\n        <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n          <DialogTitle>Import another Advise document</DialogTitle>\n          <DialogContent>\n            <Box component=\"form\" sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              <TextField\n                error={importText === null}\n                onChange={event => setImportText(event.target.value)}\n                label=\"Document ID\"\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => handleClose()}>Cancel</Button>\n            <Button onClick={() => handleImport()}>Import</Button>\n          </DialogActions>\n        </Dialog>\n        <Grid container mb={1} columnSpacing={10}>\n          <Grid item xs={6}>\n            <Paper\n              variant=\"outlined\"\n              sx={{\n                height: \"100%\",\n                borderTopStyle: \"solid\",\n                borderBottomLeftRadius: 0,\n                borderBottomRightRadius: 0,\n                paddingBottom: 4,\n                paddingTop: 4,\n                borderStyle: \"solid solid hidden solid\",\n              }}\n            >\n              <Typography\n                sx={{\n                  textAlign: \"center\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                  overflow: \"hidden\",\n                }}\n                fontWeight=\"bold\"\n                variant=\"h6\"\n              >\n                Current Advise Document\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper\n              variant=\"outlined\"\n              sx={{\n                height: \"100%\",\n                borderTopStyle: \"solid\",\n                borderBottomLeftRadius: 0,\n                borderBottomRightRadius: 0,\n                paddingBottom: 4,\n                paddingTop: 4,\n                borderStyle: \"solid solid hidden solid\",\n              }}\n            >\n              <Stack direction=\"row\" spacing={1} sx={{ marginX: \"10%\" }}>\n                <FormControl fullWidth>\n                  <Select value={comparison} displayEmpty onChange={handleChange} size=\"small\">\n                    <MenuItem disabled value=\"\">\n                      <em>Select a comparison</em>\n                    </MenuItem>\n\n                    {(adviseDocument?.result?.parameters?.project as components[\"schemas\"][\"ProjectDef\"])\n                      ?.requirements_locked && <MenuItem value=\"Original Lockfile\">Original Lockfile</MenuItem>}\n\n                    {optionList\n                      .sort((a, b) => (b ? b.timestamp : 0) - (a ? a.timestamp : 0))\n                      .map(option => {\n                        if (option) {\n                          return (\n                            <MenuItem key={option.id} value={option.id}>\n                              {option.readable}\n                            </MenuItem>\n                          );\n                        }\n                      })}\n                  </Select>\n                </FormControl>\n                <IconButton onClick={handleClickOpen}>\n                  <AddRoundedIcon />\n                </IconButton>\n              </Stack>\n              <FormControlLabel\n                sx={{ marginX: \"10%\", marginTop: 0.5 }}\n                control={\n                  <Switch\n                    defaultChecked\n                    checked={differencesOnly}\n                    onChange={event => setDifferencesOnly(event.target.checked)}\n                  />\n                }\n                label=\"Differences only\"\n              />\n            </Paper>\n          </Grid>\n          {compareJSX}\n        </Grid>\n      </Box>\n    </ScrollToTop>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Chip } from \"@mui/material\";\nimport ScrollToTop from \"components/atoms/ScrollToTop\";\nimport { useAdviseLogs } from \"api\";\n\nexport const AdviseLogs = ({ analysis_id }: { analysis_id: string }) => {\n  const { log } = useAdviseLogs(analysis_id);\n\n  const rows = useMemo(() => {\n    return log\n      ?.split(\"\\n\")\n      .slice(0, 20)\n      .map(line => {\n        let log;\n        try {\n          log = JSON.parse(line);\n        } catch (e) {\n          return {};\n        }\n\n        if (log) {\n          return {\n            name: log.name,\n            levelname: log.levelname,\n            module: log.module,\n            lineno: log.lineno,\n            funcname: log.funcname,\n            created: log.created,\n            asctime: log.asctime,\n            msecs: log.msecs,\n            relative_created: log.relative_created,\n            process: log.process,\n            message: log.message,\n          };\n        } else {\n          return {};\n        }\n      });\n  }, [log]);\n\n  return (\n    <ScrollToTop>\n      <TableContainer component={Paper} variant=\"outlined\">\n        <Table size=\"small\" aria-label=\"a dense table\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              <TableCell>Level</TableCell>\n              <TableCell align=\"left\">Name</TableCell>\n              <TableCell align=\"left\">Function</TableCell>\n              <TableCell align=\"right\">Line Number</TableCell>\n              <TableCell align=\"right\">Process</TableCell>\n              <TableCell align=\"left\">Message</TableCell>\n              <TableCell align=\"right\">Time</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows?.map(row => (\n              <TableRow\n                key={row.created}\n                sx={{\n                  \"&:last-child td, &:last-child th\": {\n                    border: 0,\n                  },\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.levelname ? (\n                    <Chip color={row?.levelname?.toLowerCase() ?? \"default\"} label={row.levelname} />\n                  ) : undefined}\n                </TableCell>\n                <TableCell align=\"left\">{row.name}</TableCell>\n                <TableCell align=\"left\">{row.funcname}</TableCell>\n                <TableCell align=\"right\">{row.lineno}</TableCell>\n                <TableCell align=\"right\">{row.process}</TableCell>\n                <TableCell align=\"left\">{row.message}</TableCell>\n                <TableCell align=\"right\">{row.asctime}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </ScrollToTop>\n  );\n};\n","import React from \"react\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@mui/material\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\n\ninterface IDynamicCard {\n  url?: string;\n  title: string;\n  avatar?: React.ReactNode;\n  subheader?: string;\n  children: React.ReactNode;\n}\n\nconst DynamicCard = ({ url, title, avatar, subheader, children }: IDynamicCard) => {\n  const theme = useTheme();\n  const compact = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  return (\n    <React.Fragment key={url}>\n      {compact ? (\n        <Card variant=\"outlined\">\n          <CardHeader\n            title={title}\n            titleTypographyProps={{\n              variant: \"h6\",\n            }}\n            action={\n              url ? (\n                <IconButton href={url ?? \"\"} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <OpenInNewRoundedIcon />\n                </IconButton>\n              ) : undefined\n            }\n            avatar={avatar}\n          />\n        </Card>\n      ) : (\n        <Card variant=\"outlined\">\n          <CardHeader\n            title={title}\n            subheader={subheader}\n            action={\n              url ? (\n                <IconButton href={url ?? \"\"} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <OpenInNewRoundedIcon />\n                </IconButton>\n              ) : undefined\n            }\n          />\n          <CardContent>{children}</CardContent>\n        </Card>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default DynamicCard;\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemButtonProps,\n  ListItemIcon,\n  ListItemProps,\n  ListItemText,\n  ListItemTextProps,\n} from \"@mui/material\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\nexport type GridListItemType = {\n  title: React.ReactNode;\n  subtitle?: string;\n  icon?: React.ReactNode;\n  action?: React.ReactNode;\n  expandedContent?: React.ReactNode;\n};\ninterface IGridList {\n  items: GridListItemType[];\n  isButton?: boolean;\n  primaryTypographyProps?: ListItemTextProps[\"primaryTypographyProps\"];\n  secondaryTypographyProps?: ListItemTextProps[\"secondaryTypographyProps\"];\n}\nconst GridList = ({ items, primaryTypographyProps, secondaryTypographyProps, isButton = false }: IGridList) => {\n  const [selected, setSelected] = useState<number | undefined>();\n\n  function ListItemCustom({ children, ...props }: ListItemButtonProps & ListItemProps & { children: React.ReactNode }) {\n    if (isButton) {\n      return <ListItemButton {...props}>{children}</ListItemButton>;\n    } else {\n      return (\n        <ListItem disableGutters {...props}>\n          {children}\n        </ListItem>\n      );\n    }\n  }\n\n  return (\n    <List dense>\n      {items.map((row, i) => {\n        return (\n          <React.Fragment key={i}>\n            <ListItemCustom\n              selected={isButton && selected === i}\n              secondaryAction={\n                row.action ??\n                (row.expandedContent ? (\n                  <KeyboardArrowDown\n                    sx={{\n                      mr: -1,\n                      transform: selected === i ? \"rotate(0deg)\" : \"rotate(-90deg)\",\n                      transition: \"0.2s\",\n                    }}\n                  />\n                ) : undefined)\n              }\n              key={i}\n              sx={{ borderRadius: \"16px\" }}\n              onClick={() => setSelected(selected === i ? undefined : i)}\n            >\n              {row.icon && <ListItemIcon>{row.icon}</ListItemIcon>}\n              <ListItemText\n                primaryTypographyProps={primaryTypographyProps}\n                secondaryTypographyProps={secondaryTypographyProps}\n                primary={row.title}\n                secondary={row.subtitle}\n              />\n            </ListItemCustom>\n            {row.expandedContent && <Collapse in={selected === i}>{row.expandedContent}</Collapse>}\n          </React.Fragment>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default GridList;\n","import React, { useMemo } from \"react\";\nimport { Chip } from \"@mui/material\";\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport DynamicCard from \"components/molecules/DynamicCard\";\nimport { useAdviseDocument } from \"api\";\nimport GridList from \"components/molecules/GridList\";\n\nconst StackInfoEnvMetric = ({ analysis_id }: { analysis_id?: string }) => {\n  const { stack_info } = useAdviseDocument(analysis_id);\n\n  const [metric, provided] = useMemo(() => {\n    if (stack_info) {\n      let p = 0;\n      const m = stack_info\n        .filter(info => info.link === \"https://thoth-station.ninja/j/env\")\n        .map(info => {\n          p += info.message.startsWith(\"No\") ? 0 : 1;\n\n          return {\n            icon: info.message.startsWith(\"No\") ? (\n              <CloseRoundedIcon color=\"error\" />\n            ) : (\n              <DoneRoundedIcon color=\"success\" />\n            ),\n            title: info.message,\n          };\n        });\n\n      return [m, p];\n    }\n\n    return [[], 0];\n  }, [stack_info]);\n\n  return (\n    <DynamicCard\n      title=\"Environment Parameters\"\n      subheader={`The advisor input was provided with ${provided} environment parameters`}\n      avatar={<Chip icon={<InfoOutlinedIcon />} label={provided} color=\"info\" />}\n      url={\"https://thoth-station.ninja/j/env\"}\n    >\n      <GridList items={metric} />\n    </DynamicCard>\n  );\n};\n\nexport default StackInfoEnvMetric;\n","import React, { useMemo } from \"react\";\nimport { Chip, ListItem, ListItemText } from \"@mui/material\";\n\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\nimport { useAdviseDocument } from \"api\";\nimport DynamicCard from \"components/molecules/DynamicCard\";\nimport GridList from \"components/molecules/GridList\";\n\nexport const StackInfoInstallErrorMetric = ({ analysis_id }: { analysis_id?: string }) => {\n  const { stack_info } = useAdviseDocument(analysis_id);\n\n  const metric = useMemo(() => {\n    if (stack_info) {\n      return stack_info\n        .filter(info => info.link === \"https://thoth-station.ninja/j/install_error\")\n        .map(pkg => {\n          const name_index = pkg.message.match(/(?<=').*?(?=')/g);\n          const versions = pkg.message.match(/(?<=environment: ).*/);\n          return {\n            title: name_index?.[0] ?? \"_unknown\",\n            subtitle: name_index?.[2],\n            expandedContent: (\n              <ListItem>\n                <ListItemText inset secondary={versions?.[0]} />\n              </ListItem>\n            ),\n            icon: <Chip label={versions?.[0].split(\", \").length} color=\"error\" />,\n          };\n        })\n        .filter(v => v.title !== \"_unknown\");\n    } else return [];\n  }, []);\n\n  return (\n    <DynamicCard\n      title=\"Installation Errors\"\n      subheader=\"The given package & version combinations were removed from the resolution process as they produced errors during installation in the given environment\"\n      avatar={<Chip icon={<ErrorOutlineOutlinedIcon />} label={metric.length} color=\"error\" />}\n      url=\"https://thoth-station.ninja/j/install_error\"\n    >\n      <GridList isButton items={metric} />\n    </DynamicCard>\n  );\n};\n\nexport default StackInfoInstallErrorMetric;\n","import React, { useMemo } from \"react\";\nimport { Box, Chip, IconButton, Stack, Typography } from \"@mui/material\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\n\nimport { components } from \"lib/schema\";\nimport DynamicCard from \"components/molecules/DynamicCard\";\nimport GridList from \"components/molecules/GridList\";\nimport { useAdviseDocument } from \"api\";\n\nconst StackInfoMetric = ({\n  analysis_id,\n  ignoreLinks = [\n    \"https://thoth-station.ninja/j/install_error\",\n    \"https://thoth-station.ninja/j/env\",\n    \"https://thoth-station.ninja/j/rules\",\n  ],\n}: {\n  analysis_id: string;\n  ignoreLinks?: string[];\n}) => {\n  const { stack_info } = useAdviseDocument(analysis_id);\n\n  const [recommendedItems, otherItems, typeTotals] = useMemo(() => {\n    if (stack_info) {\n      const types = new Set<string>();\n      stack_info.forEach(i => types.add(i.link));\n\n      const metrics = new Map<string, components[\"schemas\"][\"StackInfo\"]>();\n      stack_info\n        .filter(info => !ignoreLinks.includes(info.link) && types.has(info.link))\n        .forEach(info => {\n          metrics.set(info.link, (metrics.get(info.link) ?? []).concat(info));\n        });\n\n      const formatData = ([, value]: [string, components[\"schemas\"][\"StackInfo\"]]) => {\n        return {\n          title: value.map((v: { message: string }) => (\n            <Typography key={v.message} variant=\"body2\">\n              {v.message}\n            </Typography>\n          )),\n          icon: (\n            <Box display=\"flex\" alignContent=\"center\">\n              {value[0].type === \"ERROR\" ? (\n                <ErrorOutlineOutlinedIcon color=\"error\" />\n              ) : value[0].type === \"WARNING\" ? (\n                <WarningAmberOutlinedIcon color=\"warning\" />\n              ) : (\n                <InfoOutlinedIcon color=\"info\" />\n              )}\n            </Box>\n          ),\n          action: (\n            <IconButton href={value[0].link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <OpenInNewRoundedIcon />\n            </IconButton>\n          ),\n        };\n      };\n\n      const recommended = Array.from(metrics.entries())\n        .filter(([, value]) =>\n          value.some((v: { message: string }) => v.message.includes(\"use\") || v.message.includes(\"Use\")),\n        )\n        .map(formatData);\n\n      const other = Array.from(metrics.entries())\n        .filter(([, value]) =>\n          value.some((v: { message: string }) => !v.message.includes(\"use\") || v.message.includes(\"Use\")),\n        )\n        .map(formatData);\n\n      return [\n        recommended,\n        other,\n        {\n          info: Array.from(metrics.values()).reduce((p, c) => p + (c[0].type === \"INFO\" ? 1 : 0), 0),\n          warning: Array.from(metrics.values()).reduce((p, c) => p + (c[0].type === \"WARNING\" ? 1 : 0), 0),\n          error: Array.from(metrics.values()).reduce((p, c) => p + (c[0].type === \"ERROR\" ? 1 : 0), 0),\n        },\n      ];\n    }\n\n    return [null, null, null];\n  }, [stack_info]);\n\n  return (\n    <DynamicCard\n      title=\"Other Stack Info\"\n      avatar={\n        <Stack direction=\"row\" spacing={1}>\n          {typeTotals?.info ? <Chip icon={<InfoOutlinedIcon />} label={typeTotals.info} color=\"info\" /> : undefined}\n          {typeTotals?.warning ? (\n            <Chip icon={<WarningAmberOutlinedIcon />} label={typeTotals.warning} color=\"warning\" />\n          ) : undefined}\n          {typeTotals?.error ? (\n            <Chip icon={<ErrorOutlineOutlinedIcon />} label={typeTotals.error} color=\"error\" />\n          ) : undefined}\n        </Stack>\n      }\n    >\n      <Typography variant=\"body1\" fontWeight=\"bolder\">\n        Recommended Actions\n      </Typography>\n      <GridList items={recommendedItems ?? []} />\n      <Typography variant=\"body1\" fontWeight=\"bolder\">\n        Other Information\n      </Typography>\n      <GridList items={otherItems ?? []} />\n    </DynamicCard>\n  );\n};\n\nexport default StackInfoMetric;\n","import React, { useMemo } from \"react\";\nimport { Chip, Divider, Grid, Typography } from \"@mui/material\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\nimport DynamicCard from \"components/molecules/DynamicCard\";\nimport GridList from \"components/molecules/GridList\";\nimport { useAdviseDocument } from \"api\";\n\nconst StackInfoRulesMetric = ({ analysis_id }: { analysis_id: string }) => {\n  const { stack_info } = useAdviseDocument(analysis_id);\n\n  const metric = useMemo(() => {\n    if (stack_info) {\n      const rules = new Map<string, { package: string; constraint: string; index: string }[]>();\n      stack_info\n        .filter(info => info.link === \"https://thoth-station.ninja/j/rules\")\n        .forEach(pkg => {\n          const name_constraint_index_pattern = /(?<=').*?(?=')/g;\n          const rule_pattern = /(?<=rule: ).*/;\n          const name_constraint_index = pkg.message.match(name_constraint_index_pattern);\n          const rule = pkg.message.match(rule_pattern);\n          if (name_constraint_index && rule) {\n            rules.set(\n              rule[0],\n              (rules.get(rule[0]) ?? []).concat({\n                package: name_constraint_index?.[0],\n                constraint: name_constraint_index?.[2],\n                index: name_constraint_index?.[4],\n              }),\n            );\n          }\n        });\n\n      return Array.from(rules.entries()).map(([rule, value]) => {\n        return {\n          title: rule,\n          expandedContent: (\n            <Grid\n              container\n              sx={{\n                marginLeft: 1,\n                paddingRight: 1,\n              }}\n            >\n              <Grid item xs={5}>\n                <Typography variant=\"body2\">Package</Typography>\n              </Grid>\n              <Grid item xs={2} textAlign=\"center\">\n                <Typography variant=\"body2\">Constraint</Typography>\n              </Grid>\n              <Grid item xs={5} textAlign=\"right\">\n                <Typography variant=\"body2\">Index</Typography>\n              </Grid>\n              <Grid item xs={12} sx={{ marginBottom: 1 }}>\n                <Divider flexItem />\n              </Grid>\n              {value.map(pkg => {\n                return (\n                  <React.Fragment key={pkg.package + pkg.index}>\n                    <Grid item xs={5}>\n                      {pkg.package}\n                    </Grid>\n                    <Grid item xs={2} textAlign=\"center\">\n                      {pkg.constraint}\n                    </Grid>\n                    <Grid item xs={5} textAlign=\"right\">\n                      {pkg.index}\n                    </Grid>\n                  </React.Fragment>\n                );\n              })}\n            </Grid>\n          ),\n        };\n      });\n    } else return [];\n  }, []);\n\n  return (\n    <DynamicCard\n      title=\"Solver Rules\"\n      subheader=\"One or multiple packages were removed based on Python solver rules configured\"\n      avatar={<Chip icon={<ErrorOutlineOutlinedIcon />} label={metric.length} color=\"error\" />}\n      url=\"https://thoth-station.ninja/j/install_error\"\n    >\n      <GridList primaryTypographyProps={{ variant: \"button\", fontWeight: \"bold\" }} isButton items={metric} />\n    </DynamicCard>\n  );\n};\n\nexport default StackInfoRulesMetric;\n","import React, { useContext } from \"react\";\n\nimport { Box, Typography } from \"@mui/material\";\nimport { Masonry } from \"@mui/lab\";\n\nimport StackInfoEnvMetric from \"components/organisms/metrics/StackInfoMetrics/StackInfoEnvMetric\";\nimport StackInfoInstallErrorMetric from \"components/organisms/metrics/StackInfoMetrics/StackInfoInstallErrorMetric\";\nimport StackInfoMetric from \"components/organisms/metrics/StackInfoMetrics/StackInfoMetric\";\nimport StackInfoRulesMetric from \"components/organisms/metrics/StackInfoMetrics/StackInfoRulesMetric\";\n\nimport { StateContext } from \"stores/Global\";\n\nexport const AdviseStackInfo = ({ analysis_id }: { analysis_id: string }) => {\n  const { loading } = useContext(StateContext);\n\n  if (loading[\"graph\"]) {\n    return (\n      <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" align=\"center\">\n          Stack info not available\n        </Typography>\n        <Typography variant=\"body2\" align=\"center\">\n          The adviser has not finished resolving packages\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Masonry columns={{ sm: 1, lg: 2, xl: 4 }}>\n      <StackInfoEnvMetric analysis_id={analysis_id} />\n      <StackInfoInstallErrorMetric analysis_id={analysis_id} />\n      <StackInfoRulesMetric analysis_id={analysis_id} />\n      <StackInfoMetric analysis_id={analysis_id} />\n    </Masonry>\n  );\n};\n","import React, { useMemo, useState } from \"react\";\nimport { components } from \"lib/schema\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Stack,\n  Button,\n  Typography,\n  IconButton,\n  TextField,\n  Alert,\n} from \"@mui/material\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\nimport EditRoundedIcon from \"@mui/icons-material/EditRounded\";\nimport ChangeHistoryRoundedIcon from \"@mui/icons-material/ChangeHistoryRounded\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport yaml from \"js-yaml\";\nimport { useAdviseDocument } from \"api\";\nimport { postAdvise } from \"features/home/api\";\n\ntype ListData = {\n  label: string;\n  key: string;\n  value?: string | number | null;\n  original?: string | number | null;\n  group?: {\n    label: string;\n    original?: string | number | null;\n    value?: string | number | null;\n    key: string;\n  }[];\n  detail: string;\n};\n\nexport const EditableLabel = ({\n  itemKey,\n  itemSubKey,\n  value,\n  handleSubmit,\n  label,\n  editMode,\n}: {\n  itemKey: string;\n  itemSubKey?: string;\n  value: any;\n  handleSubmit: (key: string, value: any, subKey?: string) => void;\n  label?: string;\n  editMode: boolean;\n}) => {\n  return (\n    <>\n      {editMode ? (\n        <TextField\n          value={value}\n          label={label}\n          onChange={event => handleSubmit(itemKey, event.target.value, itemSubKey)}\n          size=\"small\"\n          variant=\"outlined\"\n        />\n      ) : (\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n          {itemSubKey ? (\n            <Typography\n              sx={{ marginRight: 1 }}\n              variant=\"body1\"\n              fontStyle={!value ? \"italic\" : undefined}\n              fontWeight={value ? \"bold\" : undefined}\n            >\n              {label}\n            </Typography>\n          ) : undefined}\n          <Typography variant=\"body1\" fontWeight={!itemSubKey ? \"bold\" : undefined}>\n            {value}\n          </Typography>\n        </Stack>\n      )}\n    </>\n  );\n};\n\nexport const AdviseEnvironmentInfo = ({ analysis_id }: { analysis_id: string }) => {\n  const { project } = useAdviseDocument(analysis_id);\n\n  const [currentRuntimeEnvironment, setCurrentRuntimeEnvironment] = useState(project?.runtime_environment);\n  const [errorMessage, setErrorMessage] = useState();\n  const [loading, setLoading] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const navigate = useNavigate();\n\n  if (!project?.runtime_environment) {\n    return (\n      <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" align=\"center\">\n          Environment data not available\n        </Typography>\n        <Typography variant=\"body2\" align=\"center\">\n          The advise document did not contain information regarding the runtime environment\n        </Typography>\n      </Box>\n    );\n  }\n\n  const handleSubmit = (key: any, value: any, subKey?: any) => {\n    setErrorMessage(undefined);\n    if (currentRuntimeEnvironment) {\n      if (subKey) {\n        setCurrentRuntimeEnvironment({\n          ...currentRuntimeEnvironment,\n          [key]: {\n            ...(currentRuntimeEnvironment[key as keyof typeof currentRuntimeEnvironment] as { [key: string]: any }),\n            [subKey]: value === \"\" ? null : value,\n          },\n        });\n      } else {\n        setCurrentRuntimeEnvironment({\n          ...currentRuntimeEnvironment,\n          [key]: value === \"\" ? null : value,\n        });\n      }\n    }\n  };\n\n  const data: ListData[] = useMemo(() => {\n    return [\n      {\n        label: \"Name\",\n        key: \"name\",\n        original: project?.runtime_environment?.name,\n        value: currentRuntimeEnvironment?.name,\n        detail: \"User defined name of the runtime environment\",\n      },\n      {\n        label: \"CUDA Version\",\n        original: project?.runtime_environment?.cuda_version,\n        value: currentRuntimeEnvironment?.cuda_version,\n        key: \"cuda_version\",\n        detail: \"Nvidia CUDA version which the application uses\",\n      },\n      {\n        label: \"cuDNN Version\",\n        original: project?.runtime_environment?.cudnn_version,\n        value: currentRuntimeEnvironment?.cudnn_version,\n        key: \"cudnn_version\",\n        detail: \"NVIDIA cuDNN version used, if any\",\n      },\n      {\n        label: \"Hardware\",\n        key: \"hardware\",\n        group: [\n          {\n            label: \"CPU Family\",\n            original: project?.runtime_environment?.hardware?.cpu_family,\n            value: currentRuntimeEnvironment?.hardware?.cpu_family,\n            key: \"cpu_family\",\n          },\n          {\n            label: \"CPU Model\",\n            original: project?.runtime_environment?.hardware?.cpu_model,\n            value: currentRuntimeEnvironment?.hardware?.cpu_model,\n            key: \"cpu_model\",\n          },\n          {\n            label: \"GPU Model\",\n            original: project?.runtime_environment?.hardware?.gpu_model,\n            value: currentRuntimeEnvironment?.hardware?.gpu_model,\n            key: \"gpu_model\",\n          },\n        ],\n        detail: \"Hardware configuration used\",\n      },\n      {\n        label: \"Math Kernel Library\",\n        original: project?.runtime_environment?.mkl_version,\n        value: currentRuntimeEnvironment?.mkl_version,\n        key: \"mkl_version\",\n        detail: \"Intel® Math Kernel Library version used, if any\",\n      },\n      {\n        label: \"Base Image\",\n        original: project?.runtime_environment?.base_image,\n        value: currentRuntimeEnvironment?.base_image,\n        key: \"base_image\",\n        detail: \"A base container image used to run the application\",\n      },\n      {\n        label: \"Open BLAS Version\",\n        original: project?.runtime_environment?.openblas_version,\n        value: currentRuntimeEnvironment?.openblas_version,\n        key: \"openblas_version\",\n        detail: \"Open BLAS version used, if any\",\n      },\n      {\n        label: \"Open MPI Version\",\n        original: project?.runtime_environment?.openmpi_version,\n        value: currentRuntimeEnvironment?.openmpi_version,\n        key: \"openmpi_version\",\n        detail: \"Open MPI version used, if any\",\n      },\n      {\n        label: \"Operating System\",\n        key: \"operating_system\",\n        group: [\n          {\n            label: \"OS Name\",\n            original: project?.runtime_environment?.operating_system?.name,\n            value: currentRuntimeEnvironment?.operating_system?.name,\n            key: \"name\",\n          },\n          {\n            label: \"OS Version\",\n            original: project?.runtime_environment?.operating_system?.version,\n            value: currentRuntimeEnvironment?.operating_system?.version,\n            key: \"version\",\n          },\n        ],\n        detail: \"Operating system used\",\n      },\n      {\n        label: \"Platform\",\n        original: project?.runtime_environment?.platform,\n        value: currentRuntimeEnvironment?.platform,\n        key: \"platform\",\n        detail: \"Platform used - corresponds to sysconfig.get_platform() call\",\n      },\n      {\n        label: \"Python Version\",\n        original: project?.runtime_environment?.python_version,\n        value: currentRuntimeEnvironment?.python_version,\n        key: \"python_version\",\n        detail: \"Python version on which the application runs on\",\n      },\n    ];\n  }, [project?.runtime_environment, currentRuntimeEnvironment]);\n\n  const formatted_json = useMemo(() => {\n    const format: { [key: string]: any } = {};\n\n    Object.entries(currentRuntimeEnvironment ?? {}).forEach(([key, value]) => {\n      if (value) {\n        if (typeof value === \"object\") {\n          const formatObj: { [key: string]: any } = {};\n\n          if (currentRuntimeEnvironment) {\n            Object.entries(value).forEach(([subKey, subValue]) => {\n              if (subValue) {\n                formatObj[subKey] = subValue;\n              }\n            });\n          }\n\n          if (Object.keys(formatObj).length > 0) {\n            format[key] = formatObj;\n          }\n        } else {\n          format[key] = value;\n        }\n      }\n    });\n\n    return yaml.dump(format).toString();\n  }, [currentRuntimeEnvironment]);\n\n  const handleNewAdvise = () => {\n    setErrorMessage(undefined);\n    setLoading(true);\n    postAdvise(\n      JSON.stringify(project.requirements),\n      JSON.stringify(project.requirements_locked),\n      currentRuntimeEnvironment as components[\"schemas\"][\"RuntimeEnvironment\"],\n    )\n      .then(response => {\n        setLoading(false);\n        navigate(\"/advise/\" + response.data.analysis_id + \"/summary\");\n      })\n      .catch(error => {\n        setLoading(false);\n        setErrorMessage(error?.response?.data?.error ?? \"An error occurred.\");\n      });\n  };\n\n  const getIcon = (item: ListData) => {\n    let mode: string;\n    if (item.group) {\n      if (item.group.some(subItem => subItem.original !== subItem.value)) {\n        mode = \"warning\";\n      } else if (item.group.every(subItem => !subItem.original)) {\n        mode = \"error\";\n      } else {\n        mode = \"success\";\n      }\n    } else {\n      if (item.original !== item.value) {\n        mode = \"warning\";\n      } else if (!item.original) {\n        mode = \"error\";\n      } else {\n        mode = \"success\";\n      }\n    }\n\n    switch (mode) {\n      case \"warning\":\n        return <ChangeHistoryRoundedIcon color=\"warning\" />;\n      case \"error\":\n        return <CloseRoundedIcon color=\"error\" />;\n      case \"success\":\n        return <DoneRoundedIcon color=\"success\" />;\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\">Project Runtime Environment</Typography>\n      <Typography variant=\"body1\">\n        Thoth performs recommendations based on your hardware and software environment.\n      </Typography>\n\n      <Grid container alignItems=\"center\" sx={{ marginLeft: 2, marginTop: 1, marginBottom: 2 }}>\n        <Grid item>\n          <DoneRoundedIcon color=\"success\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>Value provided</i>\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} />\n\n        <Grid item>\n          <CloseRoundedIcon color=\"error\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>Value not provided</i>\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} />\n\n        <Grid item>\n          {\" \"}\n          <ChangeHistoryRoundedIcon color=\"warning\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>Value edited</i>\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Divider />\n\n      {data.some(item => {\n        if (item.group) {\n          return item.group.some(subItem => subItem.original !== subItem.value);\n        } else {\n          return item.original !== item.value;\n        }\n      }) ? (\n        <Alert\n          action={\n            <Stack direction=\"row\" spacing={1}>\n              <Button\n                disabled={loading}\n                size=\"small\"\n                variant=\"outlined\"\n                onClick={() => {\n                  setCurrentRuntimeEnvironment(project?.runtime_environment);\n                  setErrorMessage(undefined);\n                }}\n              >\n                RESET PARAMETERS\n              </Button>\n              <LoadingButton loading={loading} size=\"small\" variant=\"contained\" onClick={() => handleNewAdvise()}>\n                NEW ADVISE\n              </LoadingButton>\n            </Stack>\n          }\n          sx={{ marginTop: 2 }}\n          variant=\"outlined\"\n          severity=\"warning\"\n        >\n          The environment parameters are edited and are not equal to the parameters set in the adviser report. You can\n          use the new environment parameters to run a new adviser report, or you can reset them back to the original\n          values.\n        </Alert>\n      ) : undefined}\n\n      {errorMessage ? (\n        <Alert sx={{ marginTop: 2 }} variant=\"outlined\" severity=\"error\">\n          {errorMessage}\n        </Alert>\n      ) : undefined}\n\n      <Grid container spacing={4}>\n        <Grid item xs={8}>\n          <List dense>\n            <ListItem>\n              <ListItemAvatar />\n              <ListItemText>\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  Environment Parameters\n                </Typography>\n              </ListItemText>\n              <Typography variant=\"body1\" fontWeight=\"bold\">\n                Value\n              </Typography>\n              {editMode ? (\n                <IconButton sx={{ marginLeft: 1 }} onClick={() => setEditMode(false)}>\n                  <DoneRoundedIcon fontSize=\"small\" />\n                </IconButton>\n              ) : (\n                <IconButton sx={{ marginLeft: 1 }} onClick={() => setEditMode(true)}>\n                  <EditRoundedIcon fontSize=\"small\" />\n                </IconButton>\n              )}\n            </ListItem>\n            {data.map((item, i) => {\n              return (\n                <React.Fragment key={item.key + i}>\n                  <ListItem>\n                    <ListItemAvatar>{getIcon(item)}</ListItemAvatar>\n                    <ListItemText primary={item.label} secondary={item.detail} />\n                    {item.group ? (\n                      <Stack spacing={1}>\n                        {item.group.map(subItem => {\n                          return (\n                            <EditableLabel\n                              key={item.key + subItem.key}\n                              itemKey={item.key}\n                              itemSubKey={subItem.key}\n                              label={subItem.label}\n                              value={\n                                (\n                                  currentRuntimeEnvironment?.[item.key as keyof typeof currentRuntimeEnvironment] as {\n                                    [key: string]: any;\n                                  }\n                                )?.[subItem.key] ?? \"\"\n                              }\n                              handleSubmit={handleSubmit}\n                              editMode={editMode}\n                            />\n                          );\n                        })}\n                      </Stack>\n                    ) : (\n                      <EditableLabel\n                        label={item.label}\n                        itemKey={item.key}\n                        value={currentRuntimeEnvironment?.[item.key as keyof typeof currentRuntimeEnvironment] ?? \"\"}\n                        handleSubmit={handleSubmit}\n                        editMode={editMode}\n                      />\n                    )}\n                  </ListItem>\n                  <Divider variant=\"inset\" />\n                </React.Fragment>\n              );\n            })}\n          </List>\n        </Grid>\n        <Grid item xs={4}>\n          <Card sx={{ marginTop: 2 }} variant=\"outlined\">\n            <CardHeader\n              title={currentRuntimeEnvironment?.name}\n              action={\n                <Button size=\"small\" variant=\"outlined\" onClick={() => navigator.clipboard.writeText(formatted_json)}>\n                  COPY\n                </Button>\n              }\n            />\n            <CardContent>\n              <pre>{formatted_json}</pre>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\nimport CheckRoundedIcon from \"@mui/icons-material/CheckRounded\";\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport { useLicenseMetric } from \"hooks\";\nimport Loading from \"components/atoms/Loading\";\n\nexport const AdviseLicenses = ({ analysis_id }: { analysis_id: string }) => {\n  const { data: metric, isError, isLoading, loadingText } = useLicenseMetric(analysis_id);\n\n  const [selected, setSelected] = useState<string | undefined>();\n\n  if (!metric || isLoading || isError) {\n    return (\n      <Loading\n        loadingLabel={loadingText}\n        errorTitle=\"License data not available.\"\n        errorSubtitle=\"The advise run encountered an error.\"\n      />\n    );\n  }\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Package Licenses</Typography>\n        <Typography variant=\"body1\">\n          The Open Source Initiative (OSI) approves open source licenses that allow software to be freely used,\n          modified, and shared.\n        </Typography>\n      </Grid>\n      <Grid container item xs={12} alignItems=\"center\" sx={{ marginLeft: 2, marginTop: 2, marginBottom: 2 }}>\n        <Grid item>\n          <DoneRoundedIcon color=\"success\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>OSI Approved</i>\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} />\n\n        <Grid item>\n          <CloseRoundedIcon color=\"error\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>Not OSI Approved</i>\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} />\n\n        <Grid item>\n          <WarningAmberOutlinedIcon color=\"warning\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>Unknown Approval</i>\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Divider />\n      </Grid>\n      <Grid item xs={6}>\n        <List>\n          <ListItem>\n            <ListItemAvatar>\n              <Typography fontWeight=\"bold\" variant=\"body1\">\n                OSI\n              </Typography>\n            </ListItemAvatar>\n            <ListItemText>\n              <Typography fontWeight=\"bold\" variant=\"body1\">\n                License\n              </Typography>\n            </ListItemText>\n            <Typography fontWeight=\"bold\" variant=\"body1\">\n              Count\n            </Typography>\n          </ListItem>\n          {Object.entries(metric).map(([name, data]) => {\n            return (\n              <ListItem key={name} selected={selected === name} disablePadding sx={{ borderRadius: 100 }}>\n                <ListItemButton onClick={() => setSelected(name)} sx={{ borderRadius: 100 }}>\n                  <ListItemAvatar>\n                    {data.metadata?.isOsiApproved === null ? (\n                      <WarningAmberOutlinedIcon color=\"warning\" />\n                    ) : data.metadata?.isOsiApproved ? (\n                      <CheckRoundedIcon color=\"success\" />\n                    ) : (\n                      <CloseRoundedIcon color=\"error\" />\n                    )}\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <Typography variant=\"body1\">{name}</Typography>\n                  </ListItemText>\n                  <Chip label={Object.keys(data.packages).length} />\n                </ListItemButton>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Grid>\n      <Grid item xs={6}>\n        {selected ? (\n          <Card sx={{ marginTop: 2 }} variant=\"outlined\">\n            <CardHeader title={selected} subheader={`Packages that use the ${selected}`} />\n            <CardContent>\n              <Grid container>\n                <Grid item xs={6}>\n                  <Typography variant=\"body1\" fontWeight=\"bold\">\n                    Package\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"body1\" fontWeight=\"bold\">\n                    PyPI License\n                  </Typography>\n                </Grid>\n                {Object.entries(metric[selected].packages).map(([pkgName, pkgData]) => {\n                  return (\n                    <React.Fragment key={pkgName}>\n                      <Grid item xs={6}>\n                        <Typography variant=\"body1\">{pkgName}</Typography>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Typography variant=\"body1\">{pkgData.specific}</Typography>\n                      </Grid>\n                    </React.Fragment>\n                  );\n                })}\n              </Grid>\n            </CardContent>\n          </Card>\n        ) : (\n          <Box height=\"100%\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Typography variant=\"h5\" align=\"center\">\n              Choose a license\n            </Typography>\n            <Typography variant=\"body2\" align=\"center\">\n              Click on a license from the list of licenses to view which packages use that license\n            </Typography>\n          </Box>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n","export const fromBytes = (bytes?: number) => {\n  if (!bytes) {\n    return \"0 B\";\n  }\n\n  const KB = bytes / 1000;\n  if (KB < 1) {\n    return `${bytes} B`;\n  }\n\n  const MB = bytes / 1e6;\n  if (MB < 1) {\n    return `${KB.toFixed(2)} KB`;\n  }\n\n  const GB = bytes / 1e9;\n  if (GB < 1) {\n    return `${MB.toFixed(2)} MB`;\n  }\n\n  const TB = bytes / 1e12;\n  if (TB < 1) {\n    return `${GB.toFixed(2)} GB`;\n  } else {\n    return `${TB.toFixed(2)} TB`;\n  }\n};\n","import React, { useEffect, useMemo, useState } from \"react\";\n\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport DescriptionRoundedIcon from \"@mui/icons-material/DescriptionRounded\";\nimport ArrowUpwardRoundedIcon from \"@mui/icons-material/ArrowUpwardRounded\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { fromBytes } from \"utils/fromBytes\";\nimport { GavelRounded, KeyboardArrowDownRounded, KeyboardDoubleArrowDownRounded } from \"@mui/icons-material\";\nimport { useGraph } from \"hooks\";\nimport DependencyGraph from \"components/organisms/DependencyGraph\";\nimport { PackageVersionValue } from \"lib/interfaces/PackageVersionValue\";\nimport { usePackagesData } from \"hooks/usePackageData\";\n\nexport function AdviseDependencies({ analysis_id }: { analysis_id: string }) {\n  const [selected, setSelected] = useState<Node<PackageVersionValue>>();\n  const [dependents, setDependents] = useState<Node<PackageVersionValue>[]>([]);\n  const [dependencies, setDependencies] = useState<Node<PackageVersionValue>[]>([]);\n\n  const { data: graph } = useGraph(analysis_id);\n  const {\n    data: { packagesDataMap },\n  } = usePackagesData(analysis_id);\n\n  useEffect(() => {\n    if (graph) {\n      const root = graph.nodes.get(\"*App\");\n      if (root) {\n        setSelected(root);\n      }\n    }\n  }, [graph]);\n\n  useEffect(() => {\n    if (graph && selected) {\n      setDependents(\n        Array.from(selected?.parents.values() ?? []).map(key => graph.nodes.get(key)) as Node<PackageVersionValue>[],\n      );\n      setDependencies(Array.from(selected?.adjacents.values() ?? []));\n    }\n  }, [selected, graph]);\n\n  const [agg_size, agg_license, agg_warnings, direct_deps, indirect_deps] = useMemo(() => {\n    if (graph && selected) {\n      let size = 0;\n      const licenses: { [key: string]: number } = {};\n      let warnings = 0;\n      let direct = 0;\n      let indirect = 0;\n\n      const bfs = graph.graphSearch(selected);\n      Array.from(bfs).forEach(node => {\n        const nodeData = packagesDataMap?.get(node.key);\n        if (nodeData) {\n          size += nodeData.size ?? 0;\n          warnings += nodeData.warningsCount ?? 0;\n          if (licenses[nodeData?.license ?? \"Not found\"]) {\n            licenses[nodeData?.license ?? \"Not found\"] += 1;\n          } else {\n            licenses[nodeData?.license ?? \"Not found\"] = 1;\n          }\n\n          // deps\n          if (dependencies?.some(pkg => pkg.key === node.key)) {\n            direct += 1;\n          } else if (node.key !== selected.key) {\n            indirect += 1;\n          }\n        }\n      });\n\n      return [size, licenses, warnings, direct, indirect];\n    }\n\n    return [0, [], 0, 0, 0];\n  }, [selected]);\n\n  return (\n    <Grid container columnSpacing={4} rowSpacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Dependency Tree</Typography>\n        <Typography variant=\"body1\">\n          A Python environment&apos;s packages can be organized as a one directional graph with root packages generally\n          being the dependencies defined in the Pipfile.\n        </Typography>\n      </Grid>\n      <Grid item xs={6} sx={{ marginTop: 1 }}>\n        <List>\n          {dependents?.length > 0 && dependents.at(0)?.key !== \"*App\" && (\n            <ListItem sx={{ paddingBottom: 0 }}>\n              <ListItemText>\n                <Typography variant=\"body2\" fontWeight=\"bold\" sx={{ color: \"gray\" }}>\n                  Dependents\n                </Typography>\n              </ListItemText>\n            </ListItem>\n          )}\n          {dependents.map(node => {\n            return (\n              <ListItemButton key={node.key} onClick={() => setSelected(node)} sx={{ borderRadius: 100 }}>\n                <ListItemAvatar>\n                  <ArrowUpwardRoundedIcon />\n                </ListItemAvatar>\n                <ListItemText>\n                  {selected?.key === \"*App\" && node.key === \"*App\" ? (\n                    <Typography variant=\"body1\" sx={{ color: \"gray\" }} fontStyle=\"italic\">\n                      Pipfile\n                    </Typography>\n                  ) : node.key === \"*App\" ? (\n                    <Typography variant=\"body1\" sx={{ color: \"gray\" }} fontStyle=\"italic\">\n                      Back to roots\n                    </Typography>\n                  ) : (\n                    <Typography variant=\"body1\">{node?.key}</Typography>\n                  )}\n                </ListItemText>\n              </ListItemButton>\n            );\n          })}\n          <ListItemButton selected sx={{ borderRadius: 100 }}>\n            <ListItemText>\n              {selected?.key === \"*App\" ? (\n                <Typography variant=\"body1\" sx={{ color: \"gray\" }} fontStyle=\"italic\">\n                  Pipfile\n                </Typography>\n              ) : (\n                <Typography variant=\"body1\">{selected?.key}</Typography>\n              )}\n            </ListItemText>\n            <Chip sx={{ fontStyle: \"italic\" }} label=\"Selected\" />\n          </ListItemButton>\n          {dependencies.length > 0 && (\n            <ListItem sx={{ paddingBottom: 0 }}>\n              <ListItemText>\n                <Typography variant=\"body2\" fontWeight=\"bold\" sx={{ color: \"gray\" }}>\n                  Dependencies\n                </Typography>\n              </ListItemText>\n              <Typography variant=\"body2\" fontWeight=\"bold\" sx={{ color: \"gray\" }}>\n                Dependency count\n              </Typography>\n            </ListItem>\n          )}\n          {dependencies.map(node => {\n            return (\n              <ListItemButton key={node.key} onClick={() => setSelected(node)} sx={{ borderRadius: 100 }}>\n                <ListItemText>\n                  <Typography variant=\"body1\">{node?.key}</Typography>\n                </ListItemText>\n                <Chip label={node.adjacents.size} />\n              </ListItemButton>\n            );\n          })}\n        </List>\n      </Grid>\n      <Grid item xs={6}>\n        <Card>\n          {selected?.key === \"*App\" ? (\n            <CardHeader\n              title={\"Pipfile\"}\n              subheader={`The supplied Pipfile has ${selected?.adjacents.size} dependencies`}\n            />\n          ) : (\n            <CardHeader\n              title={selected?.key}\n              subheader={`${selected?.key} depends on ${selected?.adjacents.size} packages and is a dependency for ${selected?.parents.size}`}\n            />\n          )}\n          <CardContent>\n            {selected?.key !== \"*App\" && (\n              <>\n                <DependencyGraph analysis_id={analysis_id} graphHeight=\"25vh\" root={selected?.key} />\n                <Typography variant=\"h5\" sx={{ marginBottom: 2 }}>\n                  Package Stats\n                </Typography>\n                <Stack sx={{ marginLeft: 1 }} spacing={1.5}>\n                  <Stack direction=\"row\" spacing={1}>\n                    <DescriptionRoundedIcon />\n                    <Typography variant=\"body1\" fontWeight=\"bold\">\n                      Package size:{\" \"}\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      {fromBytes(packagesDataMap?.get(selected?.key ?? \"\")?.size ?? 0)}\n                    </Typography>\n                  </Stack>\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                    <WarningAmberOutlinedIcon color=\"warning\" />\n                    <Typography variant=\"body1\" fontWeight=\"bold\">\n                      Package warnings count:{\" \"}\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      {packagesDataMap?.get(selected?.key ?? \"\")?.warningsCount ?? 0}\n                    </Typography>\n                  </Stack>\n                </Stack>\n                <Divider sx={{ marginY: 2 }} variant=\"fullWidth\" />\n              </>\n            )}\n\n            <Typography variant=\"h5\" sx={{ marginBottom: 2 }}>\n              Dependency Stats\n            </Typography>\n            <Stack sx={{ marginLeft: 1 }} spacing={1.5}>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <DescriptionRoundedIcon />\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  Total size:{\" \"}\n                </Typography>\n                <Typography variant=\"body1\">{fromBytes(agg_size)}</Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <WarningAmberOutlinedIcon color=\"warning\" />\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  Total warnings count:{\" \"}\n                </Typography>\n                <Typography variant=\"body1\">{agg_warnings}</Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <KeyboardArrowDownRounded />\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  Direct dependencies:{\" \"}\n                </Typography>\n                <Typography variant=\"body1\">{direct_deps}</Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <KeyboardDoubleArrowDownRounded />\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  Indirect dependencies:{\" \"}\n                </Typography>\n                <Typography variant=\"body1\">{indirect_deps}</Typography>\n              </Stack>\n              <Stack spacing={1} direction=\"row\" alignItems=\"center\">\n                <GavelRounded />\n                <Typography variant=\"h6\">Licenses</Typography>\n              </Stack>\n              {Object.entries(agg_license)\n                .sort((a, b) => b[1] - a[1])\n                .map(([license, count], i) => (\n                  <Stack\n                    key={license}\n                    justifyContent=\"space-between\"\n                    direction=\"row\"\n                    sx={{ borderRadius: 100, paddingX: 2, backgroundColor: i % 2 !== 0 ? \"#84848414\" : undefined }}\n                  >\n                    <Typography variant=\"body1\">{license}</Typography>\n                    <Typography variant=\"body1\">{count}</Typography>\n                  </Stack>\n                ))}\n            </Stack>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\n\ninterface IAdviseNotFound {\n  analysis_id: string;\n}\n\nexport const AdviseNotFound = ({ analysis_id }: IAdviseNotFound) => {\n  return <div>`&quot;{analysis_id}&quot;` not found</div>;\n};\n","import React, { useEffect } from \"react\";\nimport { Route, Routes, useParams, Navigate } from \"react-router-dom\";\n\n// layouts\nimport { AdviserLayout, MainLayout, NavigationLayout } from \"components/templates\";\n\n// sub-routes\nimport { AdviseSummary } from \"./AdviseSummary\";\nimport { AdviseDetails } from \"./AdviseDetails\";\nimport { AdviseCompare } from \"./AdviseCompare\";\nimport { AdviseLogs } from \"./AdviseLogs\";\nimport { AdviseStackInfo } from \"./AdviseStackInfo\";\nimport { AdviseEnvironmentInfo } from \"./AdviseEnvironmentInfo\";\nimport { AdviseLicenses } from \"./AdviseLicenses\";\nimport { AdviseDependencies } from \"./AdviseDependencies\";\nimport { AdviseNotFound } from \"./AdviseNotFound\";\n\n// hooks\nimport { useAdviseDocument } from \"api\";\n\n// utils\nimport { LOCAL_STORAGE_KEY } from \"config\";\n\n\nexport const AdviseRoutes = () => {\n  // get document id\n  const { analysis_id } = useParams();\n\n  // api get thoth advise document\n  const { query: adviseDocumentQuery } = useAdviseDocument(analysis_id);\n\n  // add analysis id to history\n  useEffect(() => {\n    if (adviseDocumentQuery.isSuccess && analysis_id) {\n      const ids = localStorage.getItem(LOCAL_STORAGE_KEY) ?? \"\";\n\n      const split = ids.split(\",\");\n      if (!split.includes(analysis_id)) {\n        split.push(analysis_id);\n        localStorage.setItem(LOCAL_STORAGE_KEY, split.join(\",\"));\n      }\n    }\n  }, [adviseDocumentQuery.status]);\n\n  if (adviseDocumentQuery.isError || !analysis_id) {\n    return (\n      <NavigationLayout>\n        <AdviseNotFound analysis_id={analysis_id ?? \"no id\"} />\n      </NavigationLayout>\n    );\n  }\n\n  return (\n    <AdviserLayout analysis_id={analysis_id}>\n      <MainLayout>\n        <Routes>\n          <Route path=\"summary\" element={<AdviseSummary analysis_id={analysis_id} />} />\n          <Route path=\"packages\" element={<AdviseDetails analysis_id={analysis_id} />} />\n          <Route path=\"packages/:pkg\" element={<AdviseDetails analysis_id={analysis_id} />} />\n          <Route path=\"logs\" element={<AdviseLogs analysis_id={analysis_id} />} />\n          <Route path=\"compare\" element={<AdviseCompare analysis_id={analysis_id} />} />\n          <Route path=\"compare/:cmp\" element={<AdviseCompare analysis_id={analysis_id} />} />\n          <Route path=\"stack-info\" element={<AdviseStackInfo analysis_id={analysis_id} />} />\n          <Route path=\"environment\" element={<AdviseEnvironmentInfo analysis_id={analysis_id} />} />\n          <Route path=\"licenses\" element={<AdviseLicenses analysis_id={analysis_id} />} />\n          <Route path=\"dependency-tree\" element={<AdviseDependencies analysis_id={analysis_id} />} />\n          <Route path=\"*\" element={<Navigate to=\"summary\" />} />\n        </Routes>\n      </MainLayout>\n    </AdviserLayout>\n  );\n};\n","import React, { useContext } from \"react\";\nimport Select from \"@mui/material/Select\";\nimport { Box, MenuItem, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SpecContext } from \"features/package/routes/PackageOverview\";\nimport { BoxTypeMap } from \"@mui/material/Box/Box\";\n\ninterface IParamDropdown {\n  options: { value: string }[];\n  type: string;\n  label?: string;\n  disabled?: boolean;\n  props?: BoxTypeMap;\n}\n\nexport const ParamDropdown = ({ options, type, label, disabled, ...props }: IParamDropdown) => {\n  const navigate = useNavigate();\n  const { specs, defaultSpecs } = useContext(SpecContext);\n\n  const handleChange = (event: { target: { value: string } }) => {\n    switch (type) {\n      case \"package_version\":\n        navigate(`/package/${specs.package_name}/${event.target.value}`);\n        break;\n      case \"index_url\":\n        navigate(\n          `/package/${specs.package_name}/${specs.package_version ?? defaultSpecs.package_version}/${encodeURIComponent(\n            event.target.value,\n          )}`,\n        );\n        break;\n      case \"os_name\":\n        navigate(\n          `/package/${specs.package_name}/${specs.package_version ?? defaultSpecs.package_version}/${encodeURIComponent(\n            specs.index_url ?? defaultSpecs.index_url ?? \"\",\n          )}/${event.target.value}`,\n        );\n\n        break;\n      case \"os_version\":\n        navigate(\n          `/package/${specs.package_name}/${specs.package_version ?? defaultSpecs.package_version}/${encodeURIComponent(\n            specs.index_url ?? defaultSpecs.index_url ?? \"\",\n          )}/${specs.os_name ?? defaultSpecs.os_name}/${event.target.value}`,\n        );\n        break;\n      case \"python_version\":\n        navigate(\n          `/package/${specs.package_name}/${specs.package_version ?? defaultSpecs.package_version}/${encodeURIComponent(\n            specs.index_url ?? defaultSpecs.index_url ?? \"\",\n          )}/${specs.os_name ?? defaultSpecs.os_name}/${specs.os_version ?? defaultSpecs.os_version}/${\n            event.target.value\n          }`,\n        );\n        break;\n    }\n  };\n\n  return (\n    <Box {...props}>\n      <Typography variant=\"body2\">{label}</Typography>\n      <Select\n        displayEmpty\n        fullWidth\n        value={specs[type as keyof typeof specs] ?? \"\"}\n        onChange={handleChange}\n        size=\"small\"\n        variant=\"outlined\"\n        disabled={disabled}\n        renderValue={value => {\n          if (!value) {\n            return <em style={{ color: \"grey\" }}>{defaultSpecs?.[type as keyof typeof specs] ?? label}</em>;\n          } else {\n            return value;\n          }\n        }}\n      >\n        <MenuItem disabled value=\"\">\n          <em>{label}</em>\n        </MenuItem>\n        {options.map(option => {\n          return (\n            <MenuItem key={option.value} value={option.value}>\n              {option.value}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </Box>\n  );\n};\n","import React, { useContext, useMemo, useState } from \"react\";\n\n// material-ui\nimport { Box, Grid, IconButton, Skeleton, Typography } from \"@mui/material\";\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\n\n// local\nimport IconText from \"components/molecules/IconText\";\n\n// utils\nimport { ParamDropdown } from \"../ParamDropdown\";\nimport { SpecContext } from \"../../routes/PackageOverview\";\nimport { components } from \"lib/schema\";\n\nexport interface IPackageHeader {\n  /** Package metadata object.*/\n  metadata?: {\n    /** Name of package. */\n    Name: string;\n    /** Description of package. */\n    Summary?: string;\n    /** License of package */\n    License?: string;\n  };\n  /** list of all versions of a package **/\n  allVersions?: components[\"schemas\"][\"PythonPackageVersionsResponse\"][\"versions\"];\n  /** list of all environments of a package, version, index **/\n  allEnvironments?: components[\"schemas\"][\"PythonPackageVersionEnvironmentsResponse\"][\"environments\"];\n}\n\n/**\n * A header for package metadata.\n */\nexport const PackageHeader = ({ metadata, allVersions = [], allEnvironments = [] }: IPackageHeader) => {\n  const { defaultSpecs, specs } = useContext(SpecContext);\n  const [showEnvParams, setShowEnvParams] = useState(false);\n\n  const versionOptions = useMemo(() => {\n    const dups = new Set();\n    return allVersions\n      .filter(version => {\n        if (!dups.has(version.package_version)) {\n          dups.add(version.package_version);\n          return true;\n        }\n        return false;\n      })\n      .map(version => {\n        return {\n          value: version.package_version,\n        };\n      })\n      .sort((a, b) => (a.value.split(\".\") > b.value.split(\".\") ? 1 : -1));\n  }, [allVersions]);\n\n  const indexUrlOptions = useMemo(() => {\n    const dups = new Set();\n    return allVersions\n      .filter(version => {\n        if (specs.package_version) {\n          return specs.package_version === version.package_version;\n        } else {\n          return defaultSpecs.package_version === version.package_version;\n        }\n      })\n      .filter(version => {\n        if (!dups.has(version.index_url)) {\n          dups.add(version.index_url);\n          return true;\n        }\n        return false;\n      })\n      .map(version => {\n        return {\n          value: version.index_url,\n        };\n      });\n  }, [allVersions]);\n\n  const [osNameOptions, osVersionOptions, pythonVersionOptions] = useMemo(() => {\n    const name = allEnvironments.map(env => {\n      return {\n        value: env.os_name,\n      };\n    });\n    const version = allEnvironments\n      .filter(env => !specs.os_name || specs.os_name === env.os_name)\n      .map(env => {\n        return {\n          value: env.os_version,\n        };\n      });\n    const pyVersion = allEnvironments\n      .filter(\n        env =>\n          (!specs.os_name || specs.os_name === env.os_name) &&\n          (!specs.os_version || specs.os_version === env.os_version),\n      )\n      .map(env => {\n        return {\n          value: env.python_version,\n        };\n      });\n    return [name, version, pyVersion];\n  }, [allEnvironments, specs]);\n\n  if (!metadata) {\n    return (\n      <Box data-testid=\"package-header-not-loaded\">\n        <Skeleton />\n        <Skeleton />\n        <Skeleton width={\"60%\"} />\n      </Box>\n    );\n  }\n\n  return (\n    <div>\n      <Grid container alignItems=\"flex-end\" spacing={1}>\n        <Grid item>\n          <Typography variant=\"h4\" mr={2}>\n            <b>{metadata?.Name}</b>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <ParamDropdown options={versionOptions ?? []} type=\"package_version\" label={\"Version\"} />\n        </Grid>\n        <Grid item>\n          <ParamDropdown\n            options={indexUrlOptions ?? []}\n            type=\"index_url\"\n            label={\"Index URL\"}\n            disabled={specs.package_version === undefined}\n          />\n        </Grid>\n        {showEnvParams ? (\n          <React.Fragment>\n            <Grid item>\n              <ParamDropdown\n                options={osNameOptions ?? []}\n                type=\"os_name\"\n                label={\"OS Name\"}\n                disabled={specs.index_url === undefined}\n              />\n            </Grid>\n            <Grid item>\n              <ParamDropdown\n                options={osVersionOptions ?? []}\n                type=\"os_version\"\n                label={\"OS Version\"}\n                disabled={specs.os_name === undefined}\n              />\n            </Grid>\n            <Grid item>\n              <ParamDropdown\n                options={pythonVersionOptions ?? []}\n                type=\"python_version\"\n                label={\"Python Version\"}\n                disabled={specs.os_version === undefined}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : null}\n        <Grid item xs={1}>\n          <IconButton onClick={() => setShowEnvParams(!showEnvParams)} data-testid=\"package-header-expand-button\">\n            {showEnvParams ? <ArrowLeftIcon fontSize=\"large\" /> : <ArrowRightIcon fontSize=\"large\" />}\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      <Typography gutterBottom variant=\"body1\" mt={2}>\n        {metadata?.Summary ?? \"NaN\"}\n      </Typography>\n      <div>\n        <IconText text={metadata?.License ?? \"NaN\"} icon={<GavelIcon />} />\n      </div>\n    </div>\n  );\n};\n","// react\nimport React from \"react\";\n\ninterface IProps {\n  /** card header info */\n  cardMeta: {\n    /** card title */\n    title: string;\n    /** optional subtitle */\n    subTitle?: string;\n  };\n  /** optional card action component (usually some button) */\n  cardAction?: React.ReactNode;\n  /** Card body content */\n  cardBody: React.ReactNode;\n}\nimport { Card, CardContent, CardHeader, Typography } from \"@mui/material\";\n\n/** Card template for metric cards. */\nconst InfoCard = ({ cardMeta, cardBody, cardAction }: IProps) => {\n  return (\n    <Card variant=\"outlined\" sx={{ margin: 0 }}>\n      <CardHeader\n        action={cardAction}\n        title={<Typography variant=\"h5\">{cardMeta.title}</Typography>}\n        subheader={cardMeta.subTitle}\n      />\n      <CardContent>{cardBody}</CardContent>\n    </Card>\n  );\n};\n\nexport default InfoCard;\n","import { Button, Grid, Menu, MenuItem, Typography } from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport React, { useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface IVersionDropdown {\n  node: {\n    name: string;\n    versions: string[];\n    specifier: string;\n  };\n}\n\nexport const VersionDropdown = ({ node }: IVersionDropdown) => {\n  const [open, setOpen] = React.useState<string | null | undefined>(null);\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const navigate = useNavigate();\n\n  const versionOptions = useMemo(() => {\n    const options: { [key: string]: string[] } = {};\n    const distribution = [0, 0];\n    const noDup = new Set();\n    node.versions.forEach(version => {\n      const split = version.split(\".\");\n      const key = split[0] + \".\" + (split[1] ?? \"\");\n\n      if (options[key] === undefined) {\n        options[key] = [];\n        distribution[0] += 1;\n      }\n      if (!noDup.has(version)) {\n        options[key].push(version);\n        distribution[1] += 1;\n        noDup.add(version);\n      }\n    });\n\n    // check if there are too many buckets\n    if (distribution[0] / distribution[1] > 0.25) {\n      // merge buckets\n      const buckets = Math.ceil(distribution[0] * 0.25);\n      const fixedOptions: { [key: string]: string[] } = {};\n      let currentKey: string;\n      Object.keys(options).forEach((key, index, array) => {\n        if (index % buckets === 0) {\n          currentKey = `${key} - ${array[index + buckets - 1] ?? array.at(-1)}`;\n          fixedOptions[currentKey] = [];\n        }\n        fixedOptions[currentKey].push(...options[array[index]]);\n      });\n      return fixedOptions;\n    }\n\n    return options;\n  }, [node]);\n\n  return (\n    <div>\n      <Button\n        onClick={event => {\n          setOpen(node.name);\n          setAnchorEl(event.currentTarget);\n        }}\n        variant=\"outlined\"\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        {node.specifier ?? \"ANY\"}\n      </Button>\n      <Menu\n        open={open === node.name}\n        anchorEl={anchorEl}\n        onClose={() => {\n          setOpen(undefined);\n          setAnchorEl(null);\n        }}\n        PaperProps={{\n          style: {\n            maxHeight: \"40%\",\n            maxWidth: \"50%\",\n          },\n        }}\n      >\n        <MenuItem disabled={true}>Select a version to navigate to:</MenuItem>\n        <Grid container alignContent=\"flex-start\">\n          {Object.entries(versionOptions).map(([key, value]) => {\n            return (\n              <Grid item xs key={key}>\n                <MenuItem sx={{ mt: 2 }} disabled divider>\n                  {key}\n                </MenuItem>\n                {value.map(version => {\n                  return (\n                    <MenuItem key={version} onClick={() => navigate(`/package/${node.name}/${version}`)}>\n                      <Typography variant={\"body2\"}>{version}</Typography>\n                    </MenuItem>\n                  );\n                })}\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Menu>\n    </div>\n  );\n};\n","// react\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport InfoCard from \"components/molecules/InfoCard\";\nimport { Box, Divider, Grid, Skeleton, Typography } from \"@mui/material\";\nimport { VersionDropdown } from \"./VersionDropdown\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { SimplePackageNodeValue } from \"lib/interfaces/SimplePackageNodeValue\";\n\ninterface IPackageDependencies {\n  graph?: Graph<Node<SimplePackageNodeValue>>;\n}\n\ntype PackageDependenciesMetric = {\n  name: string;\n  versions: string[];\n  specifier: string;\n  extra: string[];\n};\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const PackageDependencies = ({ graph }: IPackageDependencies) => {\n  const metric = useMemo(() => {\n    if (!graph?.nodes) {\n      return;\n    }\n\n    const root = graph.nodes.get(\"*App\");\n\n    if (root) {\n      const bfs = graph.graphSearch(root);\n      const visitedOrder = Array.from(bfs);\n\n      const metric: PackageDependenciesMetric[] = [];\n\n      visitedOrder.forEach(node => {\n        if (node.key !== \"*App\" && !node.value.metadata) {\n          metric.push({\n            name: node.value.label ?? node.key,\n            versions: node.value.versions ?? [],\n            specifier: node.value.specifier ?? \"*\",\n            extra: node.value.extra ?? [],\n          });\n        }\n      });\n\n      return metric;\n    }\n  }, [graph]);\n\n  if (!metric) {\n    return (\n      <Box data-testid=\"package-dependencies-not-loaded\">\n        <Skeleton />\n        <Skeleton />\n        <Skeleton width={\"60%\"} />\n      </Box>\n    );\n  }\n\n  return (\n    <InfoCard\n      cardMeta={{\n        title: \"Dependencies\",\n      }}\n      cardBody={\n        <div data-testid=\"package-dependencies-loaded\">\n          <Grid container>\n            <Grid item xs>\n              <Typography variant=\"h6\" gutterBottom>\n                Package\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <Typography variant=\"h6\" gutterBottom>\n                Versions\n              </Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <Typography variant=\"h6\" gutterBottom>\n                Extra\n              </Typography>\n            </Grid>\n          </Grid>\n          <Divider />\n          <Grid container rowSpacing={2} mt={1}>\n            {metric.map(node => {\n              return (\n                <Grid container item xs={12} key={node.name}>\n                  <Grid item xs>\n                    <Typography variant=\"body1\" gutterBottom>\n                      {node.name}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs>\n                    <VersionDropdown node={node} />\n                  </Grid>\n                  <Grid item xs={2}>\n                    <Typography variant=\"body1\" gutterBottom>\n                      {node.extra?.join(\", \")}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n      }\n    />\n  );\n};\n","import React from \"react\";\n\ninterface IPackageNotFound {\n  package_name: string;\n  package_version: string;\n}\n\nexport const PackageNotFound = ({ package_name, package_version }: IPackageNotFound) => {\n  return (\n    <div>\n      `&quot;{package_name}\n      {package_version ? \" \" + package_version : \"\"}&quot;` not found\n    </div>\n  );\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/versions\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\nexport type PackageVersionsRequestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure = path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getPackageVersions = async (name: requestParams[\"name\"]) => {\n  const config: IConfig = {\n    params: {\n      name: name,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n\n  return axios.get<PackageVersionsRequestResponseSuccess>(THOTH_URL + \"/python/package/versions\", config);\n};\n\nexport const usePackageVersions = (name: requestParams[\"name\"], config?: { [key: string]: unknown }) => {\n  return useQuery<AxiosResponse<PackageVersionsRequestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    enabled: !!name,\n    queryKey: [\"packageVersions\", name],\n    queryFn: () => getPackageVersions(name),\n  });\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/version/environments\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getPackageEnvironments = async (\n  name: requestParams[\"name\"],\n  version: requestParams[\"version\"],\n  index: requestParams[\"index\"],\n) => {\n  const config: IConfig = {\n    params: {\n      name: name,\n      version: version,\n      index: index,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n  return axios.get(THOTH_URL + \"/python/package/version/environments\", config);\n};\n\nexport const usePackageEnvironments = (\n  name?: requestParams[\"name\"],\n  version?: requestParams[\"version\"],\n  index?: requestParams[\"index\"],\n  config?: { [key: string]: unknown },\n) => {\n  return useQuery<AxiosResponse<requestResponseSuccess>, AxiosError>({\n    ...config,\n    enabled: !!name && !!version && !!index,\n    queryKey: [\"packageEnvironments\", name, version, index],\n    queryFn: () => getPackageEnvironments(name ?? \"\", version ?? \"\", index ?? \"\"),\n  });\n};\n","import React from \"react\";\n\ninterface IErrorPage {\n  message: string;\n  type: string | number;\n  reason: string;\n}\n\nexport const ErrorPage = ({ message, type, reason }: IErrorPage) => {\n  return (\n    <div>\n      <p>\n        {type}\n        {\": \"}\n        {message}\n      </p>\n      <p>{reason}</p>\n    </div>\n  );\n};\n","// React\nimport React, { useEffect, useMemo, useState } from \"react\";\n\n// local\nimport { PackageDependencies, PackageHeader } from \"../components\";\n\n// material-ui\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport { usePackageMetadata } from \"api\";\nimport { PackageNotFound } from \"./PackageNotFound\";\nimport { useSimpleGraph } from \"../hooks\";\nimport { usePackageEnvironments, usePackageVersions } from \"../api\";\nimport { ErrorPage } from \"routes/ErrorPage\";\nimport { PackageMetadata } from \"lib/types/PackageMetadata\";\n\ntype SpecDetails = {\n  package_name: string;\n  package_version?: string;\n  index_url?: string;\n  os_name?: string;\n  os_version?: string;\n  python_version?: string;\n};\n\nexport const SpecContext = React.createContext<{\n  specs: SpecDetails;\n  defaultSpecs: SpecDetails;\n}>({ specs: { package_name: \"\" }, defaultSpecs: { package_name: \"\" } });\n\n// The page that displays all analysis data\nexport const PackageOverview = () => {\n  const params = useParams<SpecDetails>();\n  const [defaultSpecs, setDefaultSpecs] = useState<SpecDetails>({\n    package_name: params.package_name ?? \"\",\n    package_version: undefined,\n    index_url: undefined,\n    os_name: undefined,\n    os_version: undefined,\n    python_version: undefined,\n  });\n\n  // what is on the url params\n  const specs = useMemo<SpecDetails>(() => {\n    return {\n      package_name: params.package_name ?? \"\",\n      package_version: params?.package_version,\n      index_url: params?.index_url ? decodeURIComponent(params.index_url) : undefined,\n      os_name: params?.os_name,\n      os_version: params?.os_version,\n      python_version: params?.python_version,\n    };\n  }, [params]);\n\n  // get all pages of versions/indexes and merge them together\n  const allVersions = usePackageVersions(specs.package_name);\n\n  // get environments for specific package, version, index\n  const allEnvironments = usePackageEnvironments(\n    specs.package_name,\n    specs.package_version ?? defaultSpecs.package_version,\n    specs.index_url ?? defaultSpecs.index_url,\n    { useErrorBoundary: false },\n  );\n\n  // some params are optional but still need a default value\n  useEffect(() => {\n    const d: SpecDetails = {\n      package_name: params.package_name ?? \"\",\n      package_version: undefined,\n      index_url: undefined,\n      os_name: undefined,\n      os_version: undefined,\n      python_version: undefined,\n    };\n\n    // get default package version and index\n    // needs package name and versions list\n    if (specs.package_name) {\n      if (allVersions.data?.data && allVersions.data.data.versions.length > 0) {\n        d.package_version = allVersions.data.data.versions.at(-1)?.package_version;\n        d.index_url = allVersions.data.data.versions.at(-1)?.index_url;\n      }\n    }\n\n    // get default environment\n    // needs list of environments\n    if (allEnvironments.data && allEnvironments.data.data.environments.length > 0) {\n      const filtered = allEnvironments.data.data.environments.filter(\n        env =>\n          (!specs.os_name || specs.os_name === env.os_name) &&\n          (!specs.os_version || specs.os_version === env.os_version),\n      );\n      if (filtered.length > 0) {\n        d.os_name = filtered.at(0)?.os_name;\n        d.os_version = filtered.at(0)?.os_version;\n        d.python_version = filtered.at(0)?.python_version;\n      }\n    }\n\n    if (Object.entries(defaultSpecs).some(([key, val]) => d[key as keyof typeof d] !== val)) {\n      setDefaultSpecs(d);\n    }\n  }, [allVersions.data, allEnvironments, specs]);\n\n  // get package metadata\n  const metadata = usePackageMetadata(\n    specs.package_name,\n    specs.package_version ?? defaultSpecs.package_version,\n    specs.index_url ?? defaultSpecs.index_url,\n    specs.os_name ?? defaultSpecs.os_name,\n    specs.os_version ?? defaultSpecs.os_version,\n    specs.python_version ?? defaultSpecs.python_version,\n    { useErrorBoundary: false },\n  );\n\n  const graph = useSimpleGraph(metadata);\n\n  if (metadata.isLoading || allVersions?.data?.data?.versions?.length === 0) {\n    return (\n      <div className=\"w-full h-48 flex justify-center items-center\" data-testid=\"loading\">\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (!metadata.data) {\n    if (metadata?.error?.response?.data?.error) {\n      return (\n        <ErrorPage\n          message={metadata.error.response.data.error}\n          type={metadata.error.response.status}\n          reason={`${metadata?.error?.config?.url} failed with params ${JSON.stringify(\n            metadata?.error?.config?.params,\n          )}`}\n        />\n      );\n    }\n    return <PackageNotFound package_name={params.package_name ?? \"\"} package_version={params.package_version ?? \"\"} />;\n  }\n\n  return (\n    <SpecContext.Provider value={{ specs, defaultSpecs }}>\n      <Grid container>\n        <Grid item xs={12} mb={3}>\n          <PackageHeader\n            metadata={metadata.data.data.metadata.importlib_metadata.metadata as PackageMetadata}\n            allVersions={allVersions?.data?.data?.versions}\n            allEnvironments={allEnvironments?.data?.data?.environments}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <PackageDependencies graph={graph} />\n        </Grid>\n      </Grid>\n    </SpecContext.Provider>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\n// utils\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\n\nimport { usePackageMetadata } from \"api\";\nimport { PackageMetadata } from \"lib/types/PackageMetadata\";\nimport { SimplePackageNodeValue } from \"lib/interfaces/SimplePackageNodeValue\";\n\nexport type PackageDependencyMetric = {\n  extra: string[];\n  extras: string[];\n  marker: string;\n  marker_evaluated: string;\n  marker_evaluation_error: string | null;\n  marker_evaluation_result: boolean;\n  specifier: string;\n  versions: string[];\n};\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useSimpleGraph(metadata: ReturnType<typeof usePackageMetadata>) {\n  const [graph, setGraph] = useState<Graph<Node<SimplePackageNodeValue>>>();\n\n  useEffect(() => {\n    if (metadata.status !== \"success\") {\n      return;\n    }\n\n    // create graph\n    const tempGraph: Graph<Node<SimplePackageNodeValue>> = new Graph();\n\n    // add app node to graph\n    const app = tempGraph.addVertex(\n      \"*App\",\n      {\n        id: \"*App\",\n        label: \"App\",\n        depth: -1,\n      },\n      Node,\n    );\n\n    const root = tempGraph.addVertex(\n      metadata.data.data.metadata.package_name.toLowerCase(),\n      {\n        id: metadata.data.data.metadata.package_name.toLowerCase(),\n        label: metadata.data.data.metadata.package_name,\n        metadata: metadata.data.data.metadata.importlib_metadata.metadata as PackageMetadata,\n        depth: 0,\n      },\n      Node,\n    );\n\n    root.parents = new Set();\n    root.parents.add(\"*App\");\n    tempGraph.addEdge(app.key, root.key);\n\n    // add deps to graph\n    Object.entries(\n      metadata.data.data.metadata.dependencies as {\n        [key: string]: PackageDependencyMetric;\n      },\n    ).forEach(([name, value]) => {\n      // add package to graph\n      const node = tempGraph.addVertex(\n        name.toLowerCase(),\n        {\n          id: name.toLowerCase(),\n          label: name,\n          metadata: null,\n          versions: value.versions,\n          specifier: value.specifier,\n          extra: value.extra,\n          depth: 1,\n        },\n        Node,\n      );\n      node.parents = new Set();\n\n      tempGraph.addEdge(root.key, node.key);\n\n      // set parent\n      node.parents.add(root.key);\n    });\n\n    setGraph(tempGraph);\n  }, [metadata.data]);\n\n  return graph;\n}\n","// React\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport { PackageOverview } from \"./PackageOverview\";\nimport { NotFound } from \"routes/NotFound\";\nimport { NavigationLayout } from \"components/templates\";\n\n// The page that displays all analysis data\nexport const PackageRoutes = () => {\n  return (\n    <NavigationLayout>\n      <Routes>\n        <Route path=\"/:package_version/:index_url/:os_name/:os_version/:python_version\" element={<PackageOverview />} />\n        <Route path=\"/:package_version/:index_url/:os_name\" element={<PackageOverview />} />\n        <Route path=\"/:package_version/:index_url/:os_name/:os_version\" element={<PackageOverview />} />\n        <Route path=\"/:package_version/:index_url\" element={<PackageOverview />} />\n        <Route path=\"/:package_version\" element={<PackageOverview />} />\n        <Route path=\"/\" element={<PackageOverview />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </NavigationLayout>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Home } from \"features/home\";\nimport { NotFound } from \"routes/NotFound\";\nimport { AdviseRoutes } from \"pages/advise/AdviseRoutes\";\nimport { PackageRoutes } from \"features/package\";\n\nexport const RouterConfig = () => {\n  return (\n    <BrowserRouter basename={process.env.REACT_APP_DEPLOYMENT === \"STAGE\" ? \"/search-stage\" : \"/search\"}>\n      <Routes>\n        <Route path={\"/\"} element={<Home />} />\n        <Route path={\"advise/:analysis_id/*\"} element={<AdviseRoutes />} />\n        <Route path={\"package/:package_name/*\"} element={<PackageRoutes />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default RouterConfig;\n","import React from \"react\";\nimport { AppProvider } from \"providers/app\";\nimport RouterConfig from \"routes/RouterConfig\";\n\nfunction App() {\n  return (\n    <AppProvider>\n      <RouterConfig />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}