{"version":3,"sources":["lib/react-query.js","styles/Theme.js","stores/Global.js","components/Footer/Footer.js","components/Layout/MainLayout.js","components/Layout/AdviseLayout.js","providers/app.js","components/Elements/TabPanel/TabPanel.js","assets/thoth-logo.png","components/Elements/SearchBar/SearchBar.js","config/index.js","features/home/api/postAdvise.js","features/home/api/getPackageExists.js","features/home/api/getContainerImages.js","features/home/components/PackageSearch.js","features/home/components/ComboBox/ComboBox.js","features/home/components/AdviseCreation.js","utils/timeSince.js","routes/NotFound.js","features/home/components/ImageTable.js","features/home/components/ImageSearch.js","features/home/api/postImageAnalyze.js","features/home/routes/index.js","components/Elements/InfoCard/InfoCard.js","components/Elements/IconText/IconText.js","utils/calcTime.js","features/advise/components/AdviseHeader/CustomAlert/CustomAlert.js","features/advise/components/AdviseHeader/AdviseHeader.js","features/advise/components/CustomCardAction/CustomCardAction.js","features/advise/components/AdviseTableView/utils.js","features/advise/components/AdviseTableView/EnhancedTableHead/EnhancedTableHead.js","features/advise/routes/AdviseDetails.js","utils/Node.js","utils/Graph.js","features/advise/components/AdviseTableView/AdviseTableView.js","features/advise/components/LockfileView/LockfileView.js","features/advise/components/Popup/Popup.js","features/advise/components/NetworkGraphView/NetworkGraphView.js","features/advise/components/SelectedPackage/SelectedPackage.js","components/Elements/ProgressBar/ProgressBar.js","components/Metrics/DependenciesMetric/DependenciesMetric.js","components/Metrics/LicenseMetric/LicenseGroup/LicenseGroup.js","components/Metrics/LicenseMetric/LicenseMetric.js","components/Metrics/AdviseMetric/AdviseMetric.js","features/advise/routes/AdviseSummary.js","features/advise/api/getAdviseDocument.js","features/advise/api/getAdviseLogs.js","utils/formatLockfile.js","features/advise/utils/discoverPackageChanges.js","api/getPackageMetadata.js","hooks/metrics/useAdviseMetric.js","hooks/metrics/useDependencyMetric.js","hooks/metrics/useLicenseMetric.js","features/advise/hooks/useMetrics.js","hooks/useGraph.js","features/advise/routes/AdviseNotFound.js","components/Layout/NavigationLayout.js","features/advise/routes/index.js","features/advise/hooks/useMergeGraphs.js","features/package/components/ParamDropdown/ParamDropdown.js","features/package/components/PackageHeader/PackageHeader.js","features/package/components/PackageDependencies/VersionDropdown.js","features/package/components/PackageDependencies/PackageDependencies.js","features/package/routes/PackageNotFound.js","features/package/components/PackageLicenses/PackageLicenses.js","features/package/api/getPackageVersions.js","features/package/api/getPackageEnvironments.js","features/package/hooks/useAllVersions.js","routes/ErrorPage.js","features/package/routes/PackageOverview.js","features/package/hooks/useSimpleGraph.js","features/package/routes/index.js","features/image/components/ImageHeader/ImageHeader.js","features/image/components/DebInfo/DebInfo.js","features/image/components/PythonInfo/PythonInfo.js","features/image/components/ImageInfo/ImageInfo.js","features/image/components/RPMInfo/RPMInfo.js","features/image/routes/ImageSummary.js","features/image/api/getImageDocument.js","features/image/api/getImageLogs.js","features/image/api/getImageMetadata.js","features/image/routes/ImageNotFound.js","features/image/routes/index.js","features/image/hooks/useMetrics.js","features/image/utils/formatImagePackages.js","routes/RouterConfig.js","App.js","index.js"],"names":["queryClient","QueryClient","defaultOptions","queries","useErrorBoundary","refetchOnWindowFocus","refetchOnMount","retry","themeLight","createTheme","palette","background","default","primary","light","main","dark","secondary","text","priamry","typography","fontFamily","h4","fontWeight","fontSize","color","lineHeight","h5","h6","body1","body2","subtitle1","subtitle2","Theme","children","ThemeProvider","theme","CssBaseline","StateContext","React","undefined","DispatchContext","reducer","state","action","type","Error","initState","Global","dispatch","Provider","value","Footer","Box","pb","pt","sx","backgroundColor","textAlign","useStyles","makeStyles","root","marginLeft","marginRight","paddingRight","spacing","paddingLeft","marginTop","marginBottom","minHeight","MainLayout","classes","className","AdviseLayout","header","location","useLocation","Tabs","pathname","split","at","indicatorColor","textColor","Tab","label","component","RouterLink","to","ErrorFallback","Button","onClick","window","assign","origin","AppProvider","FallbackComponent","client","TabPanel","index","props","role","hidden","id","SearchBar","onChange","onEnter","helpertext","boxprops","error","lefticon","righticon","Typography","variant","Paper","p","display","alignItems","borderColor","InputBase","ml","flex","placeholder","e","target","onKeyPress","ev","key","preventDefault","THOTH_URL","options","manipulation","enabled","editNode","nodeData","callback","fixed","x","interaction","hover","hoverConnectedEdges","selectConnectedEdges","selectable","edges","chosen","smooth","arrowStrikethrough","arrows","from","nodes","border","shape","size","borderWidth","labelHighlightBold","font","strokeWidth","physics","hierarchicalRepulsion","damping","springLength","solver","minVelocity","postAdvise","pipfile","pipfileLock","runtime_environment","data","application_stack","requirements","requirements_format","requirements_lock","axios","post","params","recommendation_type","limit","headers","accept","getPackageExists","name","a","get","per_page","then","res","versions","length","catch","getContainerImages","page","PackageSearch","navigate","useNavigate","useState","searchQuery","setSearchQuery","searchError","setSearchError","handleAnalyze","Grid","container","justifyContent","alignSelf","item","xs","md","handleChange","mr","minWidth","filter","createFilterOptions","ComboBox","suggestions","help","required","setValue","useMemo","map","suggestion","title","Autocomplete","event","newValue","inputValue","filterOptions","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","freeSolo","renderInput","fullWidth","helperText","loading","payload","param","lookupType","operating_system_name","operating_system_version","platform","python_version","cuda_version","cudnn_version","mkl_version","openblas_version","openmpi_version","base_image","AdviseCreation","useReducer","isValid","valid","operating_system","version","Object","keys","forEach","response","analysis_id","status","includes","Collapse","in","mt","mb","padding","multiline","rows","sm","TextField","LoadingButton","timeSince","date","seconds","Math","floor","Date","interval","num","NotFound","descendingComparator","b","orderBy","getComparator","order","headCells","EnhancedTableHead","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","direction","property","ImageTable","config","setOrder","setOrderBy","setPage","rowsPerPage","setRowsPerPage","images","useQuery","queryKey","queryFn","container_images","image","datetime","emptyRows","max","isError","width","TableContainer","Table","rowCount","TableBody","slice","sort","row","labelId","tabIndex","scope","environment_name","align","os_name","os_version","IconButton","package_extract_document_id","image_name","style","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","CircularProgress","ImageSearch","Home","mode","setMode","useTheme","matches","useMediaQuery","breakpoints","up","maxWidth","alt","src","logo","stat","i","ToggleButtonGroup","exclusive","newMode","ToggleButton","Divider","bullet","margin","transform","pos","InfoCard","cardMeta","cardBody","cardAction","Card","CardHeader","subheader","subTitle","CardContent","IconText","icon","link","href","calcTime","finished_at","started_at","CustomAlert","info","Alert","severity","toLowerCase","message","titleRow","linksRow","alert","AdviseHeader","adviseDocument","logs","expandAlerts","setExpandAlerts","showLogs","setShowLogs","selectedLine","setSelectedLine","result","report","ERROR","toUpperCase","statusText","statusColor","alerts","stack_info","metadata","document_id","parameters","Chip","error_msg","timeout","unmountOnExit","line","noWrap","CustomCardAction","stableSort","array","comparator","stabilizedThis","el","numeric","visuallyHidden","SelectedPackageContext","createContext","AdviseDetails","mergedGraph","search","setSearch","selected","setSelected","s","AdviseTableView","filteredGraph","Node","this","adjacents","Set","node","add","has","Array","Graph","Map","vertex","set","source","destination","sourceNode","destinationNode","addAdjacent","isAdjacent","first","visited","visitList","pop","shift","getAdjacents","adj","path","newPath","nextPath","findPath","parents","parent","paths","findAllPaths","setRows","useContext","console","log","useEffect","newRows","depth","warnings","license","License","dependencies","change","summary","Summary","iconColor","Fragment","paddingBottom","paddingTop","lockfile","overflow","Popup","gutterBottom","latestVersion","justifications","flexFlow","canvas","NetworkGraph","visJsRef","useRef","selectedNode","findAllNodesOnAllPaths","convertedNodes","DataSet","popup","document","createElement","ReactDOM","render","visData","visEdges","network","current","Network","networkCanvas","getElementById","getElementsByTagName","on","changeCursor","isCluster","newCursorStyle","cursor","ref","SelectedPackage","selectedPackage","dependents","removed","added","unchanged","justs","thoth","just","Stack","reasons","reason","Link","underline","package","entries","advisory","NetworkGraphView","CustomLinearProgress","withStyles","borderRadius","colorPrimary","grey","bar","LinearProgress","gridTemplateColumns","gridGap","whiteSpace","textOverflow","ProgressBar","total","DependenciesMetric","all","roots","totalDependencies","direct","indirect","List","TransitionGroup","t","ListItem","ListItemText","Skeleton","LicenseGroup","packages","totalLicenses","open","setOpen","isOsiApproved","my","k","v","LicenseMetric","metric","more","setMore","licenses","reduce","sum","val","AdviseMetric","justTotal","values","justification","build","AdviseSummary","metrics","setPipfile","handlePipfile","newPipfile","Masonry","columns","advise","getAdviseDocument","getAdviseLogs","formatLockfile","requirements_locked","replace","discoverPackageChanges","justifiedPackages","package_name","start","reasonNodes","oldVersion","whyRemoved","getPackageMetadata","usePackagesMetadata","useQueries","useDependencyMetric","graph","setMetric","base","bfs","graphSearch","useLicenseMetric","packageLicenses","Classifier","classifier","parsed","generalLicense","specificLicense","specific","useMetrics","oldGraph","newGraph","adviseMetric","os_release","python","implementation_name","major","minor","micro","analyzer","analyzer_version","products","useAdviseMetric","oldDependencyMetric","newDependencyMetric","oldLicenseMetric","newLicenseMetric","useGraph","knownRoots","allMetadata","isLoading","query","tempGraph","notRoot","addVertex","package_version","importlib_metadata","currentNode","dep","adjacentNode","addEdge","app","adjs","min","AdviseNotFound","NavigationLayout","goHome","AdviseRoutes","useParams","useAdviseDocument","refetchInterval","useAdviseLogs","initGraphData","isSuccess","project","adviseGraphData","initGraph","adviseGraph","setGraph","visGraphEdges","combinedNode","Version","success","useMergeGraphs","element","ParamDropdown","disabled","SpecContext","specs","defaultSpecs","Select","displayEmpty","encodeURIComponent","index_url","renderValue","MenuItem","PackageHeader","allVersions","allEnvironments","showEnvParams","setShowEnvParams","versionOptions","dups","indexUrlOptions","env","osNameOptions","osVersionOptions","pythonVersionOptions","Name","VersionDropdown","anchorEl","setAnchorEl","distribution","noDup","currentKey","buckets","ceil","fixedVersionOptions","currentTarget","endIcon","specifier","Menu","onClose","PaperProps","maxHeight","alignContent","divider","PackageDependencies","visitedOrder","extra","rowSpacing","join","PackageNotFound","getPackageVersions","getPackageEnvironments","useAllVersions","useInfiniteQuery","input","pageParam","getNextPageParam","lastPage","setAllVersions","hasNextPage","isFetchingNextPage","fetchNextPage","merged","pages","reverse","ErrorPage","flexGrow","PackageOverview","setDefaultSpecs","decodeURIComponent","d","environments","usePackageMetadata","useSimpleGraph","url","JSON","stringify","PackageRoutes","ImageHeader","imageDocument","field","headerName","DebInfo","disableSelectionOnClick","disableColumnSelector","hideFooterSelectedRowCount","getRowId","package_identifier","density","pageSize","PythonInfo","files","file","filepath","interpreters","interpreter","prev","cur","lg","xl","ImageInfo","imageMetadata","architecture","Architecture","created","Created","digest","Digest","docker_version","DockerVersion","labels","Labels","layers","Layers","os","Os","repo_tags","RepoTags","description","vendor","maintainer","toLocaleDateString","usage","valueGetter","sortable","RPMInfo","ImageSummary","deb","getImageDocument","getImageLogs","getImageMetadata","ImageNotFound","ImageRoutes","useImageDocument","arguments","useImageLogs","dependencyMetric","licenseMetric","version_id","image_packages","formatImagePackages","RouterConfig","basename","exact","App","StrictMode"],"mappings":"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","file":"static/js/main.d4d36e41.chunk.js","sourcesContent":["import { QueryClient } from \"react-query\";\n\nconst queryConfig = {\n    queries: {\n        useErrorBoundary: true,\n        refetchOnWindowFocus: false,\n        refetchOnMount: false,\n        retry: false,\n    },\n};\n\nexport const queryClient = new QueryClient({ defaultOptions: queryConfig });\n","import React from \"react\";\n\n// material ui\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { createTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst themeLight = createTheme({\n    palette: {\n        background: {\n            default: \"#f9f9f9\",\n        },\n        primary: {\n            light: \"#f5a733\",\n            main: \"#f39200\",\n            dark: \"#aa6600\",\n        },\n        secondary: {\n            light: \"#72cdee\",\n            main: \"#4fc1ea\",\n            dark: \"#3787a3\",\n        },\n        text: {\n            priamry: \"#363636\",\n            secondary: \"#999\",\n        },\n    },\n    typography: {\n        fontFamily: [\"open sans\", \"sans-serif\"],\n        h4: {\n            fontWeight: 700,\n            fontSize: \"3rem\",\n            color: \"#363636\",\n            lineHeight: 1.125,\n        },\n        h5: {\n            fontWeight: 600,\n            fontSize: \"2rem\",\n            lineHeight: 1.125,\n            color: \"#363636\",\n        },\n        h6: {\n            fontWeight: 600,\n            fontSize: \"1.2rem\",\n            color: \"#444f60\",\n            lineHeight: 1.5,\n        },\n\n        body1: {\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.25,\n            color: \"#000\",\n        },\n\n        body2: {\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            color: \"#000\",\n        },\n        subtitle1: {\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.25,\n            color: \"#999\",\n        },\n\n        subtitle2: {\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            color: \"#999\",\n        },\n    },\n});\n\nfunction Theme({ children }) {\n    return (\n        <ThemeProvider theme={themeLight}>\n            <CssBaseline />\n            {children}\n        </ThemeProvider>\n    );\n}\n\nTheme.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Theme;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const StateContext = React.createContext(undefined);\nexport const DispatchContext = React.createContext(undefined);\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        default:\n            throw new Error(\"State dispatch error\");\n    }\n}\n\nexport const initState = {};\n\nexport default function Global({ children }) {\n    // for state control\n    const [state, dispatch] = React.useReducer(reducer, initState);\n    return (\n        <StateContext.Provider value={state}>\n            <DispatchContext.Provider value={dispatch}>\n                {children}\n            </DispatchContext.Provider>\n        </StateContext.Provider>\n    );\n}\n\nGlobal.propTypes = {\n    children: PropTypes.node,\n};\n","import React from \"react\";\n\nimport { Box } from \"@material-ui/core\";\n\nexport const Footer = () => {\n    return (\n        <Box\n            pb={3}\n            pt={6}\n            sx={{\n                backgroundColor: \"#444f60\",\n                textAlign: \"center\",\n                color: \"white\",\n            }}\n        >\n            This is a footer\n        </Box>\n    );\n};\n","import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Footer } from \"../Footer\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(15),\n        minHeight: \"100vh\",\n    },\n}));\n\n/**\n * Main layout adds margins and spacing to the whole app.\n */\nexport const MainLayout = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.root}>{children}</div>\n            <Footer />\n        </>\n    );\n};\n\nMainLayout.propTypes = {\n    children: PropTypes.node,\n};\n","import * as React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A layout used for the advise feature tabs. It formats the tabs as router links.\n */\nexport const AdviseLayout = ({ children, header }) => {\n    const location = useLocation();\n\n    return (\n        <>\n            <div>\n                {header}\n                <Tabs\n                    value={location.pathname.split(\"/\").at(-1)}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab\n                        label=\"Summary\"\n                        value={\"summary\"}\n                        component={RouterLink}\n                        to=\"summary\"\n                    />\n                    <Tab\n                        label=\"Advise Results\"\n                        value={\"details\"}\n                        component={RouterLink}\n                        to=\"details\"\n                    />\n                </Tabs>\n            </div>\n            <div>{children}</div>\n        </>\n    );\n};\n\nAdviseLayout.propTypes = {\n    children: PropTypes.node,\n    header: PropTypes.element,\n};\n","import * as React from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { QueryClientProvider } from \"react-query\";\nimport { queryClient } from \"lib/react-query\";\nimport { Button } from \"@material-ui/core\";\nimport Theme from \"styles/Theme\";\nimport Global from \"stores/Global\";\nimport { MainLayout } from \"components/Layout\";\nimport PropTypes from \"prop-types\";\n\nconst ErrorFallback = () => {\n    return (\n        <div>\n            <h2>Oops, something went wrong :( </h2>\n            <Button\n                onClick={() => window.location.assign(window.location.origin)}\n            >\n                Refresh\n            </Button>\n        </div>\n    );\n};\n\nexport const AppProvider = ({ children }) => {\n    return (\n        <Theme>\n            <Global>\n                <ErrorBoundary FallbackComponent={ErrorFallback}>\n                    <QueryClientProvider client={queryClient}>\n                        <MainLayout>{children}</MainLayout>\n                    </QueryClientProvider>\n                </ErrorBoundary>\n            </Global>\n        </Theme>\n    );\n};\n\nAppProvider.propTypes = {\n    children: PropTypes.node,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A tab panel used to encapsulate different tab content.\n */\nconst TabPanel = ({ children, value, index, ...props }) => {\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            className={`${props.className}`}\n            {...props}\n        >\n            {value === index && children}\n        </div>\n    );\n};\n\nTabPanel.propTypes = {\n    /** The body of the tab. */\n    children: PropTypes.node,\n    /** The unique identifier of the tab. */\n    index: PropTypes.any.isRequired,\n    /** The state variable passed in from the parent which is compared to the index */\n    value: PropTypes.any.isRequired,\n    /** additional styling */\n    className: PropTypes.string,\n};\n\nexport default TabPanel;\n","export default __webpack_public_path__ + \"static/media/thoth-logo.1a28a729.png\";","import React from \"react\";\n\n// material ui\nimport { Typography, Box, Paper, InputBase } from \"@material-ui/core\";\n\n// react\nimport PropTypes from \"prop-types\";\n\n/**\n *\n */\nconst SearchBar = props => {\n    const {\n        onChange,\n        onEnter,\n        label,\n        helpertext,\n        boxprops,\n        error = false,\n        lefticon,\n        righticon,\n    } = props;\n\n    return (\n        <Box>\n            <Typography\n                variant={\"body1\"}\n                sx={{ color: error ? \"error.main\" : \"text.secondary\" }}\n            >\n                {label}\n            </Typography>\n            <Paper\n                component=\"form\"\n                variant=\"outlined\"\n                sx={{\n                    p: \"8px 4px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    borderColor: error ? \"red\" : undefined,\n                    paddingLeft: 2,\n                    paddingRight: 2,\n                }}\n                {...boxprops}\n            >\n                {lefticon}\n                <InputBase\n                    sx={{ ml: 1, flex: 1 }}\n                    placeholder={helpertext}\n                    error={error}\n                    onChange={e => onChange(e.target.value)}\n                    onKeyPress={ev => {\n                        if (ev.key === \"Enter\") {\n                            onEnter();\n                            ev.preventDefault();\n                        }\n                    }}\n                    {...props}\n                />\n                {righticon}\n            </Paper>\n        </Box>\n    );\n};\n\nSearchBar.propTypes = {\n    /** The error text or default label text */\n    label: PropTypes.string,\n    /** callback function when textbox content changes */\n    onChange: PropTypes.func.isRequired,\n    /** callback function when textbox ENTER is pressed */\n    onEnter: PropTypes.func,\n    /** helper text for the search bar */\n    helpertext: PropTypes.string,\n    /** if there is an error or not */\n    error: PropTypes.bool,\n    /** icon displayed on the left of the text box */\n    lefticon: PropTypes.node,\n    /** icon displayed on the right of the text box */\n    righticon: PropTypes.node,\n    /** Props added to the text box */\n    boxprops: PropTypes.any,\n};\n\nexport default SearchBar;\n","export const PYPI_URL = \"https://pypi.org/pypi\";\nconst useProd = true;\nexport const THOTH_URL =\n    !useProd &&\n    (process.env.REACT_APP_DEPLOYMENT === \"STAGE\" ||\n        process.env.NODE_ENV === \"development\")\n        ? \"https://stage.thoth-station.ninja/api/v1\"\n        : \"https://khemenu.thoth-station.ninja/api/v1\";\nexport const LICENSES_URL =\n    \"https://raw.githubusercontent.com/spdx/license-list-data/master/json/licenses.json\";\n\n/**\n * used for vis-js graph render engine\n */\nexport const options = {\n    manipulation: {\n        enabled: false,\n        editNode: function (nodeData, callback) {\n            nodeData.fixed = !nodeData.fixed.x;\n            callback(nodeData);\n        },\n    },\n    interaction: {\n        hover: true,\n        hoverConnectedEdges: false,\n        selectConnectedEdges: false,\n        selectable: true,\n    },\n    edges: {\n        chosen: false,\n        smooth: false,\n        color: {\n            color: \"#5c6470\",\n        },\n        arrowStrikethrough: false,\n        arrows: {\n            from: {\n                enabled: true,\n                type: \"triangle\",\n            },\n        },\n    },\n\n    nodes: {\n        chosen: false,\n        color: {\n            background: \"#5c6470\",\n            border: \"#fff\",\n            hover: {\n                background: \"#f39200\",\n                border: \"#fff\",\n            },\n        },\n        shape: \"dot\",\n        size: 10,\n        borderWidth: 2,\n        labelHighlightBold: false,\n        font: {\n            color: \"#393e46\",\n            strokeWidth: 2,\n            size: 15,\n        },\n    },\n    physics: {\n        hierarchicalRepulsion: {\n            damping: 0.1,\n            springLength: 200,\n        },\n        solver: \"hierarchicalRepulsion\",\n        minVelocity: 0.15,\n    },\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\n\nexport const postAdvise = (pipfile, pipfileLock, runtime_environment) => {\n    const data = {\n        application_stack: {\n            requirements: pipfile,\n            requirements_format: \"pipenv\",\n            requirements_lock: pipfileLock,\n        },\n        runtime_environment: runtime_environment,\n    };\n\n    return axios.post(THOTH_URL + \"/advise/python\", data, {\n        params: {\n            recommendation_type: \"stable\",\n            limit: 500,\n        },\n        headers: {\n            accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\n\nexport const getPackageExists = async name => {\n    return axios\n        .get(THOTH_URL + \"/python/package/versions\", {\n            params: {\n                name: name,\n                per_page: 1,\n            },\n            headers: {\n                accept: \"application/json\",\n            },\n        })\n        .then(res => {\n            return res.data.versions.length > 0;\n        })\n        .catch(() => false);\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery, useInfiniteQuery } from \"react-query\";\n\nexport const getContainerImages = async (name, page = 0, per_page = 100) => {\n    return axios.get(THOTH_URL + \"/container-images\", {\n        params: {\n            page: page,\n            per_page: per_page,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useContainerImages = config => {\n    return useQuery({\n        ...config,\n        queryKey: [\"container-images\"],\n        queryFn: () => getContainerImages(),\n    });\n};\n\nexport const useInfiniteContainerImages = config => {\n    return useInfiniteQuery({\n        ...config,\n        queryKey: [\"container-images\"],\n        queryFn: input => {\n            return getContainerImages(input.pageParam);\n        },\n        getNextPageParam: lastPage => {\n            return lastPage.data.versions.length === 0\n                ? undefined\n                : lastPage.data.parameters.page + 1;\n        },\n    });\n};\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPackageExists } from \"../api\";\n\nexport const PackageSearch = () => {\n    const navigate = useNavigate();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [searchError, setSearchError] = useState(\"\");\n\n    const handleAnalyze = async () => {\n        // if no query\n        if (searchQuery === \"\") {\n            return;\n        }\n\n        const exists = await getPackageExists(searchQuery);\n\n        if (exists) {\n            navigate(\"/package/\" + searchQuery);\n        } else {\n            setSearchError(\"Thoth does not know about that package\");\n        }\n    };\n\n    const handleChange = e => {\n        setSearchQuery(e.target.value);\n        if (searchError !== \"\") {\n            setSearchError(\"\");\n        }\n    };\n\n    return (\n        <Grid container justifyContent=\"center\">\n            <Grid alignSelf=\"flex-start\" item xs={12}>\n                <Typography\n                    color=\"error\"\n                    variant=\"body1\"\n                    sx={{ minHeight: 30 }}\n                >\n                    {searchError ?? \"\"}\n                </Typography>\n            </Grid>\n            <Grid container spacing={2} item xs={12}>\n                <Grid item xs={12} md={10}>\n                    <SearchBar\n                        error={searchError !== \"\"}\n                        onChange={e => handleChange(e)}\n                        helpertext={\"Search for a Python package\"}\n                        type=\"search\"\n                        boxprops={{ mr: 2 }}\n                        lefticon={<SearchRoundedIcon />}\n                        onEnter={handleAnalyze}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => handleAnalyze()}\n                        sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                    >\n                        <b>Analyze</b>\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst filter = createFilterOptions();\n\nexport default function ComboBox({\n    suggestions,\n    label,\n    help,\n    required,\n    error,\n    value,\n    setValue,\n}) {\n    suggestions = useMemo(() => {\n        return suggestions.map(suggestion => {\n            return {\n                title: suggestion,\n            };\n        });\n    }, [suggestions]);\n\n    return (\n        <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n                if (typeof newValue === \"string\") {\n                    setValue(newValue);\n                } else if (newValue && newValue.inputValue) {\n                    // Create a new value from the user input\n                    setValue({ title: newValue.inputValue });\n                } else {\n                    setValue(newValue);\n                }\n            }}\n            filterOptions={(options, params) => {\n                const filtered = filter(options, params);\n\n                const { inputValue } = params;\n                // Suggest the creation of a new value\n                const isExisting = options.some(\n                    option => inputValue === option.title,\n                );\n                if (inputValue !== \"\" && !isExisting) {\n                    filtered.push({\n                        inputValue,\n                        title: `Add \"${inputValue}\"`,\n                    });\n                }\n\n                return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={suggestions ?? []}\n            getOptionLabel={option => {\n                // Value selected with enter, right from the input\n                if (typeof option === \"string\") {\n                    return option;\n                }\n                // Add \"xxx\" option created dynamically\n                if (option.inputValue) {\n                    return option.inputValue;\n                }\n                // Regular option\n                return option.title;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.title}</li>}\n            freeSolo\n            renderInput={params => (\n                <TextField\n                    fullWidth\n                    {...params}\n                    label={label}\n                    required={required}\n                    error={error !== undefined}\n                    helperText={help}\n                />\n            )}\n        />\n    );\n}\n\nComboBox.propTypes = {\n    suggestions: PropTypes.array,\n    label: PropTypes.string,\n    help: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.any,\n    value: PropTypes.string,\n    setValue: PropTypes.func,\n};\n","import {\n    Button,\n    Collapse,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport React, { useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\nimport { postAdvise } from \"../api\";\nimport ComboBox from \"./ComboBox/ComboBox\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"loading\":\n            return { ...state, loading: action.payload };\n        case \"error\":\n            return {\n                ...state,\n                error: { ...state.error, [action.param]: action.payload },\n            };\n        case \"clear-error\":\n            state.error = {};\n            return state;\n        case \"input\":\n            return {\n                ...state,\n                [action.param]: action.payload,\n                error: { ...state.error, [action.param]: undefined },\n            };\n        default:\n            throw new Error(\"Advise state dispatch error\");\n    }\n}\n\nexport const initState = {\n    error: {},\n    loading: false,\n    lookupType: \"id\",\n    operating_system_name: \"ubi\",\n    operating_system_version: \"8\",\n    platform: \"\",\n    python_version: \"3.8\",\n    cuda_version: \"\",\n    cudnn_version: \"\",\n    mkl_version: \"\",\n    name: \"\",\n    openblas_version: \"\",\n    openmpi_version: \"\",\n    base_image: \"\",\n};\n\nexport const AdviseCreation = () => {\n    const navigate = useNavigate();\n    const [state, dispatch] = useReducer(reducer, initState);\n\n    const isValid = () => {\n        if (state.lookupType === \"id\") {\n            if (!state.id || state.id === \"\") {\n                dispatch({\n                    type: \"error\",\n                    param: \"id\",\n                    payload: \"Field cant be empty\",\n                });\n                return false;\n            }\n        } else {\n            let valid = true;\n            if (!state.pipfile) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"pipfile\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n            if (!state.pipfileLock) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"pipfileLock\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n            if (!state.name) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"name\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n\n            return valid;\n        }\n\n        return true;\n    };\n\n    const handleAnalyze = async () => {\n        if (state.loading || !isValid()) {\n            return;\n        }\n\n        if (state.lookupType === \"id\") {\n            navigate(\"/advise/\" + state.id);\n        } else {\n            dispatch({ type: \"loading\", payload: true });\n            const runtime_environment = {\n                operating_system: {\n                    name: state.operating_system_name,\n                    version: state.operating_system_version,\n                },\n                platform: state.platform,\n                python_version: state.python_version,\n                base_image: state.base_image,\n                cuda_version: state.cuda_version,\n                cudnn_version: state.cudnn_version,\n                mkl_version: state.mkl_version,\n                name: state.name,\n                openblas_version: state.openblas_version,\n                openmpi_version: state.openmpi_version,\n            };\n\n            Object.keys(runtime_environment).forEach(key => {\n                if (runtime_environment[key] === \"\") {\n                    delete runtime_environment[key];\n                }\n            });\n            if (\n                runtime_environment[\"operating_system\"][\"name\"] === \"\" ||\n                runtime_environment[\"operating_system\"][\"version\"] === \"\"\n            ) {\n                delete runtime_environment[\"operating_system\"];\n            }\n\n            postAdvise(state.pipfile, state.pipfileLock, runtime_environment)\n                .then(response => {\n                    dispatch({ type: \"loading\", payload: false });\n                    navigate(\n                        \"/advise/\" + response.data.analysis_id + \"/summary\",\n                    );\n                })\n                .catch(error => {\n                    dispatch({ type: \"loading\", payload: false });\n                    if (error?.response?.status === 400) {\n                        if (\n                            error?.response?.data?.error?.includes(\n                                \"Pipfile.lock\",\n                            )\n                        ) {\n                            dispatch({\n                                type: \"error\",\n                                param: \"pipfileLock\",\n                                payload: error?.response?.data?.error,\n                            });\n                        } else if (\n                            error?.response?.data?.error?.includes(\"Pipfile\")\n                        ) {\n                            dispatch({\n                                type: \"error\",\n                                param: \"pipfile\",\n                                payload: error?.response?.data?.error,\n                            });\n                        }\n                    }\n                });\n        }\n    };\n\n    return (\n        <>\n            <Collapse in={state.lookupType === \"id\"}>\n                <>\n                    <Grid container justifyContent=\"center\">\n                        <Grid item xs={12}>\n                            <Typography\n                                color=\"error\"\n                                variant=\"body1\"\n                                sx={{ minHeight: 30 }}\n                            >\n                                {state.error?.id}\n                            </Typography>\n                        </Grid>\n                        <Grid container item xs={12} spacing={2}>\n                            <Grid item xs={12} md={10}>\n                                <SearchBar\n                                    error={state.error?.id}\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"id\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    helpertext={\"Analysis ID\"}\n                                    type=\"search\"\n                                    boxprops={{ mr: 2 }}\n                                    lefticon={<SearchRoundedIcon />}\n                                    onEnter={handleAnalyze}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => handleAnalyze()}\n                                    sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                                >\n                                    <b>Analyze</b>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        onClick={() =>\n                            dispatch({\n                                type: \"input\",\n                                param: \"lookupType\",\n                                payload: \"manual\",\n                            })\n                        }\n                    >\n                        New Advise\n                    </Button>\n                </>\n            </Collapse>\n\n            <Collapse in={state.lookupType === \"manual\"}>\n                <>\n                    <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n                        Advise Parameters\n                    </Typography>\n                    <Paper\n                        sx={{\n                            backgroundColor: \"white\",\n                            padding: 3,\n                            marginBottom: 5,\n                        }}\n                        variant=\"outlined\"\n                    >\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} md={6}>\n                                <SearchBar\n                                    label={\n                                        state.error?.pipfile\n                                            ? state.error?.pipfile\n                                            : \"Pipfile contents\"\n                                    }\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"pipfile\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    error={state.error?.pipfile !== undefined}\n                                    multiline\n                                    rows={8}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <SearchBar\n                                    label={\n                                        state.error?.pipfileLock\n                                            ? state.error?.pipfileLock\n                                            : \"Pipfile.lock contents\"\n                                    }\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"pipfileLock\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    error={\n                                        state.error?.pipfileLock !== undefined\n                                    }\n                                    multiline\n                                    rows={8}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container mt={4} spacing={2}>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"base_image\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.base_image}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Base Image\"\n                                    required={false}\n                                    helperText=\"A base container image used to run the application.\"\n                                    error={state.error?.base_image}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"cuda_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.cuda_version}\n                                    suggestions={[\"9.0\"]}\n                                    label=\"CUDA Version\"\n                                    required={false}\n                                    help=\"Nvidia CUDA version which the application uses.\"\n                                    error={state.error?.cuda_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"cudnn_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.cudnn_version}\n                                    suggestions={[\"8\"]}\n                                    label=\"cuDNN Version\"\n                                    required={false}\n                                    help=\"NVIDIA cuDNN version used, if any.\"\n                                    error={state.error?.cudnn_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"mkl_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.mkl_version}\n                                    suggestions={[\"2021.1.1\"]}\n                                    label=\"MKL Version\"\n                                    required={false}\n                                    help=\"Intel® Math Kernel Library version used, if any.\"\n                                    error={state.error?.mkl_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"name\",\n                                            payload: e.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.name}\n                                    suggestions={[\"ubi:8-prod\"]}\n                                    label=\"Name\"\n                                    required={true}\n                                    help=\"User defined name of the runtime environment.\"\n                                    error={state.error?.name}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"openblas_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.openblas_version}\n                                    suggestions={[\"0.3.13\"]}\n                                    label=\"OpenBLAS Version\"\n                                    required={false}\n                                    help=\"OpenBLAS version used, if any.\"\n                                    error={state.error?.openblas_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"openmpi_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.openmpi_version}\n                                    suggestions={[\"4.1\"]}\n                                    label=\"Open MPI Version\"\n                                    required={false}\n                                    help=\"Open MPI version used, if any.\"\n                                    error={state.error?.openmpi_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"operating_system_name\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.operating_system_name}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Operating System Name\"\n                                    required={false}\n                                    helperText=\"Operating system name used.\"\n                                    error={state.error?.operating_system_name}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"operating_system_version\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.operating_system_version}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Operating System Version\"\n                                    required={false}\n                                    helperText=\"Operating system version used.\"\n                                    error={\n                                        state.error?.operating_system_version\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"platform\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.platform}\n                                    suggestions={[\"linux-x86_64\"]}\n                                    label=\"Platform\"\n                                    required={false}\n                                    help=\"Platform used - corresponds to sysconfig.get_platform() call.\"\n                                    error={state.error?.platform}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"python_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.python_version}\n                                    suggestions={[\n                                        \"2.7\",\n                                        \"3.6\",\n                                        \"3.7\",\n                                        \"3.8\",\n                                        \"3.9\",\n                                    ]}\n                                    label=\"Python Version\"\n                                    required={false}\n                                    help=\"Python version on which the application runs on.\"\n                                    error={state.error?.python_version}\n                                />\n                            </Grid>\n                            <Grid container item xs={12} spacing={2}>\n                                <Grid item xs={6} md={6}>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        onClick={() =>\n                                            dispatch({\n                                                type: \"input\",\n                                                param: \"lookupType\",\n                                                payload: \"id\",\n                                            })\n                                        }\n                                        sx={{\n                                            minHeight: \"100%\",\n                                            minWidth: \"100%\",\n                                        }}\n                                    >\n                                        <b>Cancel</b>\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <LoadingButton\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => handleAnalyze()}\n                                        loading={state.loading}\n                                        sx={{\n                                            minHeight: \"100%\",\n                                            minWidth: \"100%\",\n                                        }}\n                                    >\n                                        <b>Analyze</b>\n                                    </LoadingButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </>\n            </Collapse>\n        </>\n    );\n};\n","export default function timeSince(date) {\n    var seconds = Math.floor((new Date() - date) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" year\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" month\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" day\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" hour\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" minute\" + (num !== 1 ? \"s\" : \"\");\n    }\n    const num = Math.floor(seconds);\n\n    return num + \" second\" + (num !== 1 ? \"s\" : \"\");\n}\n","import React from \"react\";\n\nexport const NotFound = () => {\n    return <div>404</div>;\n};\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Paper from \"@mui/material/Paper\";\nimport timeSince from \"utils/timeSince\";\nimport ArrowForwardRoundedIcon from \"@mui/icons-material/ArrowForwardRounded\";\nimport { IconButton } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContainerImages } from \"../api\";\nimport { useMemo } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { NotFound } from \"routes/NotFound\";\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nconst headCells = [\n    {\n        id: \"environment_name\",\n        label: \"Image Name\",\n    },\n    {\n        id: \"os_name\",\n        label: \"OS Name\",\n    },\n    {\n        id: \"os_version\",\n        label: \"OS Version\",\n    },\n    {\n        id: \"python_version\",\n        label: \"Python Version\",\n    },\n    {\n        id: \"datetime\",\n        label: \"Last Updated\",\n    },\n];\n\nfunction EnhancedTableHead(props) {\n    const { order, orderBy, onRequestSort } = props;\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            <b>{headCell.label}</b>\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n                <TableCell />\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nexport default function ImageTable() {\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"calories\");\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const navigate = useNavigate();\n\n    const images = useContainerImages({ useErrorBoundary: false });\n\n    const rows = useMemo(() => {\n        if (images?.data?.data?.container_images) {\n            return images?.data?.data?.container_images.map(image => {\n                image[\"date\"] = timeSince(new Date(image.datetime)) + \" ago\";\n                return image;\n            });\n        }\n    }, [images?.data]);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    const handleAnalyze = (package_extract_document_id, environment_name) => {\n        navigate(\"/image/\" + package_extract_document_id, {\n            state: { image_name: environment_name },\n        });\n    };\n\n    if (images.isError) {\n        return <NotFound />;\n    }\n\n    if (!rows) {\n        return (\n            <div className=\"w-full h-48 flex justify-center items-center\">\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <Paper sx={{ width: \"100%\", mb: 2 }}>\n                <TableContainer>\n                    <Table sx={{ minWidth: 750 }} size=\"medium\">\n                        <EnhancedTableHead\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {rows\n                                .slice()\n                                .sort(getComparator(order, orderBy))\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage,\n                                )\n                                .map((row, index) => {\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            tabIndex={-1}\n                                            key={row.environment_name + index}\n                                        >\n                                            <TableCell\n                                                component=\"th\"\n                                                id={labelId}\n                                                scope=\"row\"\n                                            >\n                                                {row.environment_name}\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.os_name}\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.os_version}\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.python_version}\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.date}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <IconButton\n                                                    onClick={() =>\n                                                        handleAnalyze(\n                                                            row.package_extract_document_id,\n                                                            row.environment_name,\n                                                        )\n                                                    }\n                                                >\n                                                    <ArrowForwardRoundedIcon />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: 53 * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </Box>\n    );\n}\n","import { Button, Collapse, Grid, Typography } from \"@material-ui/core\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport React, { useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { postImageAnalyze } from \"../api\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport ImageTable from \"./ImageTable\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"loading\":\n            return { ...state, loading: action.payload };\n        case \"error\":\n            return {\n                ...state,\n                error: { ...state.error, [action.param]: action.payload },\n            };\n        case \"clear-error\":\n            state.error = {};\n            return state;\n        case \"input\":\n            return {\n                ...state,\n                [action.param]: action.payload,\n                error: { ...state.error, [action.param]: undefined },\n            };\n        default:\n            throw new Error(\"Image state dispatch error\");\n    }\n}\n\nexport const initState = {\n    error: {},\n    loading: false,\n    lookupType: \"id\",\n    id: \"\",\n};\n\nexport const ImageSearch = () => {\n    const navigate = useNavigate();\n    const [state, dispatch] = useReducer(reducer, initState);\n\n    const handleAnalyze = async () => {\n        if (state.loading) {\n            return;\n        }\n\n        if (state.id.includes(\"package-extract\")) {\n            navigate(\"/image/\" + state.id);\n            return;\n        }\n\n        dispatch({ type: \"loading\", payload: true });\n\n        postImageAnalyze(state.id)\n            .then(response => {\n                dispatch({ type: \"loading\", payload: false });\n                navigate(\"/image/\" + response.data.analysis_id, {\n                    state: { image_name: state.id },\n                });\n            })\n            .catch(error => {\n                dispatch({ type: \"loading\", payload: false });\n                if (error?.response?.status === 400) {\n                    dispatch({\n                        type: \"error\",\n                        param: \"id\",\n                        payload:\n                            error?.response?.data?.error ??\n                            \"An unknown error occurred\",\n                    });\n                }\n            });\n    };\n\n    return (\n        <>\n            <Collapse in={state.lookupType === \"id\"}>\n                <>\n                    <Grid container justifyContent=\"center\">\n                        <Grid item xs={12}>\n                            <Typography\n                                color=\"error\"\n                                variant=\"body1\"\n                                sx={{ minHeight: 30 }}\n                            >\n                                {state.error?.id}\n                            </Typography>\n                        </Grid>\n                        <Grid container item xs={12} spacing={2}>\n                            <Grid item xs={12} md={10}>\n                                <SearchBar\n                                    error={state.error?.id}\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"id\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    helpertext={\"Analysis ID or image name\"}\n                                    type=\"search\"\n                                    boxprops={{ mr: 2 }}\n                                    lefticon={<SearchRoundedIcon />}\n                                    onEnter={handleAnalyze}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleAnalyze}\n                                    sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                                >\n                                    <b>Analyze</b>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        onClick={() =>\n                            dispatch({\n                                type: \"input\",\n                                param: \"lookupType\",\n                                payload: \"lookup\",\n                            })\n                        }\n                    >\n                        Lookup Thoth Images\n                    </Button>\n                </>\n            </Collapse>\n\n            <Collapse in={state.lookupType === \"lookup\"}>\n                <>\n                    <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n                        Available Thoth Container Images\n                    </Typography>\n                    <ImageTable handleAnalyze={handleAnalyze} />\n                </>\n            </Collapse>\n        </>\n    );\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\n\nexport const postImageAnalyze = image => {\n    return axios.post(\n        THOTH_URL + \"/analyze\",\n        {},\n        {\n            params: {\n                image: image,\n            },\n            headers: {\n                accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        },\n    );\n};\n","// react\nimport React, { useState } from \"react\";\n\n// material-ui\nimport {\n    Typography,\n    Grid,\n    Divider,\n    ToggleButtonGroup,\n    ToggleButton,\n    Box,\n} from \"@material-ui/core\";\n\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\n// local\nimport TabPanel from \"components/Elements/TabPanel\";\nimport logo from \"assets/thoth-logo.png\";\n\nimport { PackageSearch, AdviseCreation, ImageSearch } from \"../components\";\n\nexport const Home = () => {\n    // utility states\n    const [mode, setMode] = useState(\"package\");\n\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n    // change mode view\n    const handleMode = (event, newMode) => {\n        if (newMode) {\n            setMode(newMode);\n        }\n    };\n\n    return (\n        <div\n            style={{\n                maxWidth: \"1000px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n            }}\n        >\n            <Grid container justifyContent=\"center\">\n                <Grid item>\n                    <Box sx={{ marginTop: 10 }}>\n                        <img\n                            alt=\"Thoth Logo\"\n                            src={logo}\n                            height={!matches ? \"auto\" : 300}\n                            width={\"100%\"}\n                        />\n                    </Box>\n                </Grid>\n                <Grid container item justifyContent=\"center\" mt={5} spacing={0}>\n                    <Grid container item sm={12} md={6} align=\"center\" mr={5}>\n                        <Grid item xs={12} align=\"left\" mb={3}>\n                            <Typography variant=\"h4\">\n                                <b>Thoth Search</b>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} align=\"left\">\n                            <Typography variant=\"subtitle1\">\n                                Thoth Search is a tool that runs analysis on a\n                                Python application. It utilizes package metadata\n                                and Thoth Adviser to analyse and recommend a\n                                software stack. You can run analysis on an\n                                entire Python application using a properly\n                                formatted Pipfile and Pipfile.lock.\n                                Alternatively, you can analyse a single Python\n                                package to see what Thoth knows about the\n                                package.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid\n                        item\n                        container\n                        sm={12}\n                        md={5}\n                        direction=\"column\"\n                        justifyContent=\"center\"\n                        spacing={1}\n                    >\n                        {[\n                            [\"One\", \"100k\"],\n                            [\"Two\", \"20%\"],\n                            [\"Three\", \"62\"],\n                            [\"Four\", \"N/A\"],\n                        ].map((stat, i) => {\n                            return (\n                                <Grid\n                                    item\n                                    container\n                                    alignItems=\"center\"\n                                    key={i}\n                                >\n                                    <Grid item xs={6}>\n                                        <Typography variant=\"h6\">\n                                            <b>Thoth Statistic {stat[0]}</b>\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography variant=\"h5\" align=\"right\">\n                                            {stat[1]}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                    <Grid item xs={12} align=\"center\" mt={3} mb={4}>\n                        <ToggleButtonGroup\n                            value={mode}\n                            exclusive\n                            onChange={handleMode}\n                            size={!matches ? \"small\" : \"large\"}\n                        >\n                            <ToggleButton value=\"package\">\n                                <b>package</b>\n                            </ToggleButton>\n                            <ToggleButton value=\"environment\">\n                                <b>environment</b>\n                            </ToggleButton>\n                            <ToggleButton value=\"image\">\n                                <b>image</b>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider sx={{ marginBottom: 3 }} />\n                        <TabPanel value={mode} index=\"package\">\n                            <PackageSearch />\n                        </TabPanel>\n                        <TabPanel value={mode} index=\"environment\">\n                            <AdviseCreation />\n                        </TabPanel>\n                        <TabPanel value={mode} index=\"image\">\n                            <ImageSearch />\n                        </TabPanel>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        height: \"100%\",\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\n/** Card template for metric cards. */\nconst InfoCard = ({ cardMeta, cardBody, cardAction }) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                action={cardAction}\n                title={<Typography variant=\"h5\">{cardMeta.title}</Typography>}\n                subheader={cardMeta.subTitle}\n            />\n            <CardContent>{cardBody}</CardContent>\n        </Card>\n    );\n};\n\nInfoCard.propTypes = {\n    /** card header info */\n    cardMeta: PropTypes.shape({\n        /** card title */\n        title: PropTypes.string.isRequired,\n        /** optional subtitle */\n        subTitle: PropTypes.string,\n    }),\n    /** optional card action component (usually some button) */\n    cardAction: PropTypes.node,\n    /** Card body content */\n    cardBody: PropTypes.node,\n};\n\nexport default InfoCard;\n","import React from \"react\";\n\n// material-ui\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\n// react\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n}));\n\n/**\n * Text with an icon to the right of it.\n */\nconst IconText = ({ text, icon, link, className, ...props }) => {\n    const classes = useStyles();\n    return (\n        <div className={`${classes.root} ${className}`} {...props}>\n            {icon}\n            <Typography href={link ? link : null} variant=\"body2\" marginLeft>\n                {text}\n            </Typography>\n        </div>\n    );\n};\n\nexport default IconText;\n\nIconText.propTypes = {\n    /** The text shown */\n    text: PropTypes.string.isRequired,\n    /** The icon component to be displayed */\n    icon: PropTypes.node.isRequired,\n    /** Optional link if text is selected */\n    link: PropTypes.string,\n    /** additional styling */\n    className: PropTypes.string,\n};\n","import timeSince from \"utils/timeSince\";\n\n/**\n * Given either a date and time, calculated time since that date.\n * This is used to calculate how long ago an Advisor document was generated or has been generating.\n * It is specific to the document formatting\n *\n * @param {string} finished_at - for when the advise document is completed\n * @param {string} started_at - the time at which the document was started (is preceded by finished at)\n * @param {string} datetime - fallback to datetime\n * @returns {string} - English version of date\n */\nexport const calcTime = (finished_at, started_at, datetime) => {\n    // if status says finished\n    if (finished_at) {\n        return \"Advise finished \" + timeSince(new Date(finished_at)) + \" ago.\";\n    }\n    // if status is pending\n    else if (started_at) {\n        return \"Advise started \" + timeSince(new Date(started_at)) + \" ago.\";\n    }\n    // if status is nulled so use metadata end date\n    else if (datetime) {\n        return (\n            \"Advise finished \" + timeSince(new Date(datetime + \"Z\")) + \" ago.\"\n        );\n    } else {\n        return \"Time started/finished not available\";\n    }\n};\n","import React from \"react\";\nimport { Button, Alert } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A custom alert card.\n */\nconst CustomAlert = ({ info, ...props }) => {\n    return (\n        <Alert\n            className={props?.className}\n            action={\n                <Button color=\"inherit\" size=\"small\" href={info?.link}>\n                    DETAILS\n                </Button>\n            }\n            severity={info.type.toLowerCase()}\n        >\n            {info?.message}\n        </Alert>\n    );\n};\n\nCustomAlert.propTypes = {\n    /** The alert content. */\n    info: PropTypes.shape({\n        /** Link to navigate to if alert is actioned on. */\n        link: PropTypes.string.isRequired,\n        /** Text displayed in the alert. */\n        message: PropTypes.string.isRequired,\n        /** Severity (color) of alert: `[\"ERROR\", \"WARNING\", \"INFO\", \"SUCCESS\"]`. */\n        type: PropTypes.oneOf([\"ERROR\", \"WARNING\", \"INFO\", \"SUCCESS\"])\n            .isRequired,\n    }).isRequired,\n    /** The `material-ui` styling classname */\n    className: PropTypes.string,\n};\n\nexport default CustomAlert;\n","// React\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Chip, Button, Collapse } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport FeedRoundedIcon from \"@mui/icons-material/FeedRounded\";\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport { calcTime } from \"utils/calcTime\";\n\n// local\nimport CustomAlert from \"./CustomAlert\";\nimport PropTypes from \"prop-types\";\n\n// component styling\n\nconst useStyles = makeStyles(theme => ({\n    titleRow: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: theme.spacing(1),\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(2),\n    },\n    marginRight: {\n        marginRight: theme.spacing(2),\n    },\n    linksRow: {\n        display: \"flex\",\n        marginBottom: theme.spacing(3),\n        alignItems: \"center\",\n    },\n    alert: {\n        width: \"100%\",\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Displays basic Advise document information and\n * displays any errors, info, or warnings that came up\n * in the document generation.\n */\nexport const AdviseHeader = ({ adviseDocument, logs }) => {\n    const classes = useStyles();\n    const [expandAlerts, setExpandAlerts] = React.useState(false);\n    const [showLogs, setShowLogs] = React.useState(false);\n    const [selectedLine, setSelectedLine] = React.useState();\n\n    // get status of the report\n    const [statusText, statusColor] = useMemo(() => {\n        // if report is done\n        if (adviseDocument?.result?.report) {\n            if (adviseDocument.result.report.ERROR) {\n                return [\"ERROR\", \"error\"];\n            } else {\n                return [\"COMPLETE\", \"success\"];\n            }\n        } else if (adviseDocument?.result?.error) {\n            return [\"ERROR\", \"error\"];\n        }\n        // if report is not done\n        else if (adviseDocument?.status?.state) {\n            return [adviseDocument.status.state.toUpperCase(), \"info\"];\n        } else {\n            return [\"UNKNOWN\", undefined];\n        }\n    }, [adviseDocument]);\n\n    // get alerts from report\n    const alerts = useMemo(() => {\n        if (adviseDocument?.result?.report) {\n            return adviseDocument?.result?.report?.stack_info\n                ? adviseDocument?.result?.report.stack_info.filter(alert => {\n                      return alert.type === \"ERROR\";\n                  })\n                : null;\n        }\n    }, [adviseDocument]);\n\n    return (\n        <div>\n            <Typography variant=\"h4\">\n                <b>\n                    {adviseDocument?.metadata?.document_id ??\n                        adviseDocument?.parameters?.analysis_id}\n                </b>\n            </Typography>\n            <div className={classes.linksRow}>\n                <Chip label={statusText} color={statusColor} />\n                <IconText\n                    className={classes.marginLeft}\n                    text={calcTime(\n                        adviseDocument?.status?.finished_at,\n                        adviseDocument?.status?.started_at,\n                        adviseDocument?.metadata?.datetime,\n                    )}\n                    icon={<AccessTimeIcon />}\n                />\n                <Button\n                    sx={{ marginLeft: 2 }}\n                    onClick={() => setShowLogs(!showLogs)}\n                >\n                    <IconText text=\"Logs\" icon={<FeedRoundedIcon />} />\n                </Button>\n            </div>\n            <Typography variant={\"subtitle2\"}>\n                {adviseDocument?.result?.report?.ERROR ??\n                    adviseDocument?.error ??\n                    adviseDocument?.result?.error_msg}\n            </Typography>\n            {alerts?.length > 0 ? (\n                <div>\n                    <CustomAlert info={alerts[0]} />\n                    <Collapse in={expandAlerts} timeout=\"auto\" unmountOnExit>\n                        {alerts?.slice(1).map((info, i) => {\n                            return (\n                                <CustomAlert\n                                    key={i}\n                                    info={info}\n                                    className={classes.alert}\n                                />\n                            );\n                        })}\n                    </Collapse>\n\n                    <Button\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() => setExpandAlerts(!expandAlerts)}\n                    >\n                        {alerts?.length > 1\n                            ? expandAlerts\n                                ? \"LESS\"\n                                : \"MORE\"\n                            : null}\n                    </Button>\n                </div>\n            ) : null}\n\n            <Collapse in={showLogs}>\n                {logs?.split(\"\\n\").map((line, i) => {\n                    return (\n                        <Typography\n                            key={i}\n                            noWrap={selectedLine !== i}\n                            onClick={() =>\n                                setSelectedLine(\n                                    selectedLine === i ? undefined : i,\n                                )\n                            }\n                            variant=\"body2\"\n                            sx={{\n                                backgroundColor:\n                                    selectedLine === i\n                                        ? \"lightyellow\"\n                                        : i % 2 === 0\n                                        ? \"lightgray\"\n                                        : \"unset\",\n                            }}\n                        >\n                            {line}\n                        </Typography>\n                    );\n                }) ?? \"Advisor log is not available.\"}\n            </Collapse>\n\n            {statusText === \"COMPLETE\" ? (\n                <Typography variant=\"body1\" sx={{ color: \"text.secondary\" }}>\n                    Thoth has added and removed packages from the original\n                    Pipfile.lock, resulting in a <i>new</i> Pipfile.lock. Switch\n                    between the new and old Python environments to see the\n                    differences.\n                </Typography>\n            ) : null}\n        </div>\n    );\n};\n\nAdviseHeader.propTypes = {\n    /** the Advise document id*/\n    adviseDocument: PropTypes.object.isRequired,\n    logs: PropTypes.string,\n};\n","import React from \"react\";\n\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A button group for toggling between old and new dependency graphs.\n * It takes two parameters, a callback function and a state variable.\n */\nexport const CustomCardAction = ({ value, onChange }) => {\n    return (\n        <ToggleButtonGroup\n            value={value}\n            exclusive\n            size=\"small\"\n            onChange={onChange}\n        >\n            <ToggleButton value=\"oldGraph\">Old</ToggleButton>\n            <ToggleButton value=\"newGraph\">New</ToggleButton>\n        </ToggleButtonGroup>\n    );\n};\n\nCustomCardAction.propTypes = {\n    /** The state variable the buttons use to control the active value */\n    value: PropTypes.string.isRequired,\n    /** The callback function that runs when a button is changed */\n    onChange: PropTypes.func.isRequired,\n};\n","function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n","import React from \"react\";\n\nimport {\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Box,\n    TableCell,\n} from \"@material-ui/core\";\n\nimport { visuallyHidden } from \"@material-ui/utils\";\n\nimport PropTypes from \"prop-types\";\n\nconst headCells = [\n    {\n        id: \"name\",\n        numeric: false,\n        label: \"Package\",\n    },\n    {\n        id: \"depth\",\n        numeric: true,\n        label: \"Depth\",\n    },\n    {\n        id: \"license\",\n        numeric: false,\n        label: \"License\",\n    },\n    {\n        id: \"dependencies\",\n        numeric: true,\n        label: \"Direct Dependencies\",\n    },\n];\n\n/**\n * A specific custom table header for packages.\n * It handles sorting individual columns.\n */\nfunction EnhancedTableHead({ order, orderBy, onRequestSort }) {\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding=\"normal\"\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    /** the function used to sort an individual column */\n    onRequestSort: PropTypes.func.isRequired,\n    /** the order in which the column is sorted on*/\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    /** The column in which to order the table by */\n    orderBy: PropTypes.string.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { useState } from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport { AdviseTableView, SelectedPackage } from \"../components\";\nimport PropTypes from \"prop-types\";\n\nexport const SelectedPackageContext = React.createContext();\n\nexport const AdviseDetails = ({ mergedGraph }) => {\n    const [search, setSearch] = useState(\"\");\n    const [selected, setSelected] = useState();\n\n    const handleSearch = event => {\n        setSearch(event.target.value);\n    };\n\n    if (!mergedGraph) {\n        return null;\n    }\n\n    return (\n        <SelectedPackageContext.Provider value={{ selected, setSelected }}>\n            <Grid\n                container\n                spacing={2}\n                justifyContent=\"center\"\n                alignItems=\"flex-start\"\n                mt={2}\n            >\n                <Grid item s={12} md={6}>\n                    <Paper sx={{ padding: 2 }}>\n                        <SearchBar\n                            onChange={handleSearch}\n                            lefticon={<SearchRoundedIcon />}\n                        />\n                        <AdviseTableView\n                            search={search}\n                            filteredGraph={mergedGraph}\n                        />\n                    </Paper>\n                </Grid>\n                <Grid item s={12} md={6}>\n                    {!selected ? (\n                        <Typography variant=\"body1\" align=\"center\">\n                            No package selected\n                        </Typography>\n                    ) : (\n                        <SelectedPackage mergedGraph={mergedGraph} />\n                    )}\n                </Grid>\n            </Grid>\n        </SelectedPackageContext.Provider>\n    );\n};\n\nAdviseDetails.propTypes = {\n    mergedGraph: PropTypes.any,\n};\n","/**\n * Graph node/vertex that hold adjacencies nodes\n * For performance, uses a HashSet instead of array for adjacents.\n */\nexport class Node {\n    constructor(key, value) {\n        this.adjacents = new Set(); // adjacency list\n        this.key = key; // key\n        this.value = value;\n    }\n\n    /**\n     * Add node to adjacency list\n     * Runtime: O(1)\n     * @param {Node} node\n     */\n    addAdjacent(node) {\n        this.adjacents.add(node);\n    }\n\n    /**\n     * Check if a Node is adjacent to other\n     * Runtime: O(1)\n     * @param {Node} node\n     */\n    isAdjacent(node) {\n        return this.adjacents.has(node);\n    }\n\n    /**\n     * Get all adjacent nodes\n     */\n    getAdjacents() {\n        return Array.from(this.adjacents);\n    }\n}\n","import { Node } from \"utils/Node\";\n\n/**\n * Graph data structure implemented with an adjacent list\n */\nexport class Graph {\n    constructor() {\n        this.nodes = new Map();\n    }\n\n    /**\n     * Add a node to the graph.\n     */\n    addVertex(key, value) {\n        if (this.nodes.has(key)) {\n            return this.nodes.get(key);\n        }\n\n        const vertex = new Node(key, value);\n        this.nodes.set(key, vertex);\n        return vertex;\n    }\n\n    /**\n     * Create a connection between the source node and the destination node.\n     * If the nodes don't exist, then it will make them on the fly.\n     */\n    addEdge(source, destination) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n\n        sourceNode.addAdjacent(destinationNode);\n\n        return [sourceNode, destinationNode];\n    }\n\n    /**\n     * True if two nodes are adjacent.\n     */\n    areAdjacents(source, destination) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n\n        if (sourceNode && destinationNode) {\n            return sourceNode.isAdjacent(destinationNode);\n        }\n\n        return false;\n    }\n\n    /**\n     * Generic graph search where we can pass a bfs or dfs\n     */\n    *graphSearch(first, type = \"bfs\") {\n        const visited = new Map();\n        const visitList = [];\n\n        visitList.push(first);\n\n        while (visitList.length !== 0) {\n            const node = type === \"dfs\" ? visitList.pop() : visitList.shift();\n            if (node && !visited.has(node)) {\n                yield node;\n                visited.set(node);\n                node.getAdjacents().forEach(adj => visitList.push(adj));\n            }\n        }\n    }\n\n    /**\n     * Find a path between source and destination\n     * It might not be the optimal path\n     */\n    findPath(source, destination, path = new Map()) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n        const newPath = new Map(path);\n\n        if (!destinationNode || !sourceNode) return [];\n\n        newPath.set(sourceNode);\n\n        if (source === destination) {\n            return Array.from(newPath.keys());\n        }\n\n        // eslint-disable-next-line no-restricted-syntax\n        for (const node of sourceNode.getAdjacents()) {\n            if (!newPath.has(node)) {\n                const nextPath = this.findPath(\n                    node.value,\n                    destination,\n                    newPath,\n                );\n                if (nextPath.length) {\n                    return nextPath;\n                }\n            }\n        }\n\n        return [];\n    }\n\n    findAllNodesOnAllPaths(source, destination, visited = new Map()) {\n        const visitList = [];\n\n        visitList.push(source);\n\n        while (visitList.length !== 0) {\n            const node = visitList.pop();\n            if (node.key === destination) {\n                continue;\n            }\n            if (node && !visited.has(node.key)) {\n                visited.set(node.key, node);\n                node.parents.forEach(parent =>\n                    visitList.push(this.nodes.get(parent)),\n                );\n            }\n        }\n\n        return visited;\n    }\n\n    /**\n     * Find all paths from source to destination\n     */\n    findAllPaths(source, destination, path = new Map()) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n        const newPath = new Map(path);\n\n        if (!destinationNode || !sourceNode) return [];\n\n        newPath.set(sourceNode);\n\n        if (source === destination) {\n            return [Array.from(newPath.keys())];\n        }\n\n        const paths = [];\n        sourceNode.getAdjacents().forEach(node => {\n            if (!newPath.has(node)) {\n                const nextPaths = this.findAllPaths(\n                    node.value.id,\n                    destination,\n                    newPath,\n                );\n                nextPaths.forEach(nextPath => {\n                    paths.push(nextPath);\n                });\n            }\n        });\n        return paths;\n    }\n}\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport {\n    Box,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TablePagination,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\n\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport RemoveRoundedIcon from \"@material-ui/icons/RemoveRounded\";\nimport CircleOutlinedIcon from \"@material-ui/icons/CircleOutlined\";\n\n// utils\nimport { getComparator, stableSort } from \"./utils\";\n\n// local\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport PropTypes from \"prop-types\";\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport { Graph } from \"utils/Graph\";\n\n/**\n * The table cells and total structure specific to\n * python packages.\n */\nexport function AdviseTableView({ search = \"\", filteredGraph }) {\n    const [order, setOrder] = useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"name\");\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(25);\n    const [rows, setRows] = React.useState([]);\n    const { selected, setSelected } = useContext(SelectedPackageContext) ?? {\n        setSelected: () => console.log(\"missing callback\"),\n    };\n\n    // format data\n    useEffect(() => {\n        if (!filteredGraph) {\n            return;\n        }\n\n        setPage(0);\n\n        const newRows = [];\n        filteredGraph.nodes.forEach(node => {\n            if (node.value.depth === -1) {\n                return;\n            }\n            newRows.push({\n                name: node.value.label,\n                key: node.key,\n                warnings: [],\n                depth: node.value?.depth ?? -1,\n                license: node?.value?.metadata?.License,\n                dependencies: node.adjacents.size,\n                change: node.value?.change,\n                summary: node?.value?.metadata?.Summary,\n            });\n        });\n        setRows(newRows);\n    }, [filteredGraph]);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <TableContainer>\n                <Table sx={{ minWidth: 750 }} size=\"medium\">\n                    <EnhancedTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={handleRequestSort}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getComparator(order, orderBy))\n                            .filter(row => row.name.includes(search))\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage,\n                            )\n                            .map((row, index) => {\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                const iconColor =\n                                    row.change === \"removed\"\n                                        ? \"error\"\n                                        : row.change === \"added\"\n                                        ? \"success\"\n                                        : undefined;\n                                return (\n                                    <React.Fragment key={row.name}>\n                                        <TableRow\n                                            hover\n                                            onClick={() => setSelected(row.key)}\n                                            tabIndex={-1}\n                                            selected={selected === row.key}\n                                        >\n                                            <TableCell\n                                                component=\"th\"\n                                                id={labelId}\n                                                scope=\"row\"\n                                            >\n                                                <Box display=\"flex\">\n                                                    {row.change ===\n                                                    \"removed\" ? (\n                                                        <RemoveRoundedIcon\n                                                            color={iconColor}\n                                                        />\n                                                    ) : row.change ===\n                                                      \"added\" ? (\n                                                        <AddRoundedIcon\n                                                            color={iconColor}\n                                                        />\n                                                    ) : (\n                                                        <CircleOutlinedIcon />\n                                                    )}\n                                                    <Typography ml={2}>\n                                                        {row.name}\n                                                    </Typography>\n                                                </Box>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.depth}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.license}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.dependencies}\n                                            </TableCell>\n                                        </TableRow>\n\n                                        <TableRow>\n                                            <TableCell\n                                                style={{\n                                                    paddingBottom: 0,\n                                                    paddingTop: 0,\n                                                }}\n                                                colSpan={6}\n                                            />\n                                        </TableRow>\n                                    </React.Fragment>\n                                );\n                            })}\n                        {emptyRows > 0 && (\n                            <TableRow\n                                style={{\n                                    height: 53 * emptyRows,\n                                }}\n                            >\n                                <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Box>\n    );\n}\n\nAdviseTableView.propTypes = {\n    /** the text value used to filter the cells in the table */\n    search: PropTypes.string,\n    filteredGraph: PropTypes.objectOf(Graph),\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    lockfile: {\n        overflow: \"scroll\",\n        paddingLeft: theme.spacing(1),\n    },\n}));\n\n/**\n * Renders out a Pipfile.lock file and attaches\n * `<a>` tags to package names, which is used to\n *  scroll to certain spot in the lock file\n */\nexport const LockfileView = ({ file }) => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant=\"caption\">\n            <pre>\n                <div\n                    className={classes.lockfile}\n                    dangerouslySetInnerHTML={{\n                        __html: JSON.stringify(file, undefined, 4)?.replaceAll(\n                            new RegExp(\n                                '(\"' +\n                                    Object.keys(file?.default)?.join('\"|\"') +\n                                    '\")',\n                                \"g\",\n                            ),\n                            match => {\n                                return `<a id=\"${match.slice(\n                                    1,\n                                    -1,\n                                )}\">${match}</a>`;\n                            },\n                        ),\n                    }}\n                />\n            </pre>\n        </Typography>\n    );\n};\n\nLockfileView.propTypes = {\n    /** The Pipfile.lock json object */\n    file: PropTypes.shape({ default: PropTypes.object.isRequired }),\n};\n","// react\nimport React from \"react\";\n\nimport { Typography, Grid } from \"@material-ui/core\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport PropTypes from \"prop-types\";\nimport { Node } from \"utils/Node\";\n\n/**\n * Graph hover model appears when you hover over a node on the graph.\n */\nconst Popup = ({ node }) => {\n    return (\n        <div>\n            <Grid container alignItems=\"center\">\n                <Grid item xs={6}>\n                    <Typography variant=\"h6\">\n                        <b>{node.value.id}</b>\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography ml={2} variant=\"body1\">\n                        v{node.value.version ?? \"NaN\"}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography gutterBottom variant=\"body2\">\n                {node.value?.metadata?.Summary ?? \"NaN\"}\n            </Typography>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <IconText\n                        text={node.value?.metadata?.License ?? \"NaN\"}\n                        icon={<GavelIcon />}\n                    />\n                </Grid>\n                <Grid item>\n                    <IconText\n                        ml={2}\n                        text={\n                            node.value?.latestVersion\n                                ? \"Latest version is installed\"\n                                : \"Installed version is NOT the latest.\"\n                        }\n                        icon={<BookmarkIcon />}\n                    />\n                </Grid>\n            </Grid>\n            <Typography variant=\"body2\" mt={2}>\n                {node.value?.justifications?.header}\n            </Typography>\n        </div>\n    );\n};\n\nPopup.propTypes = {\n    node: PropTypes.objectOf(Node),\n};\n\nexport default Popup;\n","// react\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// utils and configs\nimport { options } from \"config\";\n\n// vis-network\nimport { Network, DataSet } from \"vis-network/standalone\";\n\n// material ui\nimport { makeStyles } from \"@material-ui/styles\";\n\n// local\nimport Popup from \"../Popup\";\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport PropTypes from \"prop-types\";\nimport { Graph } from \"utils/Graph\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n    },\n    canvas: {\n        flex: \"1 1 auto\",\n        height: \"50vh\",\n    },\n}));\n\n/**\n * Renders a network graph visualization using `vis-network`.\n */\nconst NetworkGraph = ({ mergedGraph, ...props }) => {\n    const classes = useStyles();\n    const visJsRef = useRef(null);\n    const { selected } = useContext(SelectedPackageContext);\n\n    // create the graph\n    useEffect(() => {\n        if (!selected || !mergedGraph) {\n            return;\n        }\n\n        const selectedNode = mergedGraph.nodes.get(selected);\n\n        let nodes = mergedGraph.findAllNodesOnAllPaths(selectedNode, \"*App\");\n\n        nodes.set(\"*App\", mergedGraph.nodes.get(\"*App\"));\n\n        // convert to vis graph format\n        const convertedNodes = new DataSet();\n        nodes.forEach(value => {\n            // popup element\n            const popup = document.createElement(\"div\");\n            ReactDOM.render(<Popup node={value} />, popup);\n\n            // default colors\n            let color = value.value.color ?? options.nodes.color;\n            let font = undefined;\n\n            // if node is root\n            if (value.key === \"*App\") {\n                color = \"#4fc1ea\";\n                font = { color: \"#4fc1ea\", strokeWidth: 3, size: 20 };\n            }\n            // if selected node\n            else if (value.key === selectedNode.key) {\n                color = \"#f39200\";\n            }\n\n            convertedNodes.add({\n                ...value.value,\n                color: color,\n                title:\n                    value.key === selectedNode.key || value.key === \"*App\"\n                        ? undefined\n                        : popup,\n                font: font,\n            });\n        });\n        const visData = {\n            nodes: convertedNodes,\n            edges: new DataSet(mergedGraph.visEdges),\n        };\n\n        const network =\n            visJsRef.current && new Network(visJsRef.current, visData, options);\n\n        // change curser when hovering and grabbing\n        // Get the canvas HTML element\n        var networkCanvas = document\n            .getElementById(\"mynetwork\")\n            .getElementsByTagName(\"canvas\")[0];\n\n        // changes the curser graphic depedning on where and what the mouse is doing\n        function changeCursor(newCursorStyle) {\n            networkCanvas.style.cursor = newCursorStyle;\n        }\n        network.on(\"hoverNode\", function () {\n            changeCursor(\"grab\");\n        });\n        network.on(\"blurNode\", function () {\n            changeCursor(\"default\");\n        });\n        network.on(\"dragStart\", function () {\n            changeCursor(\"grabbing\");\n        });\n        network.on(\"dragging\", function () {\n            changeCursor(\"grabbing\");\n        });\n        network.on(\"dragEnd\", function () {\n            changeCursor(\"grab\");\n        });\n\n        // fix (stick in place) node when done dragging\n        network.on(\"dragEnd\", function (params) {\n            if (\n                params.nodes.length !== 0 &&\n                !network.isCluster(params.nodes[0])\n            ) {\n                network.editNode(params.nodes[0]);\n            }\n        });\n\n        // hover over node\n        network.on(\"dragEnd\", function (params) {\n            if (\n                params.nodes.length !== 0 &&\n                !network.isCluster(params.nodes[0])\n            ) {\n                network.editNode(params.nodes[0]);\n            }\n        });\n    }, [selected, mergedGraph]);\n\n    return (\n        <div className={`${classes.root} ${props.className}`}>\n            <div ref={visJsRef} id=\"mynetwork\" className={classes.canvas} />\n        </div>\n    );\n};\n\nNetworkGraph.propTypes = {\n    mergedGraph: PropTypes.objectOf(Graph),\n    className: PropTypes.any,\n};\n\nexport default NetworkGraph;\n","// React\nimport React, { useContext, useMemo } from \"react\";\n\n// material-ui\nimport {\n    Typography,\n    Grid,\n    Box,\n    Paper,\n    Link,\n    Button,\n    Stack,\n} from \"@material-ui/core\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport ErrorRoundedIcon from \"@mui/icons-material/ErrorRounded\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport NetworkGraphView from \"../NetworkGraphView\";\n\n// redux\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport PropTypes from \"prop-types\";\nimport { Graph } from \"utils/Graph\";\n\n/**\n * Renders the selected package context variable's data. It will preform\n * a search of the list of packages using the selected package variable.\n */\nexport const SelectedPackage = ({ mergedGraph }) => {\n    const { selected, setSelected } = useContext(SelectedPackageContext);\n\n    const selectedPackage = mergedGraph.nodes.get(selected);\n\n    const dependents = { removed: [], added: [], version: [], unchanged: [] };\n    [...(selectedPackage?.parents ?? [])]\n        .filter(p => p !== \"*App\")\n        .forEach(node => {\n            dependents[mergedGraph.nodes.get(node).value.change].push(node);\n        });\n\n    const justifications = useMemo(() => {\n        const justs = {};\n        selectedPackage?.value?.justifications?.thoth?.forEach(just => {\n            justs[just.type] = [...(justs[just.type] ?? []), just];\n        });\n\n        return justs;\n    }, [selectedPackage]);\n\n    return (\n        <Box>\n            <Paper sx={{ padding: 2 }}>\n                <Grid container alignItems=\"center\" mb={1}>\n                    <Grid item>\n                        <Typography variant=\"h3\">\n                            <b>{selectedPackage?.value?.name}</b>\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography ml={2} variant=\"h6\">\n                            {selectedPackage?.value?.version}\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                {!selectedPackage.value.metadata ? (\n                    <Stack direction=\"row\" alignItems=\"center\">\n                        <ErrorRoundedIcon\n                            color=\"error\"\n                            sx={{ marginRight: \".5rem\" }}\n                        />\n                        <Typography\n                            mb={0}\n                            color=\"error\"\n                            gutterBottom\n                            variant=\"body2\"\n                        >\n                            The package metadata could not be fetched. Package\n                            data will be limited.\n                        </Typography>\n                    </Stack>\n                ) : undefined}\n\n                <Typography gutterBottom variant=\"body1\">\n                    {selectedPackage?.value?.metadata?.Summary}\n                </Typography>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <IconText\n                            text={\n                                selectedPackage?.value?.metadata?.License ??\n                                \"NaN\"\n                            }\n                            icon={<GavelIcon />}\n                        />\n                    </Grid>\n                </Grid>\n            </Paper>\n\n            <Paper sx={{ padding: 2, marginTop: 2 }}>\n                <Typography variant=\"h5\">Thoth Justifications</Typography>\n                <Typography variant=\"body1\" mt={2}>\n                    {selectedPackage?.value?.justifications?.header}\n                </Typography>\n                {selectedPackage?.value?.justifications?.reasons?.length ? (\n                    <ul>\n                        {selectedPackage?.value?.justifications?.reasons.map(\n                            (reason, i) => {\n                                return (\n                                    <li key={i + reason.reason}>\n                                        <Typography variant=\"body1\" mt={2}>\n                                            <Link\n                                                underline=\"hover\"\n                                                onClick={() =>\n                                                    setSelected(reason.package)\n                                                }\n                                            >\n                                                {reason.package}\n                                            </Link>\n                                            {reason.reason}\n                                        </Typography>\n                                    </li>\n                                );\n                            },\n                        )}\n                    </ul>\n                ) : null}\n\n                {Object.entries(justifications).map(([type, reasons]) => {\n                    return (\n                        <React.Fragment key={type}>\n                            <Typography variant=\"h6\" mt={2}>\n                                {type} Justifications\n                            </Typography>\n                            {reasons.map((reason, i) => {\n                                return (\n                                    <Grid\n                                        container\n                                        alignItems=\"center\"\n                                        ml={3}\n                                        key={reason.message + i}\n                                    >\n                                        <Grid item xs={10}>\n                                            <Typography variant=\"body1\" mt={1}>\n                                                {reason.message}\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body2\"\n                                                ml={3}\n                                                mt={0.5}\n                                            >\n                                                {reason.advisory}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Button href={reason.link}>\n                                                READ MORE\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                );\n                            })}\n                        </React.Fragment>\n                    );\n                })}\n            </Paper>\n\n            <Paper sx={{ padding: 2, marginTop: 2 }}>\n                <Typography variant=\"h5\" mb={2}>\n                    Package Origins\n                </Typography>\n                <Typography variant=\"body1\" mb={2}>\n                    {[...(selectedPackage?.parents ?? [])].filter(\n                        p => p !== \"*App\",\n                    )?.length === 0\n                        ? selectedPackage?.value?.label +\n                          \" is not a dependent of any package in this Python environment\"\n                        : \"There are \" +\n                          [...(selectedPackage?.parents ?? [])].filter(\n                              p => p !== \"*App\",\n                          )?.length +\n                          \" package(s) that have \" +\n                          selectedPackage?.value?.label +\n                          \" as a direct dependency. Of those package(s)\"}\n\n                    {Object.keys(dependents).map((change, i) => {\n                        if (dependents[change].length === 0) {\n                            return null;\n                        }\n\n                        return (\n                            <React.Fragment key={change + i}>\n                                {\", \" +\n                                    dependents[change].length +\n                                    (change === \"version\"\n                                        ? \" had a version change \"\n                                        : (dependents[change].length === 1\n                                              ? \" was \"\n                                              : \" were \") + change) +\n                                    \" (\"}\n                                {dependents[change].map((p, i, a) => {\n                                    let text = p;\n                                    if (i !== a.length - 1) {\n                                        text += \", \";\n                                    }\n                                    return (\n                                        <Link\n                                            key={i + text}\n                                            underline=\"hover\"\n                                            onClick={() => setSelected(p)}\n                                        >\n                                            {text}\n                                        </Link>\n                                    );\n                                })}\n                                {\")\"}\n                            </React.Fragment>\n                        );\n                    })}\n                    {\".\"}\n                </Typography>\n\n                <NetworkGraphView mergedGraph={mergedGraph} />\n            </Paper>\n        </Box>\n    );\n};\n\nSelectedPackage.propTypes = {\n    mergedGraph: PropTypes.objectOf(Graph),\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { withStyles, makeStyles } from \"@material-ui/styles\";\nimport { LinearProgress, Typography, Grid } from \"@material-ui/core\";\n\nconst CustomLinearProgress = withStyles(theme => ({\n    root: {\n        height: 10,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor:\n            theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"#1a90ff\",\n    },\n}))(LinearProgress);\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(6,1fr)\",\n        alignItems: \"center\",\n        gridGap: theme.spacing(1),\n    },\n    label: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n    value: {\n        textAlign: \"end\",\n    },\n}));\n\n/**\n * A horizontal bar for showing a percent of a total.\n */\nconst ProgressBar = ({ value, total, label, action }) => {\n    const classes = useStyles();\n    return (\n        <Grid container spacing={1} alignItems=\"center\">\n            <Grid item xs={5}>\n                <Typography variant=\"body2\" className={classes.label}>\n                    {label}\n                </Typography>\n            </Grid>\n            <Grid item xs={2}>\n                <Typography className={classes.value} variant=\"body2\">\n                    {value}\n                </Typography>\n            </Grid>\n            <Grid item xs>\n                <CustomLinearProgress\n                    variant=\"determinate\"\n                    value={total > 0 ? (value / total) * 100 : 0}\n                />\n            </Grid>\n            <Grid item xs={1}>\n                <div>{action ?? null}</div>\n            </Grid>\n        </Grid>\n    );\n};\n\nProgressBar.propTypes = {\n    /** the amount (numerator) for the bar */\n    value: PropTypes.number.isRequired,\n    /** the total (denominator) for the bar */\n    total: PropTypes.number.isRequired,\n    /** optional label */\n    label: PropTypes.string,\n    /** action used on card */\n    action: PropTypes.node,\n};\n\nexport default ProgressBar;\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\n// material-ui\nimport { TransitionGroup } from \"react-transition-group\";\n\nimport {\n    Typography,\n    Divider,\n    List,\n    ListItem,\n    ListItemText,\n    Grid,\n    Collapse,\n    Box,\n    Skeleton,\n} from \"@material-ui/core\";\n\n/**\n * A metric card that displays direct, indirect, and root packages of a dependency graph.\n */\nexport const DependenciesMetric = ({ all, roots }) => {\n    const totalDependencies =\n        (all?.direct ?? 0) + (all?.indirect ?? 0) + (all?.roots ?? 0);\n\n    if (!all || !roots) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                All Packages\n            </Typography>\n            <Divider mb={1} />\n            <ProgressBar\n                value={all?.roots ?? 0}\n                total={totalDependencies}\n                label={\"Root\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={all?.direct ?? 0}\n                total={totalDependencies}\n                label={\"Direct\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={all?.indirect ?? 0}\n                total={totalDependencies}\n                label={\"Indirect\"}\n            />\n            <Typography variant=\"h6\" gutterBottom mt={2}>\n                Root Packages\n            </Typography>\n            <Divider mb={1} />\n            <List component=\"nav\">\n                <TransitionGroup>\n                    {Object.entries(roots ?? {})?.map(([key]) => {\n                        const t =\n                            (roots[key].direct ?? 0) +\n                            (roots[key].indirect ?? 0);\n                        return (\n                            <Collapse key={key}>\n                                <div>\n                                    <ListItem>\n                                        <Grid container alignItems=\"center\">\n                                            <Grid item xs>\n                                                <ListItemText primary={key} />\n                                            </Grid>\n                                            <Grid item xs>\n                                                <Grid\n                                                    container\n                                                    direction=\"column\"\n                                                >\n                                                    <Grid item xs>\n                                                        <ProgressBar\n                                                            value={\n                                                                roots?.[key]\n                                                                    ?.direct ??\n                                                                0\n                                                            }\n                                                            total={t}\n                                                            label={\"Direct\"}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs>\n                                                        <ProgressBar\n                                                            value={\n                                                                roots?.[key]\n                                                                    ?.indirect ??\n                                                                0\n                                                            }\n                                                            total={t}\n                                                            label={\"Indirect\"}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </ListItem>\n                                    <Divider variant={\"middle\"} mb={1} />\n                                </div>\n                            </Collapse>\n                        );\n                    })}\n                </TransitionGroup>\n            </List>\n        </>\n    );\n};\n\nDependenciesMetric.propTypes = {\n    /** summary object of all roots aggregated */\n    all: PropTypes.shape({\n        /** number of dependencies directly related to root packages */\n        direct: PropTypes.number,\n        /** number of dependencies directly or indirectly related to the direct packages*/\n        indirect: PropTypes.number,\n        /** number of dependencies that have no dependents*/\n        roots: PropTypes.number,\n    }),\n    /** an object of key (package name) value pairs of specific roots with direct and indirect parameters for each value */\n    roots: PropTypes.objectOf(\n        PropTypes.shape({\n            /** roots own direct packages */\n            direct: PropTypes.number,\n            /** roots own indirect packages */\n            indirect: PropTypes.number,\n        }),\n    ),\n};\n","import React from \"react\";\n\n// material-ui\nimport { Divider, Collapse, Chip, Grid, Box } from \"@material-ui/core\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\nimport HelpOutlineRoundedIcon from \"@material-ui/icons/HelpOutlineRounded\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A custom list item displaying the number of packages under a particular license.\n */\nconst LicenseGroup = ({ name, metadata, packages, totalLicenses }) => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <Grid container>\n            <Grid item xs={1}>\n                {metadata?.isOsiApproved === null ? (\n                    <HelpOutlineRoundedIcon />\n                ) : metadata?.isOsiApproved ? (\n                    <CheckRoundedIcon />\n                ) : null}\n            </Grid>\n            <Grid item xs>\n                <Box onClick={() => setOpen(!open)}>\n                    <ProgressBar\n                        key={name}\n                        value={Object.keys(packages).length ?? 0}\n                        total={totalLicenses}\n                        label={name}\n                        action={open ? <ExpandLess /> : <ExpandMore />}\n                    />\n                </Box>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <Box my={1}>\n                        {Object.entries(packages)\n                            .sort((a, b) => {\n                                return a[1] - b[1];\n                            })\n                            .map(([k, v]) => {\n                                return (\n                                    <Chip\n                                        key={k}\n                                        sx={{ margin: 0.5 }}\n                                        color={\n                                            v.depth === 0\n                                                ? \"primary\"\n                                                : v.depth === 1\n                                                ? \"secondary\"\n                                                : \"default\"\n                                        }\n                                        label={k}\n                                    />\n                                );\n                            })}\n                    </Box>\n                    <Divider />\n                </Collapse>\n            </Grid>\n        </Grid>\n    );\n};\n\nLicenseGroup.propTypes = {\n    /** The license name */\n    name: PropTypes.string.isRequired,\n    /** License specific infomration */\n    metadata: PropTypes.shape({\n        /** If license is approved by OSI standards */\n        isOsiApproved: PropTypes.bool,\n    }),\n    /** The packages that use this license as an object */\n    packages: PropTypes.objectOf(\n        PropTypes.shape({\n            depth: PropTypes.number.isRequired,\n        }),\n    ).isRequired,\n    /** The total number of packages that have licenses. (used to add a total to the metric bar) */\n    totalLicenses: PropTypes.number.isRequired,\n};\n\nexport default LicenseGroup;\n","// react\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport {\n    Typography,\n    Divider,\n    Collapse,\n    Button,\n    Box,\n    Grid,\n    Skeleton,\n} from \"@material-ui/core\";\nimport { TransitionGroup } from \"react-transition-group\";\n\n// local\nimport LicenseGroup from \"./LicenseGroup\";\n\n/**\n * A metric card that visualizes license data for all packages in the graph.\n */\nexport const LicenseMetric = ({ metric }) => {\n    const [more, setMore] = React.useState(false);\n\n    const licenses = useMemo(\n        () =>\n            Object.entries(metric ?? {}).sort((a, b) => {\n                return Object.keys(b[1]).length - Object.keys(a[1]).length;\n            }),\n        [metric],\n    );\n\n    const totalLicenses = useMemo(\n        () =>\n            Object.entries(metric ?? {}).reduce((sum, [, val]) => {\n                return sum + Object.keys(val.packages).length;\n            }, 0),\n        [metric],\n    );\n\n    if (!metric) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={1}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        OSI\n                    </Typography>\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Dependency Licenses\n                    </Typography>\n                </Grid>\n            </Grid>\n\n            <Divider />\n            <TransitionGroup>\n                {licenses?.slice(0, 10).map(([key, value]) => {\n                    return (\n                        <Collapse key={key}>\n                            <LicenseGroup\n                                name={key}\n                                metadata={value.metadata}\n                                packages={value.packages}\n                                totalLicenses={totalLicenses}\n                            />\n                        </Collapse>\n                    );\n                })}\n            </TransitionGroup>\n\n            <Collapse in={more} timeout=\"auto\" unmountOnExit>\n                <TransitionGroup>\n                    {licenses.slice(10).map(([key, value]) => {\n                        return (\n                            <Collapse key={key}>\n                                <LicenseGroup\n                                    name={key}\n                                    metadata={value.metadata}\n                                    packages={value.packages}\n                                    totalLicenses={totalLicenses}\n                                />\n                            </Collapse>\n                        );\n                    })}\n                </TransitionGroup>\n            </Collapse>\n            <Box textAlign=\"center\">\n                <Button onClick={() => setMore(!more)} color=\"primary\">\n                    {more ? \"Less\" : \"More\"}\n                </Button>\n            </Box>\n        </div>\n    );\n};\n\nLicenseMetric.propTypes = {\n    /** Key value pairs of license names (keys) and license information (values).*/\n    metric: PropTypes.objectOf(\n        PropTypes.shape({\n            metadata: PropTypes.object,\n            packages: PropTypes.object.isRequired,\n        }),\n    ),\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { Typography, Divider, Skeleton, Box } from \"@material-ui/core\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\n/**\n * A metric card that aggregates changes between the initial dependency\n * graph and the Thoth made dependency graph.\n */\nexport const AdviseMetric = ({ metric }) => {\n    const total =\n        metric?.added + metric?.removed + metric?.version + metric?.unchanged;\n    const justTotal = Object.values(metric?.justification ?? {}).reduce(\n        (a, b) => a + b,\n        0,\n    );\n\n    if (!metric) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <Typography variant=\"body2\" gutterBottom>\n                {metric?.build}\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom mt={2}>\n                What Thoth Changed\n            </Typography>\n            <Divider mb={1} />\n            <ProgressBar\n                value={metric?.added ?? 0}\n                total={total}\n                label={\"Added Packages\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={metric?.removed ?? 0}\n                total={total}\n                label={\"Removed Packages\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={metric?.version ?? 0}\n                total={total}\n                label={\"Version Changes\"}\n            />\n            <Typography variant=\"h6\" mt={3} gutterBottom>\n                Justification Counts\n            </Typography>\n            <Divider mb={1} />\n            {Object.entries(metric?.justification ?? {}).map(([key, value]) => {\n                return (\n                    <ProgressBar\n                        key={key}\n                        value={value}\n                        total={justTotal}\n                        label={key}\n                        mb={1}\n                    />\n                );\n            })}\n        </>\n    );\n};\n\nAdviseMetric.propTypes = {\n    /** The metric object info of aggregated data */\n    metric: PropTypes.shape({\n        /** The number of new dependencies */\n        added: PropTypes.number,\n        /** The number of removed dependencies */\n        removed: PropTypes.number,\n        /** The number of dependencies whose version was changed*/\n        version: PropTypes.number,\n        /** The number of dependencies that did not change*/\n        unchanged: PropTypes.number,\n        /** The number Thoth justification (warnings) that were produced */\n        justification: PropTypes.object,\n        /** which build is being displayed (new or old) */\n        build: PropTypes.string,\n    }),\n};\n","import React from \"react\";\nimport InfoCard from \"components/Elements/InfoCard\";\nimport { CustomCardAction } from \"../components\";\nimport PropTypes from \"prop-types\";\nimport {\n    AdviseMetric,\n    DependenciesMetric,\n    LicenseMetric,\n} from \"components/Metrics\";\nimport { Masonry } from \"@mui/lab\";\n\nexport const AdviseSummary = ({ metrics }) => {\n    const [pipfile, setPipfile] = React.useState(\"newGraph\");\n\n    const handlePipfile = (event, newPipfile) => {\n        if (newPipfile?.length) {\n            setPipfile(newPipfile);\n        }\n    };\n\n    return (\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3} mb={3} mt={1}>\n            <div>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Thoth Advise Summary\",\n                    }}\n                    cardBody={<AdviseMetric metric={metrics?.advise} />}\n                />\n            </div>\n            <div>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Dependencies Summary\",\n                    }}\n                    cardBody={\n                        <DependenciesMetric\n                            all={metrics?.[pipfile]?.dependencies?.all}\n                            roots={metrics?.[pipfile]?.dependencies?.roots}\n                        />\n                    }\n                    cardAction={\n                        <CustomCardAction\n                            value={pipfile}\n                            onChange={handlePipfile}\n                        />\n                    }\n                />\n            </div>\n            <div>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Licenses Summary\",\n                    }}\n                    cardBody={\n                        <LicenseMetric metric={metrics?.[pipfile]?.licenses} />\n                    }\n                    cardAction={\n                        <CustomCardAction\n                            value={pipfile}\n                            onChange={handlePipfile}\n                        />\n                    }\n                />\n            </div>\n        </Masonry>\n    );\n};\n\nAdviseSummary.propTypes = {\n    metrics: PropTypes.object,\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\n/**\n * An async function that returns a promise for `{base_url}/advise/python`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseDocument = async analysis_id => {\n    return axios.get(THOTH_URL + \"/advise/python/\" + analysis_id, {\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useAdviseDocument = (analysis_id, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"adviseDocument\", analysis_id],\n        queryFn: () => getAdviseDocument(analysis_id),\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\n/**\n * An async function that returns a promise for `{base_url}/advise/python/logs`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseLogs = async analysis_id => {\n    return axios.get(THOTH_URL + \"/advise/python/\" + analysis_id + \"/log\", {\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useAdviseLogs = (analysis_id, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"adviseLogs\", analysis_id],\n        queryFn: () => getAdviseLogs(analysis_id),\n    });\n};\n","export function formatLockfile(lockfile) {\n    return Object.entries(lockfile.requirements_locked.default).map(\n        ([key, value]) => {\n            return {\n                name: key,\n                version: value.version.replace(\"==\", \"\"),\n                index: \"https://pypi.org/simple\", //TODO no hard code\n                os_name: lockfile.runtime_environment.operating_system.name,\n                os_version:\n                    lockfile.runtime_environment.operating_system.version,\n                python_version: lockfile.runtime_environment.python_version,\n            };\n        },\n    );\n}\n","const whyRemoved = (start, packages) => {\n    const visited = new Map();\n    const visitList = [];\n\n    visitList.push(start);\n\n    const reasonNodes = [];\n\n    while (visitList.length !== 0) {\n        const node = visitList.pop();\n        if (node && !visited.has(node)) {\n            visited.set(node);\n\n            if (node.value.change === \"version\") {\n                reasonNodes.push(node);\n            } else {\n                node.parents.forEach(adj => {\n                    if (adj === \"*App\") {\n                        if (node.key !== start.key) {\n                            reasonNodes.push(node);\n                        }\n                        return;\n                    }\n                    visitList.push(packages.get(adj));\n                });\n            }\n        }\n    }\n\n    return reasonNodes.map(node => {\n        const reason =\n            node.value.change === \"version\"\n                ? \" had its version changed to \" +\n                  node.value.version +\n                  \" from \" +\n                  node.value.oldVersion +\n                  \". Version \" +\n                  node.value.oldVersion +\n                  \" of \" +\n                  node.key +\n                  \" included package \" +\n                  start.value.label +\n                  \" as a dependency, where version \" +\n                  node.value.version +\n                  \" does not. \"\n                : \" did not have any dependents and was removed by the Thoth resolver.\";\n        return {\n            package: node.key,\n            reason: reason,\n        };\n    });\n};\n\nexport const discoverPackageChanges = (nodes, justifications) => {\n    if (!nodes || !justifications) {\n        return;\n    }\n\n    const justifiedPackages = new Map();\n    justifications.forEach(justification => {\n        if (justification.package_name) {\n            if (justifiedPackages.has(justification.package_name)) {\n                justifiedPackages.set(justification.package_name, [\n                    ...justifiedPackages.get(justification.package_name),\n                    justification,\n                ]);\n            } else {\n                justifiedPackages.set(justification.package_name, [\n                    justification,\n                ]);\n            }\n        }\n    });\n\n    nodes.forEach(node => {\n        let justification = {\n            package: node.key,\n        };\n\n        if (node.value.change === \"removed\") {\n            // set header\n            justification.header = `${node.value.label} was ${\n                node.value.depth === 0 ? \"directly\" : \"indirectly\"\n            } removed by Thoth resolver.`;\n\n            // set reasons for removal\n            justification.reasons = whyRemoved(node, nodes);\n\n            // if no reasons for removal\n            if (justification.reasons.length === 0) {\n                justification.header = `${node.value.label} was removed for an unknown reason. The package does not have dependents in the Pipfile.lock.`;\n            }\n        }\n        // if added\n        else if (node.value.change === \"added\") {\n            justification.header = `${node.value.label} was added to the Pipfile.lock by Thoth resolver.`;\n        }\n\n        // if added\n        else if (node.value.change === \"version\") {\n            justification.header = `${node.key} had its version changed from ${node.value.oldVersion} to ${node.value.version}.`;\n        }\n\n        // if unchanged\n        else {\n            justification.header =\n                \"Thoth resolver did not remove or change package \" +\n                node.value.label +\n                \".\";\n        }\n\n        // check if there is a justification for change\n        if (justifiedPackages.has(node.key)) {\n            const reasons = justifiedPackages.get(node.key);\n            justification = {\n                ...justification,\n                thoth: reasons,\n            };\n        }\n\n        node.value.justifications = justification;\n    }, []);\n};\n","import axios from \"axios\";\nimport { THOTH_URL, PYPI_URL } from \"config\";\nimport { useQueries, useQuery } from \"react-query\";\n\nexport const getPackageMetadata = async (\n    name,\n    version,\n    index,\n    os_name,\n    os_version,\n    python_version,\n) => {\n    if (\n        !name ||\n        !version ||\n        !index ||\n        !os_name ||\n        !os_version ||\n        !python_version\n    ) {\n        return;\n    }\n    return await axios.get(THOTH_URL + \"/python/package/version/metadata\", {\n        params: {\n            name: name,\n            version: version,\n            index: index,\n            os_name: os_name,\n            os_version: os_version,\n            python_version: python_version,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const getPackageMetadataPyPi = (name, version) => {\n    return axios\n        .get(PYPI_URL + \"/\" + name + (version ? \"/\" + version : \"\") + \"/json\")\n        .catch(() => {\n            return undefined;\n        });\n};\n\nexport const usePackageMetadata = (\n    name,\n    version,\n    index,\n    os_name,\n    os_version,\n    python_version,\n    config,\n) => {\n    return useQuery({\n        ...config,\n        enabled:\n            !!name &&\n            !!version &&\n            !!index &&\n            !!os_name &&\n            !!os_version &&\n            !!python_version,\n        queryKey: [\n            \"packageMetadata\",\n            name,\n            version,\n            index,\n            os_name,\n            os_version,\n            python_version,\n        ],\n        queryFn: () =>\n            getPackageMetadata(\n                name,\n                version,\n                index,\n                os_name,\n                os_version,\n                python_version,\n            ),\n    });\n};\n\nexport const usePackagesMetadata = (packages, config) => {\n    return useQueries(\n        packages.map(p => {\n            return {\n                ...config,\n                enabled:\n                    !!p.name &&\n                    !!p.version &&\n                    !!p.index &&\n                    !!p.os_name &&\n                    !!p.os_version &&\n                    !!p.python_version,\n                queryKey: [\n                    \"packageMetadata\",\n                    p.name,\n                    p.version,\n                    p.index,\n                    p.os_name,\n                    p.os_version,\n                    p.python_version,\n                ],\n                queryFn: () =>\n                    getPackageMetadata(\n                        p.name,\n                        p.version,\n                        p.index,\n                        p.os_name,\n                        p.os_version,\n                        p.python_version,\n                    ),\n            };\n        }),\n    );\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useAdviseMetric = (graph, adviseDocument) => {\n    const [metric, setMetric] = useState();\n\n    useEffect(() => {\n        if (!graph || !adviseDocument?.metadata) {\n            return;\n        }\n\n        const base = {\n            added: 0,\n            removed: 0,\n            version: 0,\n            unchanged: 0,\n            justification: {},\n            build: null,\n        };\n\n        // package changes\n        graph.nodes.forEach(node => {\n            switch (node.value.change) {\n                case \"added\":\n                    base.added++;\n                    break;\n                case \"removed\":\n                    base.removed++;\n                    break;\n                case \"version\":\n                    base.version++;\n                    break;\n                default:\n                    base.unchanged++;\n            }\n        });\n\n        //build environment\n        base.build = `We have analysed an application stack running on ${adviseDocument.metadata.os_release.name} ${adviseDocument.metadata.os_release.version}, running Python (${adviseDocument.metadata.python.implementation_name}) ${adviseDocument.metadata.python.major}.${adviseDocument.metadata.python.minor}.${adviseDocument.metadata.python.micro}. It was Adviser Job ID ${adviseDocument.metadata.document_id}, by ${adviseDocument.metadata.analyzer} v${adviseDocument.metadata.analyzer_version}.`;\n\n        //justification counts\n        adviseDocument?.result?.report?.products?.[0]?.justification.forEach(\n            justification => {\n                base.justification[justification.type] = base.justification[\n                    justification.type\n                ]\n                    ? base.justification[justification.type] + 1\n                    : 1;\n            },\n        );\n        setMetric(base);\n    }, [graph, adviseDocument]);\n\n    return metric;\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useDependencyMetric = graph => {\n    const [metric, setMetric] = useState();\n\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        let base = {\n            all: {},\n            roots: {},\n        };\n\n        const roots = [];\n        graph.nodes.forEach(value => {\n            if (value.value.depth === 0) {\n                roots.push(value.key);\n            }\n        });\n\n        const visited = new Set();\n\n        // for each starting node\n        roots.forEach(root => {\n            const bfs = graph.graphSearch(graph.nodes.get(root));\n            const visitedOrder = Array.from(bfs);\n\n            visitedOrder.forEach(node => {\n                if (node.key === \"*App\") {\n                    return;\n                }\n\n                if (visited.has(node.value.id)) {\n                    return;\n                } else {\n                    visited.add(node.value.id);\n                }\n\n                const depth =\n                    node.value.depth === 0\n                        ? \"roots\"\n                        : node.value.depth === 1\n                        ? \"direct\"\n                        : \"indirect\";\n\n                // dependency metric\n                base = {\n                    all: {\n                        ...base.all,\n                        [depth]: (base.all[depth] ?? 0) + 1,\n                    },\n                    roots: {\n                        ...base.roots,\n                        [root]: {\n                            ...(base.roots[root] ?? null),\n                            [depth]: (base.roots?.[root]?.[depth] ?? 0) + 1,\n                        },\n                    },\n                };\n            });\n        });\n\n        setMetric(base);\n    }, [graph]);\n\n    return metric;\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useLicenseMetric = graph => {\n    const [metric, setMetric] = useState();\n\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        let base = {};\n\n        const roots = [];\n        graph.nodes.forEach(value => {\n            if (value.value.depth === 0) {\n                roots.push(value.key);\n            }\n        });\n\n        const visited = new Set();\n\n        // for each starting node\n        roots.forEach(root => {\n            const bfs = graph.graphSearch(graph.nodes.get(root));\n            const visitedOrder = Array.from(bfs);\n\n            visitedOrder.forEach(node => {\n                if (node.key === \"*App\") {\n                    return;\n                }\n\n                if (visited.has(node.value.id)) {\n                    return;\n                } else {\n                    visited.add(node.value.id);\n                }\n\n                // licence metric\n                const packageLicenses = [];\n\n                // get general classification\n                node?.value?.metadata?.Classifier?.forEach(classifier => {\n                    const parsed = classifier.split(\" :: \");\n\n                    if (parsed[0] === \"License\") {\n                        if (parsed[1] === \"OSI Approved\") {\n                            packageLicenses.push({\n                                generalLicense:\n                                    parsed?.[2] ?? node.value.metadata.License,\n                                specificLicense: node.value.metadata.License,\n                                isOsiApproved: true,\n                            });\n                        } else {\n                            packageLicenses.push({\n                                generalLicense:\n                                    parsed?.[1] ?? node.value.metadata.License,\n                                specificLicense: node.value.metadata.License,\n                                isOsiApproved: false,\n                            });\n                        }\n                    }\n                });\n\n                if (packageLicenses.length === 0) {\n                    packageLicenses.push({\n                        generalLicense: node?.value?.metadata?.License ?? \"N/A\",\n                        specificLicense:\n                            node?.value?.metadata?.License ?? \"N/A\",\n                        isOsiApproved: null,\n                    });\n                }\n\n                // get specific classification\n                packageLicenses.forEach(license => {\n                    if (!base[license.generalLicense]) {\n                        base[license.generalLicense] = {\n                            packages: {},\n                            metadata: {\n                                isOsiApproved: license.isOsiApproved,\n                            },\n                        };\n                    }\n\n                    base = {\n                        ...base,\n                        [license.generalLicense]: {\n                            ...base[license.generalLicense],\n                            packages: {\n                                ...(base[license.generalLicense].packages ??\n                                    null),\n                                [node.value.label]: {\n                                    depth: node.value.depth,\n                                    specific: license.specificLicense,\n                                },\n                            },\n                        },\n                    };\n                });\n            });\n        });\n\n        setMetric(base);\n    }, [graph]);\n\n    return metric;\n};\n","import { useMemo } from \"react\";\nimport {\n    useLicenseMetric,\n    useDependencyMetric,\n    useAdviseMetric,\n} from \"hooks/metrics\";\n\nexport function useMetrics(oldGraph, newGraph, mergedGraph, adviseDocument) {\n    const adviseMetric = useAdviseMetric(mergedGraph, adviseDocument);\n    const oldDependencyMetric = useDependencyMetric(oldGraph);\n    const newDependencyMetric = useDependencyMetric(newGraph);\n    const oldLicenseMetric = useLicenseMetric(oldGraph);\n    const newLicenseMetric = useLicenseMetric(newGraph);\n\n    return useMemo(() => {\n        const base = {\n            advise: null,\n            oldGraph: { dependencies: null, licenses: null },\n            newGraph: { dependencies: null, licenses: null },\n        };\n\n        if (adviseMetric) {\n            base.advise = adviseMetric;\n        }\n        if (oldDependencyMetric) {\n            base.oldGraph.dependencies = oldDependencyMetric;\n        }\n        if (oldDependencyMetric) {\n            base.oldGraph.licenses = oldLicenseMetric;\n        }\n        if (newDependencyMetric) {\n            base.newGraph.dependencies = newDependencyMetric;\n        }\n        if (newLicenseMetric) {\n            base.newGraph.licenses = newLicenseMetric;\n        }\n\n        return base;\n    }, [\n        adviseMetric,\n        oldDependencyMetric,\n        oldLicenseMetric,\n        newDependencyMetric,\n        newLicenseMetric,\n    ]);\n}\n","import { useMemo } from \"react\";\n\n// utils\nimport { Graph } from \"utils/Graph\";\n\n// api\nimport { usePackagesMetadata } from \"api\";\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useGraph(data = [], knownRoots) {\n    const allMetadata = usePackagesMetadata(data);\n\n    const isLoading = useMemo(() => {\n        return allMetadata.some(query => query.isLoading);\n    }, [allMetadata]);\n\n    return useMemo(() => {\n        if (isLoading) {\n            return;\n        }\n\n        // create graph\n        const tempGraph = new Graph();\n        const notRoot = [];\n\n        // add data to graph\n        allMetadata.forEach(query => {\n            // if could not find metadata\n            if (query.status === \"error\") {\n                const params =\n                    query?.error?.response?.data?.parameters ??\n                    query?.error?.response?.config?.params;\n\n                const value = {\n                    id: params.name.toLowerCase(),\n                    label: params.name + \" \" + params.version,\n                    name: params.name,\n                    version: params.version,\n                    metadata: null,\n                };\n\n                // add package to graph\n                const node = tempGraph.addVertex(value.id, value);\n                node.parents = new Set();\n            }\n            // metadata was found\n            else {\n                const metadata = query.data.data.metadata;\n                const value = {\n                    id: metadata.package_name.toLowerCase(),\n                    label:\n                        metadata.package_name + \" \" + metadata.package_version,\n                    name: metadata.package_name,\n                    version: metadata.package_version,\n                    metadata: metadata.importlib_metadata.metadata,\n                };\n\n                // add package to graph\n                const node = tempGraph.addVertex(value.id, value);\n                node.parents = new Set();\n            }\n        });\n\n        // set edges\n        allMetadata.forEach(query => {\n            if (query.status === \"error\") {\n                return;\n            }\n\n            const currentNode = tempGraph.nodes.get(\n                query.data.data.metadata.package_name.toLowerCase(),\n            );\n\n            Object.keys(query.data.data.metadata.dependencies).forEach(dep => {\n                const adjacentNode = tempGraph.nodes.get(dep);\n\n                // if package exists in lockfile\n                if (adjacentNode) {\n                    // add edge connecting parent and dependency\n                    tempGraph.addEdge(\n                        currentNode.value.id,\n                        adjacentNode.value.id,\n                    );\n                    // set parent\n                    adjacentNode.parents.add(currentNode.value.id);\n                    notRoot.push(adjacentNode.value.id);\n                }\n            });\n        });\n\n        // add app node to graph\n        const app = tempGraph.addVertex(\"*App\", {\n            id: \"*App\",\n            label: \"App\",\n            depth: -1,\n        });\n\n        notRoot.push(\"*App\");\n\n        const visited = new Map();\n        const visitList = [];\n\n        // get roots and connect to app\n        tempGraph.nodes.forEach((value, key, map) => {\n            if (\n                !notRoot.includes(key) ||\n                Object.keys(knownRoots ?? {}).includes(key)\n            ) {\n                const node = map.get(key);\n                node.value.depth = 0;\n                node.parents.add(\"*App\");\n                visitList.push(node);\n                tempGraph.addEdge(app.key, node.key);\n            }\n        });\n\n        // set depth and parent packages using dfs\n        while (visitList.length !== 0) {\n            const node = visitList.pop();\n            if (node && !visited.has(node)) {\n                visited.set(node);\n\n                const adjs = node.getAdjacents();\n\n                for (let i = 0; i < adjs.length; i++) {\n                    // update depth\n                    adjs[i].value.depth = Math.min(\n                        node.value.depth + 1,\n                        adjs[i].value.depth ?? node.value.depth + 2,\n                    );\n                    visitList.push(adjs[i]);\n                }\n            }\n        }\n        return tempGraph;\n    }, [isLoading, knownRoots]);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AdviseNotFound = ({ analysis_id }) => {\n    return <div>`&quot;{analysis_id}&quot;` not found</div>;\n};\n\nAdviseNotFound.propTypes = {\n    analysis_id: PropTypes.string,\n};\n","import * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Layout is used in most of the app and allows for backwards navigation.\n */\nexport const NavigationLayout = ({ children, goHome }) => {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Button\n                onClick={() => {\n                    if (goHome) {\n                        navigate(\"/\");\n                    } else {\n                        navigate(-1);\n                    }\n                }}\n            >\n                go back\n            </Button>\n            <div>{children}</div>\n        </>\n    );\n};\n\nNavigationLayout.propTypes = {\n    children: PropTypes.node,\n    goHome: PropTypes.bool,\n};\n","import React, { useMemo } from \"react\";\nimport { Route, Routes, useParams, Navigate } from \"react-router-dom\";\n\n// layouts\nimport { AdviseLayout } from \"components/Layout\";\n\n// sub-routes\nimport { AdviseSummary } from \"./AdviseSummary\";\nimport { AdviseDetails } from \"./AdviseDetails\";\n\n// feature specific imports\nimport { useAdviseDocument, useAdviseLogs } from \"../api\";\nimport { formatLockfile } from \"utils/formatLockfile\";\nimport { AdviseHeader } from \"../components\";\nimport { useMergeGraphs, useMetrics } from \"../hooks\";\nimport { useGraph } from \"hooks\";\n\n// misc\nimport { CircularProgress } from \"@material-ui/core\";\nimport { AdviseNotFound } from \"./AdviseNotFound\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\n\nexport const AdviseRoutes = () => {\n    // get document id\n    const { analysis_id } = useParams();\n\n    // api get thoth advise document\n    const adviseDocument = useAdviseDocument(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: data => {\n            if (data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n\n    const logs = useAdviseLogs(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: () => {\n            if (adviseDocument.data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n    // format init graph data\n    const initGraphData = useMemo(() => {\n        if (\n            adviseDocument.isSuccess &&\n            adviseDocument.data.data?.result?.parameters?.project\n        ) {\n            return formatLockfile(\n                adviseDocument.data.data.result.parameters.project,\n            );\n        }\n    }, [adviseDocument]);\n\n    // format advise graph data\n    const adviseGraphData = useMemo(() => {\n        if (\n            adviseDocument.isSuccess &&\n            adviseDocument.data.data?.result?.report?.products?.[0]?.project\n        ) {\n            return formatLockfile(\n                adviseDocument.data.data.result.report.products[0].project,\n            );\n        }\n    }, [adviseDocument]);\n\n    // create init graph\n    const initGraph = useGraph(\n        initGraphData ?? [],\n        adviseDocument.data?.data?.result?.parameters?.project?.requirements\n            ?.packages,\n    );\n    const adviseGraph = useGraph(\n        adviseGraphData ?? [],\n        adviseDocument.data?.data?.result?.report?.products?.[0]?.project\n            ?.requirements,\n    );\n\n    // merge graphs based on added, removed, changed packages\n    const mergedGraph = useMergeGraphs(\n        initGraph,\n        adviseGraph,\n        adviseDocument.data?.data,\n    );\n\n    // compute metric data\n    const metrics = useMetrics(\n        initGraph,\n        adviseGraph,\n        mergedGraph,\n        adviseDocument.data?.data,\n    );\n\n    if (adviseDocument.isLoading) {\n        return (\n            <div className=\"w-full h-48 flex justify-center items-center\">\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (!adviseDocument.data) {\n        return (\n            <NavigationLayout>\n                <AdviseNotFound analysis_id={analysis_id} />\n            </NavigationLayout>\n        );\n    }\n\n    return (\n        <NavigationLayout goHome={true}>\n            <AdviseLayout\n                header={\n                    <AdviseHeader\n                        adviseDocument={adviseDocument.data.data}\n                        logs={logs.data?.data?.log}\n                    />\n                }\n            >\n                <Routes>\n                    <Route\n                        path=\"summary\"\n                        element={<AdviseSummary metrics={metrics} />}\n                    />\n                    <Route\n                        path=\"details\"\n                        element={<AdviseDetails mergedGraph={mergedGraph} />}\n                    />\n                    <Route path=\"*\" element={<Navigate to=\"summary\" />} />\n                </Routes>\n            </AdviseLayout>\n        </NavigationLayout>\n    );\n};\n","import { useEffect, useState } from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Graph } from \"utils/Graph\";\nimport { discoverPackageChanges } from \"../utils\";\n\nexport const useMergeGraphs = (oldGraph, newGraph, adviseDocument) => {\n    const [graph, setGraph] = useState();\n    const theme = useTheme();\n\n    useEffect(() => {\n        if (!oldGraph || !newGraph) {\n            return;\n        }\n\n        const visGraphEdges = [];\n        const mergedGraph = new Graph();\n\n        newGraph.nodes.forEach((value, key) => {\n            // get node\n            const combinedNode = newGraph.nodes.get(key);\n\n            // check if added, changed, or unchanged\n            // if added (old graph doesnt have the package)\n            if (!oldGraph.nodes.has(key)) {\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    change: \"added\",\n                    font: {\n                        color: theme.palette.success.main,\n                    },\n                    color: theme.palette.success.main,\n                    dependencies: value.adjacents.size,\n                    lockfile: [\"new\"],\n                };\n            }\n            // if the graph is not new then it is either equal or the version changed\n            else {\n                // set values that wont change\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    dependencies: value.adjacents.size,\n                    lockfile: [\"new\", \"old\"],\n                };\n                // if the nodes are equal (version are the same)\n                if (\n                    value?.value?.metadata?.Version ===\n                    oldGraph.nodes.get(key)?.value?.metadata?.Version\n                ) {\n                    combinedNode.value = {\n                        ...combinedNode.value,\n                        change: \"unchanged\",\n                    };\n                }\n                // if the version changed\n                else {\n                    combinedNode.value = {\n                        ...combinedNode.value,\n                        change: \"version\",\n                        oldVersion:\n                            oldGraph.nodes.get(key)?.value?.metadata?.Version ??\n                            oldGraph.nodes.get(key)?.value?.version,\n                        font: {\n                            color: theme.palette.success.main,\n                        },\n                    };\n\n                    combinedNode.parents = [\n                        ...new Set([\n                            ...combinedNode.parents,\n                            ...(oldGraph.nodes.get(key)?.parents ?? []),\n                        ]),\n                    ];\n\n                    // merge the dependencies because they could be different\n                    oldGraph.nodes\n                        .get(key)\n                        .getAdjacents()\n                        .forEach(item => combinedNode.adjacents.add(item));\n                    newGraph.nodes\n                        .get(key)\n                        .getAdjacents()\n                        .forEach(item => combinedNode.adjacents.add(item));\n                }\n            }\n\n            mergedGraph.nodes.set(key, combinedNode);\n        });\n\n        oldGraph.nodes.forEach((value, key) => {\n            // get node\n            const combinedNode = oldGraph.nodes.get(key);\n\n            // only checking if package was removed\n            if (!newGraph.nodes.has(key)) {\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    change: \"removed\",\n                    label:\n                        value.value.label +\n                        \" \" +\n                        (value?.value?.metadata?.Version ??\n                            value?.value?.version),\n                    font: {\n                        color: theme.palette.error.main,\n                    },\n                    color: theme.palette.error.main,\n                    version:\n                        value?.value?.metadata?.Version ??\n                        value?.value?.version,\n                    dependencies: value.adjacents.size,\n                    license: value?.value?.metadata?.License ?? \"\",\n                    lockfile: [\"old\"],\n                };\n\n                mergedGraph.nodes.set(key, combinedNode);\n            }\n        });\n\n        // add edges from old graph\n        oldGraph.nodes.forEach(value => {\n            // set package edges\n            value.adjacents.forEach(adj => {\n                visGraphEdges.push({\n                    to: value.value.id,\n                    from: adj.value.id,\n                    lockfile: \"old\",\n                });\n            });\n        });\n\n        // add edges from new graph\n        newGraph.nodes.forEach(value => {\n            // set package edges\n            value.adjacents.forEach(adj => {\n                visGraphEdges.push({\n                    to: value.value.id,\n                    from: adj.value.id,\n                    lockfile: \"new\",\n                });\n            });\n        });\n\n        // set justifications\n        discoverPackageChanges(\n            mergedGraph.nodes,\n            adviseDocument?.result?.report?.products?.[0]?.justification,\n        );\n\n        // add edges to merged graph Object\n        mergedGraph[\"visEdges\"] = visGraphEdges;\n\n        setGraph(mergedGraph);\n    }, [oldGraph, newGraph, adviseDocument, theme]);\n\n    return graph;\n};\n","import React, { useContext } from \"react\";\nimport Select from \"@mui/material/Select\";\nimport { Box, MenuItem, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SpecContext } from \"features/package/routes/PackageOverview\";\n\nexport const ParamDropdown = ({ options, type, label, disabled, ...props }) => {\n    const navigate = useNavigate();\n    const { specs, defaultSpecs } = useContext(SpecContext);\n\n    const handleChange = event => {\n        switch (type) {\n            case \"package_version\":\n                navigate(\n                    `/package/${specs.package_name}/${event.target.value}`,\n                );\n                break;\n            case \"index_url\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(event.target.value)}`,\n                );\n                break;\n            case \"os_name\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url,\n                    )}/${event.target.value}`,\n                );\n\n                break;\n            case \"os_version\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url,\n                    )}/${specs.os_name ?? defaultSpecs.os_name}/${\n                        event.target.value\n                    }`,\n                );\n                break;\n            case \"python_version\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url,\n                    )}/${specs.os_name ?? defaultSpecs.os_name}/${\n                        specs.os_version ?? defaultSpecs.os_version\n                    }/${event.target.value}`,\n                );\n                break;\n        }\n    };\n\n    return (\n        <Box {...props}>\n            <Typography variant=\"body2\">{label}</Typography>\n            <Select\n                displayEmpty\n                fullWidth\n                value={specs[type] ?? \"\"}\n                onChange={handleChange}\n                size=\"small\"\n                variant=\"outlined\"\n                disabled={disabled}\n                renderValue={value => {\n                    if (!value) {\n                        return (\n                            <em style={{ color: \"grey\" }}>\n                                {defaultSpecs?.[type] ?? label}\n                            </em>\n                        );\n                    } else {\n                        return value;\n                    }\n                }}\n            >\n                <MenuItem disabled value=\"\">\n                    <em>{label}</em>\n                </MenuItem>\n                {options.map(option => {\n                    return (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.value}\n                        </MenuItem>\n                    );\n                })}\n            </Select>\n        </Box>\n    );\n};\n\nParamDropdown.propTypes = {\n    options: PropTypes.array.isRequired,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    disabled: PropTypes.bool,\n    props: PropTypes.any,\n};\n","import React, { useContext, useMemo, useState } from \"react\";\n\n// material-ui\nimport { Box, Grid, IconButton, Skeleton, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport PropTypes from \"prop-types\";\nimport { ParamDropdown } from \"../ParamDropdown\";\nimport { SpecContext } from \"../../routes/PackageOverview\";\n\n// component styling\nconst useStyles = makeStyles(theme => ({\n    titleRow: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(2),\n    },\n    linksRow: {\n        display: \"flex\",\n    },\n}));\n\n/**\n * A header for package metadata.\n */\nexport const PackageHeader = ({\n    metadata,\n    allVersions = [],\n    allEnvironments = [],\n}) => {\n    const classes = useStyles();\n    const { defaultSpecs, specs } = useContext(SpecContext);\n    const [showEnvParams, setShowEnvParams] = useState(false);\n\n    const versionOptions = useMemo(() => {\n        const dups = new Set();\n        return allVersions\n            .filter(version => {\n                if (!dups.has(version.package_version)) {\n                    dups.add(version.package_version);\n                    return true;\n                }\n                return false;\n            })\n            .map(version => {\n                return {\n                    value: version.package_version,\n                };\n            })\n            .sort((a, b) => (a.value.split(\".\") > b.value.split(\".\") ? 1 : -1));\n    }, [allVersions]);\n\n    const indexUrlOptions = useMemo(() => {\n        const dups = new Set();\n        return allVersions\n            .filter(version => {\n                if (specs.package_version) {\n                    return specs.package_version === version.package_version;\n                } else {\n                    return (\n                        defaultSpecs.package_version === version.package_version\n                    );\n                }\n            })\n            .filter(version => {\n                if (!dups.has(version.index_url)) {\n                    dups.add(version.index_url);\n                    return true;\n                }\n                return false;\n            })\n            .map(version => {\n                return {\n                    value: version.index_url,\n                };\n            });\n    }, [allVersions]);\n\n    const [osNameOptions, osVersionOptions, pythonVersionOptions] =\n        useMemo(() => {\n            const name = allEnvironments.map(env => {\n                return {\n                    value: env.os_name,\n                };\n            });\n            const version = allEnvironments\n                .filter(env => !specs.os_name || specs.os_name === env.os_name)\n                .map(env => {\n                    return {\n                        value: env.os_version,\n                    };\n                });\n            const pyVersion = allEnvironments\n                .filter(\n                    env =>\n                        (!specs.os_name || specs.os_name === env.os_name) &&\n                        (!specs.os_version ||\n                            specs.os_version === env.os_version),\n                )\n                .map(env => {\n                    return {\n                        value: env.python_version,\n                    };\n                });\n            return [name, version, pyVersion];\n        }, [allEnvironments, specs]);\n\n    if (!metadata) {\n        return (\n            <Box data-testid=\"package-header-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div>\n            <Grid container alignItems=\"flex-end\" spacing={1}>\n                <Grid item>\n                    <Typography variant=\"h4\" mr={2}>\n                        <b>{metadata?.Name}</b>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <ParamDropdown\n                        options={versionOptions ?? []}\n                        type=\"package_version\"\n                        label={\"Version\"}\n                    />\n                </Grid>\n                <Grid item>\n                    <ParamDropdown\n                        options={indexUrlOptions ?? []}\n                        type=\"index_url\"\n                        label={\"Index URL\"}\n                        disabled={specs.package_version === undefined}\n                    />\n                </Grid>\n                {showEnvParams ? (\n                    <React.Fragment>\n                        <Grid item>\n                            <ParamDropdown\n                                options={osNameOptions ?? []}\n                                type=\"os_name\"\n                                label={\"OS Name\"}\n                                disabled={specs.index_url === undefined}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ParamDropdown\n                                options={osVersionOptions ?? []}\n                                type=\"os_version\"\n                                label={\"OS Version\"}\n                                disabled={specs.os_name === undefined}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ParamDropdown\n                                options={pythonVersionOptions ?? []}\n                                type=\"python_version\"\n                                label={\"Python Version\"}\n                                disabled={specs.os_version === undefined}\n                            />\n                        </Grid>\n                    </React.Fragment>\n                ) : null}\n                <Grid item xs={1}>\n                    <IconButton\n                        onClick={() => setShowEnvParams(!showEnvParams)}\n                        data-testid=\"package-header-expand-button\"\n                    >\n                        {showEnvParams ? (\n                            <ArrowLeftIcon fontSize=\"large\" />\n                        ) : (\n                            <ArrowRightIcon fontSize=\"large\" />\n                        )}\n                    </IconButton>\n                </Grid>\n            </Grid>\n\n            <Typography gutterBottom variant=\"body1\" mt={2}>\n                {metadata?.Summary ?? \"NaN\"}\n            </Typography>\n            <div className={classes.linksRow}>\n                <IconText\n                    text={metadata?.License ?? \"NaN\"}\n                    icon={<GavelIcon />}\n                />\n            </div>\n        </div>\n    );\n};\n\nPackageHeader.propTypes = {\n    /** Package metadata object.*/\n    metadata: PropTypes.shape({\n        /** Name of package. */\n        Name: PropTypes.string.isRequired,\n        /** Description of package. */\n        Summary: PropTypes.string,\n        /** License of package */\n        License: PropTypes.string,\n    }),\n    /** list of all versions of a package **/\n    allVersions: PropTypes.array,\n    /** list of all environments of a package, version, index **/\n    allEnvironments: PropTypes.array,\n};\n","import { Button, Grid, Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const VersionDropdown = ({ node }) => {\n    const [open, setOpen] = React.useState(null);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const navigate = useNavigate();\n\n    const versionOptions = useMemo(() => {\n        const versionOptions = {};\n        const distribution = [0, 0];\n        const noDup = new Set();\n        node.versions.forEach(version => {\n            const split = version.split(\".\");\n            const key = split[0] + \".\" + (split[1] ?? \"\");\n\n            if (versionOptions[key] === undefined) {\n                versionOptions[key] = [];\n                distribution[0] += 1;\n            }\n            if (!noDup.has(version)) {\n                versionOptions[key].push(version);\n                distribution[1] += 1;\n                noDup.add(version);\n            }\n        });\n\n        // check if there are too many buckets\n        if (distribution[0] / distribution[1] > 0.25) {\n            // merge buckets\n            const buckets = Math.ceil(distribution[0] * 0.25);\n            const fixedVersionOptions = {};\n            let currentKey;\n            Object.keys(versionOptions).forEach((key, index, array) => {\n                if (index % buckets === 0) {\n                    currentKey = `${key} - ${\n                        array[index + buckets - 1] ?? array.at(-1)\n                    }`;\n                    fixedVersionOptions[currentKey] = [];\n                }\n                fixedVersionOptions[currentKey].push(\n                    ...versionOptions[array[index]],\n                );\n            });\n            return fixedVersionOptions;\n        }\n\n        return versionOptions;\n    }, [node]);\n\n    return (\n        <div>\n            <Button\n                onClick={event => {\n                    setOpen(node.name);\n                    setAnchorEl(event.currentTarget);\n                }}\n                variant=\"outlined\"\n                endIcon={<KeyboardArrowDownIcon />}\n            >\n                {node.specifier ?? \"ANY\"}\n            </Button>\n            <Menu\n                open={open === node.name}\n                anchorEl={anchorEl}\n                onClose={() => {\n                    setOpen(undefined);\n                    setAnchorEl(null);\n                }}\n                PaperProps={{\n                    style: {\n                        maxHeight: \"40%\",\n                        maxWidth: \"50%\",\n                    },\n                }}\n            >\n                <MenuItem disabled={true}>\n                    Select a version to navigate to:\n                </MenuItem>\n                <Grid container alignContent=\"flex-start\">\n                    {Object.entries(versionOptions).map(([key, value]) => {\n                        return (\n                            <Grid item xs key={key}>\n                                <MenuItem mt={2} disabled divider>\n                                    {key}\n                                </MenuItem>\n                                {value.map(version => {\n                                    return (\n                                        <MenuItem\n                                            key={version}\n                                            onClick={() =>\n                                                navigate(\n                                                    `/package/${node.name}/${version}`,\n                                                )\n                                            }\n                                        >\n                                            <Typography variant={\"body2\"}>\n                                                {version}\n                                            </Typography>\n                                        </MenuItem>\n                                    );\n                                })}\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </Menu>\n        </div>\n    );\n};\n\nVersionDropdown.propTypes = {\n    node: PropTypes.shape({\n        name: PropTypes.string,\n        versions: PropTypes.array,\n        specifier: PropTypes.string,\n    }),\n};\n","// react\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport InfoCard from \"components/Elements/InfoCard\";\nimport { Box, Divider, Grid, Skeleton, Typography } from \"@material-ui/core\";\nimport { VersionDropdown } from \"./VersionDropdown\";\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const PackageDependencies = ({ graph }) => {\n    const metric = useMemo(() => {\n        if (!graph) {\n            return;\n        }\n\n        const bfs = graph.graphSearch(graph.nodes.get(\"*App\"));\n        const visitedOrder = Array.from(bfs);\n\n        const metric = [];\n\n        visitedOrder.forEach(node => {\n            if (node.key !== \"*App\" && !node.value.metadata) {\n                metric.push({\n                    name: node.value.label,\n                    versions: node.value.versions,\n                    specifier: node.value.specifier,\n                    extra: node.value.extra,\n                });\n            }\n        });\n\n        return metric;\n    }, [graph]);\n\n    if (!metric) {\n        return (\n            <Box data-testid=\"package-dependencies-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <InfoCard\n            cardMeta={{\n                title: \"Dependencies\",\n            }}\n            cardBody={\n                <div data-testid=\"package-dependencies-loaded\">\n                    <Grid container>\n                        <Grid item xs>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Package\n                            </Typography>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Versions\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Extra\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Divider />\n                    <Grid container rowSpacing={2} mt={1}>\n                        {metric.map(node => {\n                            return (\n                                <Grid container item xs={12} key={node.name}>\n                                    <Grid item xs>\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            {node.name}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <VersionDropdown node={node} />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            {node.extra?.join(\", \")}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                </div>\n            }\n        />\n    );\n};\n\nPackageDependencies.propTypes = {\n    /** An object holding metric info. */\n    graph: PropTypes.shape({\n        graphSearch: PropTypes.func,\n        nodes: PropTypes.instanceOf(Map),\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const PackageNotFound = ({ package_name, package_version }) => {\n    return (\n        <div>\n            `&quot;{package_name}\n            {package_version ? \" \" + package_version : \"\"}&quot;` not found\n        </div>\n    );\n};\n\nPackageNotFound.propTypes = {\n    package_name: PropTypes.string,\n    package_version: PropTypes.string,\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography, Divider } from \"@material-ui/core\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\nconst useStyles = makeStyles(theme => ({\n    bar: {\n        marginBottom: theme.spacing(1),\n    },\n    marginBottom: {\n        marginBottom: theme.spacing(2),\n    },\n}));\n\n/**\n * A metric card showing a package's (and its dependencies') licenses\n */\nexport const PackageLicenses = ({ metric }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"body2\" gutterBottom>\n                <b>License</b>\n            </Typography>\n            <Divider />\n            <Typography className={classes.marginBottom} variant=\"h6\">\n                {metric.root}\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom>\n                <b>Dependency Licenses</b>\n            </Typography>\n            <Divider />\n\n            {Object.entries(metric?.all ?? {}).map(([key, value]) => {\n                return (\n                    <ProgressBar\n                        key={key}\n                        value={Object.keys(value).length ?? 0}\n                        total={metric.total}\n                        label={key}\n                        className={classes.bar}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nPackageLicenses.propTypes = {\n    metric: PropTypes.shape({\n        /** The total number of dependencies of the package */\n        total: PropTypes.number,\n        /** The license of the root package */\n        root: PropTypes.string,\n        /** key value object of package's dependencies' licenses\n         *\n         * ```\n         * all: {\n         *     MIT: {\n         *\n         *     }\n         * }\n         * ```\n         * */\n        all: PropTypes.object,\n    }).isRequired,\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery, useInfiniteQuery } from \"react-query\";\n\nexport const getPackageVersions = async (name, page = 0, per_page = 100) => {\n    if (!name) {\n        return;\n    }\n\n    return axios.get(THOTH_URL + \"/python/package/versions\", {\n        params: {\n            name: name,\n            page: page,\n            per_page: per_page,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const usePackageVersions = (name, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"packageVersions\", name],\n        queryFn: () => getPackageVersions(name),\n    });\n};\n\nexport const useInfinitePackageVersions = (name, config) => {\n    return useInfiniteQuery({\n        ...config,\n        queryKey: [\"packageVersions\", name],\n        queryFn: input => {\n            return getPackageVersions(name, input.pageParam);\n        },\n        getNextPageParam: lastPage => {\n            return lastPage.data.versions.length === 0\n                ? undefined\n                : lastPage.data.parameters.page + 1;\n        },\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\nexport const getPackageEnvironments = async (name, version, index) => {\n    if (!name || !version || !index) {\n        return;\n    }\n\n    return axios.get(THOTH_URL + \"/python/package/version/environments\", {\n        params: {\n            name: name,\n            version: version,\n            index: index,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const usePackageEnvironments = (name, version, index, config) => {\n    return useQuery({\n        ...config,\n        enabled: !!name && !!version && !!index,\n        queryKey: [\"packageEnvironments\", name, version, index],\n        queryFn: () => getPackageEnvironments(name, version, index),\n    });\n};\n","import { useEffect, useState } from \"react\";\nimport { useInfinitePackageVersions } from \"../api\";\n\nexport const useAllVersions = package_name => {\n    const versions = useInfinitePackageVersions(package_name);\n    const [allVersions, setAllVersions] = useState([]);\n\n    useEffect(() => {\n        if (versions.isSuccess) {\n            // if has a next page, and is not currently fetching a page\n            if (versions.hasNextPage && !versions.isFetchingNextPage) {\n                versions.fetchNextPage().then();\n            } else if (!versions.hasNextPage && !versions.isFetchingNextPage) {\n                let merged = [];\n                versions.data.pages.forEach(page => {\n                    merged = [...merged, ...page.data.versions];\n                });\n                if (merged.length > 0) {\n                    merged = merged.reverse();\n                    setAllVersions(merged);\n                } else {\n                    setAllVersions(undefined);\n                }\n            }\n        }\n    }, [versions.data]);\n\n    return allVersions;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const ErrorPage = ({ message, type, reason }) => {\n    return (\n        <div>\n            <p>\n                {type}\n                {\": \"}\n                {message}\n            </p>\n            <p>{reason}</p>\n        </div>\n    );\n};\n\nErrorPage.propTypes = {\n    message: PropTypes.string,\n    type: PropTypes.any,\n    reason: PropTypes.string,\n};\n","// React\nimport React, { useEffect, useMemo, useState } from \"react\";\n\n// local\nimport { PackageDependencies, PackageHeader } from \"../components\";\n\n// material-ui\nimport { CircularProgress, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { usePackageMetadata } from \"api\";\nimport { PackageNotFound } from \"./PackageNotFound\";\nimport { useAllVersions, useSimpleGraph } from \"../hooks\";\nimport { usePackageEnvironments } from \"../api\";\nimport { ErrorPage } from \"../../../routes/ErrorPage\";\n\n// component styling\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: \"95%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(1),\n    },\n}));\n\nexport const SpecContext = React.createContext({});\n\n// The page that displays all analysis data\nexport const PackageOverview = () => {\n    const classes = useStyles();\n    const params = useParams();\n    const [defaultSpecs, setDefaultSpecs] = useState({\n        package_version: undefined,\n        index_url: undefined,\n        os_name: undefined,\n        os_version: undefined,\n        python_version: undefined,\n    });\n\n    // what is on the url params\n    const specs = useMemo(() => {\n        return {\n            package_name: params.package_name,\n            package_version: params?.package_version,\n            index_url: params?.index_url\n                ? decodeURIComponent(params.index_url)\n                : undefined,\n            os_name: params?.os_name,\n            os_version: params?.os_version,\n            python_version: params?.python_version,\n        };\n    }, [params]);\n\n    // get all pages of versions/indexes and merge them together\n    const allVersions = useAllVersions(specs.package_name);\n\n    // get environments for specific package, version, index\n    const allEnvironments = usePackageEnvironments(\n        specs.package_name,\n        specs.package_version ?? defaultSpecs.package_version,\n        specs.index_url ?? defaultSpecs.index_url,\n        { useErrorBoundary: false },\n    );\n\n    // some params are optional but still need a default value\n    useEffect(() => {\n        let d = {\n            package_version: undefined,\n            index_url: undefined,\n            os_name: undefined,\n            os_version: undefined,\n            python_version: undefined,\n        };\n\n        // get default package version and index\n        // needs package name and versions list\n        if (specs.package_name && allVersions && allVersions.length > 0) {\n            d.package_version = allVersions.at(0).package_version;\n            d.index_url = allVersions.at(0).index_url;\n        }\n\n        // get default environment\n        // needs list of environments\n        if (\n            allEnvironments.data &&\n            allEnvironments.data.data.environments.length > 0\n        ) {\n            const filtered = allEnvironments.data.data.environments.filter(\n                env =>\n                    (!specs.os_name || specs.os_name === env.os_name) &&\n                    (!specs.os_version || specs.os_version === env.os_version),\n            );\n            if (filtered.length > 0) {\n                d.os_name = filtered.at(0).os_name;\n                d.os_version = filtered.at(0).os_version;\n                d.python_version = filtered.at(0).python_version;\n            }\n        }\n\n        if (Object.entries(defaultSpecs).some(([key, val]) => d[key] !== val)) {\n            setDefaultSpecs(d);\n        }\n    }, [allVersions, allEnvironments, specs]);\n\n    // get package metadata\n    const metadata = usePackageMetadata(\n        specs.package_name,\n        specs.package_version ?? defaultSpecs.package_version,\n        specs.index_url ?? defaultSpecs.index_url,\n        specs.os_name ?? defaultSpecs.os_name,\n        specs.os_version ?? defaultSpecs.os_version,\n        specs.python_version ?? defaultSpecs.python_version,\n        { useErrorBoundary: false },\n    );\n\n    const graph = useSimpleGraph(metadata);\n\n    if (metadata.isLoading || allVersions?.length === 0) {\n        return (\n            <div\n                className=\"w-full h-48 flex justify-center items-center\"\n                data-testid=\"loading\"\n            >\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (!metadata.data) {\n        if (metadata?.error?.response?.data?.error) {\n            return (\n                <ErrorPage\n                    message={metadata.error.response.data.error}\n                    type={metadata.error.response.status}\n                    reason={`${\n                        metadata?.error?.config?.url\n                    } failed with params ${JSON.stringify(\n                        metadata?.error?.config?.params,\n                    )}`}\n                />\n            );\n        }\n        return (\n            <PackageNotFound\n                package_name={params.package_name}\n                package_version={params.package_version ?? \"\"}\n            />\n        );\n    }\n\n    return (\n        <SpecContext.Provider value={{ specs, defaultSpecs }}>\n            <Grid container className={classes.root}>\n                <Grid item xs={12} mb={3}>\n                    <PackageHeader\n                        metadata={\n                            metadata.data.data.metadata.importlib_metadata\n                                .metadata\n                        }\n                        allVersions={allVersions}\n                        allEnvironments={allEnvironments.data.data.environments}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <PackageDependencies graph={graph} />\n                </Grid>\n            </Grid>\n        </SpecContext.Provider>\n    );\n};\n\nPackageOverview.propTypes = {\n    metadata: PropTypes.object,\n};\n","import { useEffect, useState } from \"react\";\n\n// utils\nimport { Graph } from \"utils/Graph\";\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useSimpleGraph(metadata) {\n    const [graph, setGraph] = useState();\n\n    useEffect(() => {\n        if (metadata.status !== \"success\") {\n            return;\n        }\n\n        // create graph\n        const tempGraph = new Graph();\n\n        // add app node to graph\n        const app = tempGraph.addVertex(\"*App\", {\n            id: \"*App\",\n            label: \"App\",\n            depth: -1,\n        });\n\n        const root = tempGraph.addVertex(\n            metadata.data.data.metadata.package_name.toLowerCase(),\n            {\n                id: metadata.data.data.metadata.package_name.toLowerCase(),\n                label: metadata.data.data.metadata.package_name,\n                metadata:\n                    metadata.data.data.metadata.importlib_metadata.metadata,\n                depth: 0,\n            },\n        );\n\n        root.parents = new Set();\n        root.parents.add(\"*App\");\n        tempGraph.addEdge(app.key, root.key);\n\n        // add deps to graph\n        Object.entries(metadata.data.data.metadata.dependencies).forEach(\n            ([name, value]) => {\n                // add package to graph\n                const node = tempGraph.addVertex(name.toLowerCase(), {\n                    id: name.toLowerCase(),\n                    label: name,\n                    metadata: null,\n                    versions: value.versions,\n                    specifier: value.specifier,\n                    extra: value.extra,\n                    depth: 1,\n                });\n                node.parents = new Set();\n\n                tempGraph.addEdge(root.key, node.key);\n\n                // set parent\n                node.parents.add(root.key);\n            },\n        );\n\n        setGraph(tempGraph);\n    }, [metadata.data]);\n\n    return graph;\n}\n","// React\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport { PackageOverview } from \"./PackageOverview\";\nimport { NotFound } from \"routes/NotFound\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\n\n// The page that displays all analysis data\nexport const PackageRoutes = () => {\n    return (\n        <NavigationLayout>\n            <Routes>\n                <Route\n                    path=\"/:package_version/:index_url/:os_name/:os_version/:python_version\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url/:os_name\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url/:os_name/:os_version\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url\"\n                    element={<PackageOverview />}\n                />\n                <Route path=\"/:package_version\" element={<PackageOverview />} />\n                <Route path=\"/\" element={<PackageOverview />} />\n                <Route path=\"*\" status={404} element={<NotFound />} />\n            </Routes>\n        </NavigationLayout>\n    );\n};\n","// React\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { Typography, Chip, Button, Collapse } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport FeedRoundedIcon from \"@mui/icons-material/FeedRounded\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport { calcTime } from \"utils/calcTime\";\n\n// component styling\nconst useStyles = makeStyles(theme => ({\n    titleRow: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: theme.spacing(1),\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(2),\n    },\n    marginRight: {\n        marginRight: theme.spacing(2),\n    },\n    linksRow: {\n        display: \"flex\",\n        marginBottom: theme.spacing(3),\n        alignItems: \"center\",\n    },\n    alert: {\n        width: \"100%\",\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Displays basic Advise document information and\n * displays any errors, info, or warnings that came up\n * in the document generation.\n */\nexport const ImageHeader = ({ imageDocument, logs }) => {\n    const classes = useStyles();\n    const [showLogs, setShowLogs] = React.useState(false);\n    const [selectedLine, setSelectedLine] = React.useState();\n\n    // get status of the report\n    const [statusText, statusColor] = useMemo(() => {\n        // if report is done\n        if (imageDocument?.result) {\n            if (imageDocument.result.error) {\n                return [\"ERROR\", \"error\"];\n            } else {\n                return [\"COMPLETE\", \"success\"];\n            }\n        }\n        // if report is not done\n        else if (imageDocument?.status?.state) {\n            return [imageDocument.status.state.toUpperCase(), \"info\"];\n        } else {\n            return [\"UNKNOWN\", undefined];\n        }\n    }, [imageDocument]);\n\n    return (\n        <div>\n            <Typography variant=\"h4\" mb={2}>\n                <b>\n                    {imageDocument?.metadata?.document_id ??\n                        imageDocument.parameters.analysis_id}\n                </b>\n            </Typography>\n            <div className={classes.linksRow}>\n                <Chip label={statusText} color={statusColor} />\n                <IconText\n                    className={classes.marginLeft}\n                    text={calcTime(\n                        imageDocument?.status?.finished_at,\n                        imageDocument?.status?.started_at,\n                        imageDocument?.metadata?.datetime,\n                    )}\n                    icon={<AccessTimeIcon />}\n                />\n                <Button\n                    sx={{ marginLeft: 2 }}\n                    onClick={() => setShowLogs(!showLogs)}\n                >\n                    <IconText text=\"Logs\" icon={<FeedRoundedIcon />} />\n                </Button>\n            </div>\n            <Typography variant={\"subtitle2\"} mb={2}>\n                {imageDocument?.error ?? imageDocument?.result?.error_msg}\n            </Typography>\n            <Collapse in={showLogs}>\n                {logs?.split(\"\\n\").map((line, i) => {\n                    return (\n                        <Typography\n                            key={i}\n                            noWrap={selectedLine !== i}\n                            onClick={() =>\n                                setSelectedLine(\n                                    selectedLine === i ? undefined : i,\n                                )\n                            }\n                            variant=\"body2\"\n                            sx={{\n                                backgroundColor:\n                                    selectedLine === i\n                                        ? \"lightyellow\"\n                                        : i % 2 === 0\n                                        ? \"lightgray\"\n                                        : \"unset\",\n                            }}\n                        >\n                            {line}\n                        </Typography>\n                    );\n                }) ?? \"Image log is not available.\"}\n            </Collapse>\n        </div>\n    );\n};\n\nImageHeader.propTypes = {\n    /** the Advise document id*/\n    imageDocument: PropTypes.object.isRequired,\n    logs: PropTypes.string,\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\n// material-ui\nimport { Box, Skeleton } from \"@material-ui/core\";\n\nconst columns = [\n    { field: \"name\", headerName: \"Package Name\", flex: 1 },\n    { field: \"version\", headerName: \"Version\", flex: 0.5 },\n    { field: \"arch\", headerName: \"Architecture\", flex: 0.5 },\n];\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const DebInfo = ({ imageDocument }) => {\n    if (!imageDocument) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div style={{ height: 400, width: \"100%\" }}>\n            <DataGrid\n                disableSelectionOnClick\n                disableColumnSelector\n                hideFooterSelectedRowCount\n                getRowId={row => row.package_identifier}\n                density=\"compact\"\n                rows={imageDocument?.result?.[\"deb\"]}\n                columns={columns}\n                pageSize={50}\n                rowsPerPageOptions={[25, 50, 100]}\n            />\n        </div>\n    );\n};\n\nDebInfo.propTypes = {\n    /** An object holding metric info. */\n    imageDocument: PropTypes.shape({\n        result: PropTypes.object,\n    }),\n};\n","// react\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { Box, Grid, Skeleton, Stack, Typography } from \"@material-ui/core\";\nimport { Chip } from \"@mui/material\";\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const PythonInfo = ({ imageDocument }) => {\n    if (!imageDocument) {\n        return (\n            <Box data-testid=\"python-info-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    const files = useMemo(() => {\n        if (!imageDocument?.result?.[\"python-files\"]) {\n            return;\n        }\n\n        const paths = new Map();\n        imageDocument.result[\"python-files\"].forEach(file => {\n            const split = file.filepath.split(\"/\", 4);\n            const key = split[1] + \"/\" + split[2] + \"/\" + split[3];\n            if (paths.has(key)) {\n                paths.set(key, paths.get(key) + 1);\n            } else {\n                paths.set(key, 1);\n            }\n        });\n        return Array.from(paths.entries()).map(([key, value]) => {\n            return {\n                path: key,\n                count: value,\n            };\n        });\n    }, [imageDocument]);\n\n    const interpreters = useMemo(() => {\n        return imageDocument.result[\"python-interpreters\"].filter(\n            interpreter => !!interpreter.version,\n        );\n    }, [imageDocument]);\n\n    return (\n        <Stack direction=\"column\" spacing={3}>\n            {interpreters?.length > 0 ? (\n                <Stack direction=\"row\" spacing={1} alignItems={\"center\"}>\n                    <Typography variant={\"h6\"}>\n                        Python interpreters:{\" \"}\n                    </Typography>\n                    {interpreters.map((interpreter, i) => {\n                        return (\n                            <Chip\n                                data-testid=\"python-info-chip\"\n                                key={interpreter.version + i}\n                                label={interpreter.version}\n                            />\n                        );\n                    })}\n                </Stack>\n            ) : undefined}\n            <div data-testid=\"python-info-loaded\">\n                <Stack direction=\"row\" spacing={1} mb={1} alignItems={\"center\"}>\n                    <Typography variant={\"h6\"}>\n                        Total number of Python files:{\" \"}\n                    </Typography>\n                    <Typography variant={\"body1\"}>\n                        {files.reduce((prev, cur) => prev + cur.count, 0)}\n                    </Typography>\n                </Stack>\n                <Grid container>\n                    {files\n                        .sort((a, b) => b.count - a.count)\n                        .map(file => {\n                            return (\n                                <Grid\n                                    key={file.path}\n                                    item\n                                    xs={12}\n                                    lg={6}\n                                    xl={4}\n                                >\n                                    <Stack\n                                        ml={3}\n                                        direction=\"row\"\n                                        spacing={1}\n                                        alignItems={\"center\"}\n                                        justifyContent={\"space-between\"}\n                                    >\n                                        <Typography variant={\"body2\"}>\n                                            {file.path}:\n                                        </Typography>\n                                        <Typography variant={\"body2\"}>\n                                            <b>{file.count}</b>\n                                        </Typography>\n                                    </Stack>\n                                </Grid>\n                            );\n                        })}\n                </Grid>\n            </div>\n        </Stack>\n    );\n};\n\nPythonInfo.propTypes = {\n    /** An object holding metric info. */\n    imageDocument: PropTypes.shape({\n        result: PropTypes.object,\n        metadata: PropTypes.object,\n    }),\n};\n","// react\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { Box, Grid, Skeleton, Stack, Typography } from \"@material-ui/core\";\nimport { Chip } from \"@mui/material\";\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const ImageInfo = ({ imageDocument, imageMetadata }) => {\n    const params = useMemo(() => {\n        if (imageMetadata) {\n            return imageMetadata;\n        } else if (imageDocument?.result?.[\"skopeo-inspect\"]) {\n            return {\n                architecture:\n                    imageDocument.result[\"skopeo-inspect\"].Architecture,\n                created: imageDocument.result[\"skopeo-inspect\"].Created,\n                digest: imageDocument.result[\"skopeo-inspect\"].Digest,\n                docker_version:\n                    imageDocument.result[\"skopeo-inspect\"].DockerVersion,\n                labels: imageDocument.result[\"skopeo-inspect\"].Labels,\n                layers: imageDocument.result[\"skopeo-inspect\"].Layers,\n                os: imageDocument.result[\"skopeo-inspect\"].Os,\n                repo_tags: imageDocument.result[\"skopeo-inspect\"].RepoTags,\n            };\n        }\n    }, [imageDocument, imageMetadata]);\n\n    if (!params) {\n        return (\n            <Box data-testid=\"image-info-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n                    <Typography variant={\"body1\"}>\n                        <b>{params.labels[\"io.k8s.display-name\"]}</b>\n                    </Typography>\n                    <Chip label={params.labels.name.split(\":\").at(-1)} />\n                </Stack>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant={\"h6\"} mb={1}>\n                    General information\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Summary\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels.summary}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Description\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels.description}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Provider\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels.vendor}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Maintainer\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels.maintainer}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Build date\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {new Date(params.labels[\"build-date\"]).toLocaleDateString()}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Typography variant={\"h6\"} mb={1}>\n                    Technical information\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Image name\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>{params.labels.name}</Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Image version\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels.version}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Architecture\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>{params.architecture}</Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Usage\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    <code>{params.labels.usage}</code>\n                </Typography>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n                    Exposed Ports\n                </Typography>\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant={\"body2\"}>\n                    {params.labels[\"io.openshift.expose-services\"]}\n                </Typography>\n            </Grid>\n        </Grid>\n    );\n};\n\nImageInfo.propTypes = {\n    /** An object holding metric info. */\n    imageDocument: PropTypes.object,\n    imageMetadata: PropTypes.object,\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\n// material-ui\nimport { Box, Skeleton } from \"@material-ui/core\";\n\nconst columns = [\n    { field: \"name\", headerName: \"Package Name\", flex: 1 },\n    { field: \"version\", headerName: \"Version\", flex: 0.5 },\n    { field: \"release\", headerName: \"Release\", flex: 0.25 },\n    {\n        field: \"dependencies\",\n        headerName: \"Dependencies\",\n        flex: 0.5,\n        valueGetter: params => params.row?.dependencies?.length ?? 0,\n        sortable: false,\n    },\n    { field: \"epoch\", headerName: \"Epoch\", flex: 0.5 },\n    { field: \"arch\", headerName: \"Architecture\", flex: 0.5 },\n];\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const RPMInfo = ({ imageDocument }) => {\n    if (!imageDocument) {\n        return (\n            <Box data-testid=\"rpm-info-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div\n            style={{ height: 400, width: \"100%\" }}\n            data-testid=\"rpm-info-loaded\"\n        >\n            <DataGrid\n                disableSelectionOnClick\n                disableColumnSelector\n                hideFooterSelectedRowCount\n                getRowId={row => row.package_identifier}\n                density=\"compact\"\n                rows={imageDocument?.result?.[\"rpm-dependencies\"]}\n                columns={columns}\n                pageSize={50}\n                rowsPerPageOptions={[25, 50, 100]}\n            />\n        </div>\n    );\n};\n\nRPMInfo.propTypes = {\n    /** An object holding metric info. */\n    imageDocument: PropTypes.shape({\n        result: PropTypes.object,\n        metadata: PropTypes.object,\n    }),\n};\n","import React from \"react\";\nimport InfoCard from \"components/Elements/InfoCard\";\nimport { DependenciesMetric, LicenseMetric } from \"components/Metrics\";\nimport PropTypes from \"prop-types\";\nimport { Masonry } from \"@mui/lab\";\nimport { DebInfo, PythonInfo, ImageInfo, RPMInfo } from \"../components\";\n\nexport const ImageSummary = ({ metrics, imageDocument, imageMetadata }) => {\n    return (\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3} mb={3} mt={1}>\n            {imageDocument || imageMetadata ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"Image Details\",\n                        }}\n                        cardBody={\n                            <ImageInfo\n                                imageDocument={imageDocument}\n                                imageMetadata={imageMetadata}\n                            />\n                        }\n                    />\n                </div>\n            ) : undefined}\n\n            {imageDocument?.result?.[\"python-interpreters\"]?.length > 0 ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"Python Details\",\n                        }}\n                        cardBody={<PythonInfo imageDocument={imageDocument} />}\n                    />\n                </div>\n            ) : undefined}\n\n            {imageDocument?.result?.[\"rpm-dependencies\"]?.length > 0 ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"RPM Details\",\n                        }}\n                        cardBody={<RPMInfo imageDocument={imageDocument} />}\n                    />\n                </div>\n            ) : undefined}\n\n            {imageDocument.result?.deb?.length > 0 ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"Debian Details\",\n                        }}\n                        cardBody={<DebInfo imageDocument={imageDocument} />}\n                    />{\" \"}\n                </div>\n            ) : undefined}\n\n            {Object.keys(metrics?.dependencies?.all ?? {}).length !== 0 ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"Python Packages Dependencies\",\n                        }}\n                        cardBody={\n                            <DependenciesMetric\n                                all={metrics?.dependencies?.all}\n                                roots={metrics?.dependencies?.roots}\n                            />\n                        }\n                    />\n                </div>\n            ) : undefined}\n\n            {Object.keys(metrics?.licenses ?? {}).length !== 0 ? (\n                <div>\n                    <InfoCard\n                        cardMeta={{\n                            title: \"Python Packages Licenses\",\n                        }}\n                        cardBody={<LicenseMetric metric={metrics?.licenses} />}\n                    />{\" \"}\n                </div>\n            ) : undefined}\n        </Masonry>\n    );\n};\n\nImageSummary.propTypes = {\n    metrics: PropTypes.object,\n    imageDocument: PropTypes.object,\n    imageMetadata: PropTypes.object,\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\n/**\n * An async function that returns a promise for `{base_url}/analyze`\n *\n * @param analysis_id - the image document id (ex: `package-extract-211112223258-38af1a4746733b53`)\n */\nexport const getImageDocument = async analysis_id => {\n    return axios.get(THOTH_URL + \"/analyze/\" + analysis_id, {\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useImageDocument = (analysis_id, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"ImageDocument\", analysis_id],\n        queryFn: () => getImageDocument(analysis_id),\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\n/**\n * An async function that returns a promise for `{base_url}/image/logs`\n *\n * @param analysis_id - the image document id (ex: `package-extract-211112223258-38af1a4746733b53`)\n */\nexport const getImageLogs = async analysis_id => {\n    return axios.get(THOTH_URL + \"/analyze/\" + analysis_id + \"/log\", {\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useImageLogs = (analysis_id, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"ImageLogs\", analysis_id],\n        queryFn: () => getImageLogs(analysis_id),\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\n/**\n * An async function that returns a promise for `{base_url}/analyze`\n *\n * @param image the name of the image\n */\nexport const getImageMetadata = async image => {\n    return axios.post(\n        THOTH_URL + \"/image/metadata\",\n        {},\n        {\n            params: {\n                image: image,\n            },\n            headers: {\n                accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        },\n    );\n};\n\nexport const useImageMetadata = (image_name, config) => {\n    return useQuery({\n        ...config,\n        enabled: !!image_name,\n        queryKey: [\"ImageMetadata\", image_name],\n        queryFn: () => getImageMetadata(image_name),\n    });\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const ImageNotFound = ({ analysis_id }) => {\n    return <div> &quot;{analysis_id}&quot; not found</div>;\n};\n\nImageNotFound.propTypes = {\n    analysis_id: PropTypes.string,\n};\n","import React, { useMemo } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\n// layouts\n\n// sub-routes\nimport { ImageSummary } from \"./ImageSummary\";\n\n// feature specific imports\nimport { useImageDocument, useImageLogs, useImageMetadata } from \"../api\";\n\n// misc\nimport { CircularProgress } from \"@material-ui/core\";\nimport { ImageNotFound } from \"./ImageNotFound\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\nimport { useGraph } from \"hooks\";\nimport { useMetrics } from \"../hooks\";\nimport { ImageHeader } from \"../components\";\nimport { formatImagePackages } from \"../utils\";\n\nexport const ImageRoutes = () => {\n    // get document id\n    const { analysis_id } = useParams();\n    const { state } = useLocation();\n\n    // api get thoth image analysis document\n    const imageDocument = useImageDocument(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: data => {\n            if (data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n\n    const imageMetadata = useImageMetadata(\n        state?.image_name ??\n            imageDocument.data?.data?.metadata?.arguments?.[\"extract-image\"]\n                ?.image,\n    );\n\n    const logs = useImageLogs(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: () => {\n            if (imageDocument.data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n    // format init graph data\n    const graphData = useMemo(() => {\n        if (imageDocument.data?.data?.metadata) {\n            const os = {\n                name:\n                    imageDocument.data.data.result?.[\"operating-system\"]?.id ??\n                    \"rhel\",\n                version:\n                    imageDocument.data.data.result?.[\n                        \"operating-system\"\n                    ]?.version_id?.split(\".\")[0] ?? \"8\",\n                python_version:\n                    imageDocument.data.data.metadata.python.major +\n                    \".\" +\n                    imageDocument.data.data.metadata.python.minor,\n            };\n            return formatImagePackages(\n                imageDocument.data.data.result[\"python-packages\"],\n                os,\n            );\n        }\n    }, [imageDocument.data]);\n\n    // create init graph\n    const graph = useGraph(graphData);\n\n    // compute metric data\n    const metrics = useMetrics(graph, imageDocument.data?.data);\n\n    if (imageDocument?.isLoading) {\n        return (\n            <div className=\"w-full h-48 flex justify-center items-center\">\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (!imageDocument?.data) {\n        return (\n            <div data-testid=\"image-not-loaded\">\n                <NavigationLayout>\n                    <ImageNotFound analysis_id={analysis_id} />\n                </NavigationLayout>\n            </div>\n        );\n    }\n\n    return (\n        <div data-testid=\"image-loaded\">\n            <NavigationLayout>\n                <ImageHeader\n                    imageDocument={imageDocument.data?.data}\n                    logs={logs.data?.data?.log}\n                />\n                <ImageSummary\n                    imageMetadata={imageMetadata.data?.data}\n                    metrics={metrics}\n                    imageDocument={imageDocument.data?.data}\n                />\n            </NavigationLayout>\n        </div>\n    );\n};\n","import { useMemo } from \"react\";\nimport { useLicenseMetric, useDependencyMetric } from \"hooks/metrics\";\n\nexport function useMetrics(graph) {\n    const dependencyMetric = useDependencyMetric(graph);\n    const licenseMetric = useLicenseMetric(graph);\n\n    return useMemo(() => {\n        const base = {\n            dependencies: null,\n            licenses: null,\n        };\n\n        if (dependencyMetric) {\n            base.dependencies = dependencyMetric;\n        }\n        if (licenseMetric) {\n            base.licenses = licenseMetric;\n        }\n\n        return base;\n    }, [dependencyMetric, licenseMetric]);\n}\n","export function formatImagePackages(image_packages, os) {\n    return image_packages.map(p => {\n        return {\n            name: p.package_name,\n            version: p.package_version,\n            index: \"https://pypi.org/simple\",\n            os_name: os.name,\n            os_version: os.version,\n            python_version: os.python_version,\n        };\n    });\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Home } from \"features/home\";\nimport { NotFound } from \"routes/NotFound\";\nimport { AdviseRoutes } from \"features/advise\";\nimport { PackageRoutes } from \"features/package\";\nimport { ImageRoutes } from \"features/image\";\n\nexport const RouterConfig = () => {\n    return (\n        <BrowserRouter\n            basename={\n                process.env.REACT_APP_DEPLOYMENT === \"STAGE\"\n                    ? \"/search-stage\"\n                    : \"/search\"\n            }\n        >\n            <Routes>\n                <Route exact path={\"/\"} element={<Home />} />\n                <Route\n                    exact\n                    path={\"advise/:analysis_id/*\"}\n                    element={<AdviseRoutes />}\n                />\n                <Route\n                    path={\"package/:package_name/*\"}\n                    element={<PackageRoutes />}\n                />\n                <Route\n                    path={\"image/:analysis_id/*\"}\n                    element={<ImageRoutes />}\n                />\n                <Route path=\"*\" status={404} element={<NotFound />} />\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default RouterConfig;\n","import React from \"react\";\nimport { AppProvider } from \"providers/app\";\nimport RouterConfig from \"routes/RouterConfig\";\n\nfunction App() {\n    return (\n        <AppProvider>\n            <RouterConfig />\n        </AppProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}