{"version":3,"sources":["lib/react-query.ts","styles/Theme.tsx","stores/Global.tsx","providers/app.tsx","components/Elements/TabPanel/TabPanel.tsx","assets/thoth-logo.png","components/Elements/SearchBar/SearchBar.tsx","config/index.ts","features/home/api/postAdvise.ts","features/home/api/getPackageExists.ts","features/home/api/postImageAnalyze.ts","features/home/api/getContainerImages.ts","features/home/components/PackageSearch.tsx","features/home/components/ComboBox/ComboBox.tsx","components/Elements/GenericTable/GenericTable.tsx","features/advise/api/getPackageDependencies.ts","features/advise/api/getAdviseDocument.ts","features/advise/api/getAdviseLogs.ts","utils/timeSince.ts","utils/calcTime.ts","features/home/components/AdviseCreation.tsx","features/home/components/ImageSearch.tsx","assets/footer-logo.png","components/Footer/Footer.tsx","features/home/routes/index.tsx","routes/NotFound.tsx","components/Elements/IconText/IconText.tsx","features/advise/components/AdviseHeader/CustomAlert/CustomAlert.tsx","features/advise/components/AdviseHeader/AdviseHeader.tsx","features/advise/components/AdviseTableView/EnhancedTableHead/EnhancedTableHead.tsx","features/advise/components/PackageList/PackageList.tsx","components/Elements/Loading/Loading.tsx","features/advise/routes/AdviseDetails.tsx","features/advise/components/LockfileView/LockfileView.tsx","features/advise/components/Popup/Popup.tsx","features/advise/components/NetworkGraphView/NetworkGraphView.tsx","features/advise/components/JustificationMetrics/ScorecardMetric.tsx","api/getPackageMetadata.ts","api/getFile.ts","features/advise/components/SelectedPackage/hooks/useScorecards.ts","features/advise/components/SelectedPackage/SelectedPackage.tsx","features/advise/components/SelectedPackage/hooks/useLinkData.tsx","features/advise/hooks/useImportantJustifications.ts","features/advise/components/SummaryCharts/BubbleHistogram.tsx","features/advise/components/SummaryCharts/WarningPackages.tsx","features/advise/components/SummaryCharts/CVEPackages.tsx","features/advise/components/SummaryCharts/TimelineChart.tsx","features/advise/components/SummaryCharts/UnmaintainedPackages.tsx","hooks/metrics/useDependencyMetric.ts","hooks/metrics/useLicenseMetric.ts","features/advise/hooks/useMetrics.ts","hooks/metrics/useAdviseMetric.ts","features/advise/components/SummaryCharts/LicenseSummary.tsx","features/advise/components/SummaryCharts/PieChart.tsx","features/advise/components/SummaryCharts/DependencySummary.tsx","features/advise/routes/AdviseSummary.tsx","components/Elements/ScrollToTop/ScrollToTop.tsx","features/advise/routes/AdviseCompare.tsx","hooks/useInterval.ts","lib/interfaces/Graph.ts","lib/interfaces/Node.ts","hooks/useGraph.ts","features/advise/routes/AdviseNotFound.tsx","components/Layout/MainLayout.tsx","components/Layout/AdviserLayout.tsx","components/Layout/NavigationLayout.tsx","features/advise/routes/AdviseLogs.tsx","features/advise/components/StackInfoMetrics/StackInfoInstallErrorMetric.tsx","features/advise/components/StackInfoMetrics/StackInfoRulesMetric.tsx","features/advise/components/StackInfoMetrics/StackInfoEnvMetric.tsx","features/advise/components/StackInfoMetrics/StackInfoMetric.tsx","features/advise/routes/AdviseStackInfo.tsx","features/advise/routes/AdviseEnvironmentInfo.tsx","features/advise/routes/AdviseLicenses.tsx","utils/fromBytes.ts","features/advise/routes/AdviseDependencies.tsx","features/advise/routes/index.tsx","utils/formatLockfile.ts","features/package/components/ParamDropdown/ParamDropdown.tsx","features/package/components/PackageHeader/PackageHeader.tsx","components/Elements/InfoCard/InfoCard.tsx","features/package/components/PackageDependencies/VersionDropdown.tsx","features/package/components/PackageDependencies/PackageDependencies.tsx","features/package/routes/PackageNotFound.tsx","features/package/api/getPackageVersions.ts","features/package/api/getPackageEnvironments.ts","routes/ErrorPage.tsx","features/package/routes/PackageOverview.tsx","features/package/hooks/useSimpleGraph.ts","features/package/routes/index.tsx","components/Elements/ProgressBar/ProgressBar.tsx","components/Metrics/DependenciesMetric/DependenciesMetric.tsx","components/Metrics/LicenseMetric/LicenseGroup/LicenseGroup.tsx","components/Metrics/LicenseMetric/LicenseMetric.tsx","features/image/components/ImageHeader/ImageHeader.tsx","features/image/components/DebInfo/DebInfo.tsx","features/image/components/PythonInfo/PythonInfo.tsx","features/image/components/ImageInfo/ImageInfo.tsx","features/image/components/RPMInfo/RPMInfo.tsx","features/image/routes/ImageSummary.tsx","features/image/api/getImageDocument.ts","features/image/api/getImageLogs.ts","features/image/routes/ImageNotFound.tsx","features/image/routes/index.tsx","features/image/hooks/useMetrics.ts","features/image/utils/formatImagePackages.ts","routes/RouterConfig.tsx","App.tsx","index.tsx"],"names":["queryClient","QueryClient","defaultOptions","queries","useErrorBoundary","refetchOnWindowFocus","refetchOnMount","retry","theme","createTheme","palette","primary","main","secondary","background","default","paper","text","shape","borderRadius","activeColor","customColor","value","argbFromHex","name","blend","responsiveFontSizes","components","MuiPopover","defaultProps","elevation","styleOverrides","paddingLeft","paddingRight","MuiDialog","PaperProps","MuiDrawer","borderStyle","backgroundColor","MuiLink","root","color","Theme","children","ThemeProvider","CssBaseline","StateContext","React","undefined","reducer","state","action","type","input","payload","loading","isLoading","total","DispatchContext","updateLoading","initState","Global","dispatch","actionMap","Provider","ErrorFallback","Button","onClick","window","location","assign","origin","AppProvider","FallbackComponent","client","TabPanel","index","props","role","hidden","id","SearchBar","onEnter","label","helpertext","boxprops","error","lefticon","righticon","Box","Typography","variant","sx","Paper","p","display","alignItems","borderColor","InputBase","ml","flex","placeholder","onChange","onKeyPress","ev","key","preventDefault","LOCAL_STORAGE_KEY","THOTH_URL","options","manipulation","enabled","interaction","hover","hoverConnectedEdges","selectConnectedEdges","selectable","edges","chosen","smooth","arrowStrikethrough","arrows","from","nodes","border","size","borderWidth","labelHighlightBold","font","strokeWidth","physics","hierarchicalRepulsion","damping","springLength","solver","minVelocity","postAdvise","pipfile","pipfileLock","runtime_environment","data","application_stack","requirements","requirements_format","requirements_lock","axios","post","params","recommendation_type","headers","accept","getPackageExists","a","config","get","then","res","versions","length","catch","postImageAnalyze","image","getContainerImages","page","per_page","PackageSearch","navigate","useNavigate","useState","searchQuery","setSearchQuery","searchError","setSearchError","handleAnalyze","Grid","container","justifyContent","alignSelf","item","xs","minHeight","spacing","md","e","target","handleChange","minWidth","filter","createFilterOptions","ComboBox","suggestions","help","required","setValue","suggestions_mapped","useMemo","map","suggestion","title","Autocomplete","event","newValue","inputValue","filterOptions","filtered","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","option","renderOption","freeSolo","renderInput","TextField","fullWidth","helperText","descendingComparator","b","orderBy","getComparator","order","EnhancedTableHead","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","direction","property","GenericTable","rows","setOrder","setOrderBy","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","max","width","mb","TableContainer","Table","rowCount","TableBody","slice","sort","row","labelId","tabIndex","header","j","component","scope","align","IconButton","style","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","className","CircularProgress","getAdviseDocument","analysis_id","useAdviseDocument","useQuery","startsWith","queryKey","queryFn","getAdviseLogs","timeSince","date","startTime","Date","seconds","floor","valueOf","interval","num","calcTime","finished_at","started_at","datetime","param","Error","headCells","lookupType","operating_system_name","operating_system_version","python_version","cuda_version","cudnn_version","mkl_version","openblas_version","openmpi_version","base_image","AdviseCreation","analysis_ids","useReducer","localHistory","ids","localStorage","getItem","split","s","adviseHistory","useQueries","doc","document_id","metadata","result","report","products","project","os_name","operating_system","os_version","version","status","isValid","valid","Object","keys","forEach","response","includes","Collapse","in","marginRight","mt","padding","marginBottom","multiline","sm","LoadingButton","ImageSearch","images","container_images","image_name","mr","package_extract_document_id","environment_name","Footer","marginTop","alt","src","logo","Stack","paddingX","textTransform","paddingBottom","Link","underline","href","Home","mode","setMode","useTheme","matches","useMediaQuery","breakpoints","up","maxWidth","margin","textAlign","ToggleButtonGroup","exclusive","newMode","ToggleButton","Divider","NotFound","IconText","icon","link","rel","CustomAlert","info","Alert","severity","message","AdviseHeader","adviseDocument","lastLog","ERROR","toUpperCase","statusText","statusColor","parameters","Chip","error_msg","levelname","toLowerCase","PackageList","graph","useContext","SelectedPackageContext","setSelected","console","log","selected","search","setSearch","packageList","packages","node","depth","summary","Summary","warnings","justifications","errors","maxHeight","List","overflow","dense","ListItem","button","ListItemText","ListItemSecondaryAction","Loading","progress","flexDirection","LinearProgress","createContext","AdviseDetails","useParams","useEffect","pkg","flexGrow","overflowY","Popup","gutterBottom","License","latestVersion","NetworkGraph","graphHeight","visJsRef","useRef","selectedNode","findAllNodesOnAllPaths","app_node","set","convertedNodes","DataSet","popup","document","createElement","ReactDOM","render","add","visData","visEdges","network","current","Network","networkCanvas","getElementById","getElementsByTagName","changeCursor","newCursorStyle","cursor","on","flexFlow","ref","ScorecardItem","tags","short","risk","passing","justification","KeyboardArrowDown","transform","transition","fontWeight","marginLeft","tag","ScorecardMetric","metric","Card","CardHeader","subheader","CardContent","values","getPackageMetadata","usePackagesMetadata","getFile","url","fetch","getYamlFile","YAML","parse","getMatch","scorecards","pattern","Maintained","Contributors","Fuzzing","Packaging","SAST","Vulnerabilities","find","scorecard","SelectedPackage","selectedPackage","dependents","deps","parents","justs","Map","just","setScorecard","scorecardJustifications","Array","delete","load","yaml","entries","checks","match","useScorecards","linkData","setLinkData","patterns","temp","useLinkData","popular","browseLink","showError","i","Fragment","orientation","avatar","dep","NetworkGraphView","findCVEPackages","cves","Promise","all","matchAll","has","findPackagesWithWarnings","pkgs","package_justification","package_name","sorted_array","top_bucket","at","top_packages","avg","reduce","prev","findUnmaintainedPackages","visited","Set","not_maintained","last_release","low_maintainers","k","v","now","getTime","BubbleHistogram","source","handleClick","selectionStart","setSelectionStart","selectionEnd","setSelectionEnd","updateDragState","area","start","left","end","right","selection","inX","x","inX0","x0","inStart","inEnd","sourceMax","min","Infinity","bins","ceil","histogram","fill","Color","rgb","mix","lighten","hex","selectedColor","darken","y","y0","tickFormat","toString","tickTotal","ticks","stroke","colorType","getOpacity","d","drag","enableY","onDrag","onDragEnd","WarningPackages","warningPackages","warningPackagesSelected","setWarningPackagesSelected","fontStyle","toFixed","replace","to","Skeleton","CVEPackages","cvePackages","selectedCVE","setSelectedCVE","containerRef","Slide","published","toLocaleString","details","affected","package","ecosystem","ranges","range","events","fixed","introduced","disablePadding","cve","ListItemButton","join","ListItemIcon","TimelineChart","timestamp","opacity","bottom","line","point","getColor","UnmaintainedPackages","unmaintainedPackages","obj","fontSize","toDateString","useDependencyMetric","setMetric","base","roots","rootObj","bfs","graphSearch","useLicenseMetric","packageLicenses","Classifier","classifier","parsed","generalLicense","specificLicense","isOsiApproved","license","specific","useMetrics","adviseMetric","build","os_release","python","implementation_name","major","minor","micro","analyzer","analyzer_version","useAdviseMetric","dependencyMetric","licenseMetric","advise","dependencies","licenses","LicenseSummary","totalPkgWarnings","totalPkgErrors","approved","totalPkgApproved","PieChart","setHovered","hovered","onValueMouseOver","onSeriesMouseOut","DependencySummary","lg","angle","direct","indirect","AdviseSummary","setResult","useImportantJustifications","metrics","Masonry","columns","ScrollTop","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","anchor","ownerDocument","querySelector","scrollIntoView","behavior","block","position","ScrollToTop","Fab","AdviseCompare","cmp","setComparison","comparison","compareDoc","open","setOpen","differencesOnly","setDifferencesOnly","importText","setImportText","optionList","setOptionList","env","readable","handleClose","reason","handleImport","setItem","history","COMPARE_COLORS","old","new","change","equal","comparePaths","obj1","obj2","mapping","obj1_mapped","obj2_mapped","renderCompareLine","compareType","borderStyles","paddingTop","doubleRenderTypography","headerStyles","compareArrays","array1","array2","s1","JSON","stringify","s2","set1","set2","merged","createProjectCompare","proj1","proj2","dev_packages","requirements_locked","_meta","sources","field","hardware","cpu_model","cpu_family","gpu_model","trim","createCompare","doc1","doc2","accepted_final_states_count","discarded_final_states_count","resolver_iterations","pipeline","advised_manifest_changes","patch","path","op","stack_info","arguments","distribution","api_version","releaselevel","compareJSX","borderBottomStyle","borderTopLeftRadius","borderTopRightRadius","Dialog","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","flexWrap","DialogActions","columnSpacing","borderTopStyle","borderBottomLeftRadius","borderBottomRightRadius","textOverflow","whiteSpace","marginX","FormControl","Select","displayEmpty","MenuItem","disabled","FormControlLabel","control","Switch","defaultChecked","checked","Graph","this","Node","destination","sourceNode","destinationNode","addAdjacent","first","visitList","pop","shift","getAdjacents","adj","newPath","nextPath","findPath","destinationKey","parent","paths","findAllPaths","adjacents","useGraph","knownRoots","advise_document","allMetadata","setLoading","setGraph","query","every","tempGraph","notRoot","addVertex","isSuccess","package_version","importlib_metadata","install_size","files","cur","dependency_graph","cleaned_source","cleaned_destination","addEdge","app","justifiedPackages","adjs","visGraphEdges","AdviseNotFound","MainLayout","marginY","openedMixin","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","Drawer","styled","shouldForwardProp","prop","flexShrink","boxSizing","CustomListItem","chipData","hideOnClosed","hexFromArgb","light","colorContainer","onColorContainer","RouterLink","secondaryAction","warning","disableTypography","AdviserLayout","useLocation","currentTab","pathname","NavigationLayout","goHome","AdviseLogs","logs","module","lineno","funcname","created","asctime","msecs","relative_created","process","stickyHeader","StackInfoInstallErrorMetric","compact","down","titleTypographyProps","inset","StackInfoRulesMetric","rule","flexItem","constraint","StackInfoEnvMetric","provided","StackInfoMetric","typeTotals","c","renderRow","alignContent","some","AdviseStackInfo","types","cards","element","name_index","rules","name_constraint_index","concat","fromEntries","stackInfoHandler","others","xl","EditableLabel","itemKey","itemSubKey","handleSubmit","editMode","AdviseEnvironmentInfo","currentRuntimeEnvironment","setCurrentRuntimeEnvironment","errorMessage","setErrorMessage","setEditMode","subKey","original","detail","group","platform","formatted_json","format","formatObj","subValue","dump","getIcon","subItem","verticalAlign","ListItemAvatar","navigator","clipboard","writeText","AdviseLicenses","pkgName","pkgData","fromBytes","bytes","KB","MB","GB","TB","AdviseDependencies","ar","findIndex","selectedIndex","n","agg_size","agg_license","agg_warnings","direct_deps","indirect_deps","rowSpacing","TransitionGroup","KeyboardArrowDownRounded","KeyboardDoubleArrowDownRounded","GavelRounded","AdviseRoutes","refetchInterval","useAdviseLogs","lockfile","formatLockfile","stackInfoTotals","t","licenseTotals","ParamDropdown","SpecContext","specs","defaultSpecs","encodeURIComponent","index_url","renderValue","PackageHeader","allVersions","allEnvironments","showEnvParams","setShowEnvParams","versionOptions","dups","indexUrlOptions","osNameOptions","osVersionOptions","pythonVersionOptions","Name","InfoCard","cardMeta","cardBody","cardAction","subTitle","VersionDropdown","anchorEl","setAnchorEl","noDup","currentKey","buckets","fixedOptions","array","currentTarget","endIcon","specifier","Menu","divider","PackageDependencies","visitedOrder","extra","PackageNotFound","getPackageVersions","getPackageEnvironments","ErrorPage","PackageOverview","setDefaultSpecs","decodeURIComponent","usePackageEnvironments","environments","val","usePackageMetadata","useSimpleGraph","PackageRoutes","ProgressBar","colorPrimary","bar","DependenciesMetric","totalDependencies","LicenseGroup","totalLicenses","timeout","unmountOnExit","my","LicenseMetric","more","setMore","sum","ImageHeader","imageDocument","showLogs","setShowLogs","selectedLine","setSelectedLine","noWrap","headerName","DebInfo","disableSelectionOnClick","disableColumnSelector","hideFooterSelectedRowCount","getRowId","package_identifier","density","pageSize","PythonInfo","file","filepath","interpreters","interpreter","ImageInfo","Labels","description","vendor","maintainer","toLocaleDateString","Architecture","valueGetter","sortable","RPMInfo","ImageSummary","deb","getImageDocument","getImageLogs","ImageNotFound","ImageRoutes","useImageDocument","useImageLogs","os","version_id","image_packages","formatImagePackages","RouterConfig","basename","App","StrictMode"],"mappings":"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","file":"static/js/main.f0f1757c.chunk.js","sourcesContent":["import { QueryClient } from \"react-query\";\n\nconst queryConfig = {\n  queries: {\n    useErrorBoundary: true,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    retry: false,\n  },\n};\n\nexport const queryClient = new QueryClient({ defaultOptions: queryConfig });\n","import React from \"react\";\n\n// material ui\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { createTheme, responsiveFontSizes } from \"@mui/material/styles\";\nimport { argbFromHex, customColor } from \"@material/material-color-utilities\";\n\nlet theme = createTheme();\n\n// key colors and theme\ntheme = createTheme(theme, {\n  palette: {\n    primary: {\n      main: \"#f39200\",\n    },\n    secondary: {\n      main: \"#4fc1ea\",\n    },\n    background: {\n      default: \"rgb(249, 249, 249)\",\n      paper: \"#fff\",\n    },\n    text: {\n      primary: \"#363636\",\n      secondary: \"#999999\",\n    },\n  },\n  shape: {\n    borderRadius: 12,\n  },\n});\n\nexport const activeColor = customColor(0, {\n  value: argbFromHex(theme.palette.primary.main),\n  name: \"active\",\n  blend: false,\n});\n\ntheme = responsiveFontSizes(theme);\n\ntheme = createTheme(theme, {\n  components: {\n    MuiPopover: {\n      defaultProps: {\n        elevation: 2,\n      },\n      styleOverrides: {\n        paper: {\n          paddingLeft: 0,\n          paddingRight: 0,\n          borderRadius: \"4px\",\n        },\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        PaperProps: {\n          elevation: 3,\n        },\n      },\n    },\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          borderStyle: \"hidden\",\n          backgroundColor: theme.palette.background.default,\n        },\n      },\n    },\n    MuiLink: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n          \"&:hover\": {\n            color: theme.palette.primary.main,\n          },\n        },\n      },\n    },\n  },\n});\n\ninterface ITheme {\n  children?: JSX.Element;\n}\n\nfunction Theme({ children }: ITheme) {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  );\n}\n\nexport default Theme;\n","import * as React from \"react\";\n\ninterface IGlobal {\n  children?: JSX.Element;\n}\n\nexport interface GlobalState {\n  notifications?: string[];\n  loading?: {\n    [key: string]: {\n      isLoading: boolean;\n      total?: number;\n      value?: number;\n      text?: string;\n    };\n  };\n}\n\nexport interface GlobalAction {\n  type: string;\n  payload: unknown;\n}\n\ntype LoadingPayload = {\n  name: string;\n  isLoading: boolean;\n  total?: number;\n  value?: number;\n  text?: string;\n};\n\nexport const StateContext = React.createContext<GlobalState | undefined>(undefined);\n\nfunction reducer(state: GlobalState, action: GlobalAction) {\n  switch (action.type) {\n    case \"loading\": {\n      const input = action.payload as LoadingPayload;\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          [input.name]: {\n            isLoading: input.isLoading,\n            total: input.total,\n            value: input.value,\n            text: input.text,\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\ninterface IActionMap {\n  updateLoading: (name: string, text?: string, value?: number, total?: number) => void;\n}\n\nexport const DispatchContext = React.createContext<IActionMap>({\n  updateLoading: () => undefined,\n});\n\nconst initState: GlobalState = {};\n\nexport default function Global({ children }: IGlobal) {\n  // for state control\n  const [state, dispatch] = React.useReducer(reducer, initState);\n\n  const actionMap: IActionMap = {\n    updateLoading: (name: string, text?: string, value?: number, total?: number) => {\n      if (state.loading?.[name]?.value === value) {\n        return;\n      }\n      if (!value || !total) {\n        dispatch({\n          type: \"loading\",\n          payload: {\n            name: name,\n            isLoading: false,\n            value: 0,\n            total: 1,\n            text: text,\n          },\n        });\n      } else {\n        dispatch({\n          type: \"loading\",\n          payload: {\n            name: name,\n            isLoading: true,\n            value: value ?? 0,\n            total: total ? total : 1,\n            text: text,\n          },\n        });\n      }\n    },\n  };\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={actionMap}>{children}</DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n}\n","import * as React from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { QueryClientProvider } from \"react-query\";\nimport { queryClient } from \"lib/react-query\";\nimport { Button } from \"@mui/material\";\nimport Theme from \"styles/Theme\";\nimport Global from \"stores/Global\";\n\ninterface IAppProvider {\n  children?: JSX.Element;\n}\n\nconst ErrorFallback = () => {\n  return (\n    <div>\n      <h2>Oops, something went wrong :( </h2>\n      <Button onClick={() => window.location.assign(window.location.origin)}>Refresh</Button>\n    </div>\n  );\n};\n\nexport const AppProvider: React.FC<IAppProvider> = ({ children }) => {\n  return (\n    <Theme>\n      <Global>\n        <ErrorBoundary FallbackComponent={ErrorFallback}>\n          <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n        </ErrorBoundary>\n      </Global>\n    </Theme>\n  );\n};\n","import React from \"react\";\n\ninterface IProps extends React.ComponentPropsWithoutRef<\"div\"> {\n  children: React.ReactNode;\n  /** The unique identifier of the tab. */\n  index: string | number;\n  /** The state variable passed in from the parent which is compared to the index */\n  value: string | number;\n}\n\n/**\n * A tab panel used to encapsulate different tab content.\n */\nconst TabPanel = ({ children, value, index, ...props }: IProps) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...props}\n    >\n      {value === index && children}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","export default __webpack_public_path__ + \"static/media/thoth-logo.1a28a729.png\";","import React from \"react\";\n\n// material ui\nimport { Typography, Box, Paper, InputBase, InputBaseProps } from \"@mui/material\";\nimport { SxProps } from \"@mui/system\";\n\ninterface IProps extends InputBaseProps {\n  /** The error text or default label text */\n  label?: string;\n  /** callback function when textbox ENTER is pressed */\n  onEnter?: () => void;\n  /** helper text for the search bar */\n  helpertext?: string;\n  /** if there is an error or not */\n  error?: boolean;\n  /** icon displayed on the left of the text box */\n  lefticon?: React.ReactNode;\n  /** icon displayed on the right of the text box */\n  righticon?: React.ReactNode;\n  /** Props added to the text box */\n  boxprops?: SxProps;\n}\n\n/**\n *\n */\nconst SearchBar = ({ onEnter, label, helpertext, boxprops, error = false, lefticon, righticon, ...props }: IProps) => {\n  return (\n    <Box>\n      <Typography variant={\"body1\"} sx={{ color: error ? \"error.main\" : \"text.secondary\" }}>\n        {label}\n      </Typography>\n      <Paper\n        variant=\"outlined\"\n        sx={{\n          p: \"8px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          borderColor: error ? \"red\" : undefined,\n          paddingLeft: 2,\n          paddingRight: 2,\n          ...boxprops,\n        }}\n      >\n        {lefticon}\n        <InputBase\n          sx={{ ml: 1, flex: 1 }}\n          placeholder={helpertext}\n          error={error}\n          onChange={props.onChange}\n          onKeyPress={ev => {\n            if (onEnter && ev.key === \"Enter\") {\n              onEnter();\n              ev.preventDefault();\n            }\n          }}\n          {...props}\n        />\n        {righticon}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SearchBar;\n","const useProd = true;\nexport const LOCAL_STORAGE_KEY = \"THOTH_SEARCH_ADVISE_HISTORY\";\nexport const THOTH_URL =\n  !useProd && (process.env.REACT_APP_DEPLOYMENT === \"STAGE\" || process.env.NODE_ENV === \"development\")\n    ? \"https://stage.thoth-station.ninja/api/v1\"\n    : \"https://khemenu.thoth-station.ninja/api/v1\";\n\n/**\n * used for vis-js graph render engine\n */\nexport const options = {\n  manipulation: {\n    enabled: false,\n  },\n  interaction: {\n    hover: true,\n    hoverConnectedEdges: false,\n    selectConnectedEdges: false,\n    selectable: true,\n  },\n  edges: {\n    chosen: false,\n    smooth: false,\n    color: {\n      color: \"#5c6470\",\n    },\n    arrowStrikethrough: false,\n    arrows: {\n      from: {\n        enabled: true,\n        type: \"triangle\",\n      },\n    },\n  },\n\n  nodes: {\n    chosen: false,\n    color: {\n      background: \"#5c6470\",\n      border: \"#fff\",\n      hover: {\n        background: \"#f39200\",\n        border: \"#fff\",\n      },\n    },\n    shape: \"dot\",\n    size: 10,\n    borderWidth: 2,\n    labelHighlightBold: false,\n    font: {\n      color: \"#393e46\",\n      strokeWidth: 2,\n      size: 15,\n    },\n  },\n  physics: {\n    hierarchicalRepulsion: {\n      damping: 0.1,\n      springLength: 200,\n    },\n    solver: \"hierarchicalRepulsion\",\n    minVelocity: 0.15,\n  },\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/advise/python\"][\"post\"];\ntype requestBody = path[\"requestBody\"][\"content\"][\"application/json\"];\ntype requestResponseSuccess = path[\"responses\"][\"202\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n    \"Content-Type\": \"application/json\";\n  };\n}\n\nexport const postAdvise = (\n  pipfile: requestBody[\"application_stack\"][\"requirements\"],\n  pipfileLock: requestBody[\"application_stack\"][\"requirements_lock\"],\n  runtime_environment: requestBody[\"runtime_environment\"],\n) => {\n  const config: IConfig = {\n    params: {\n      recommendation_type: \"stable\",\n    },\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const data: path[\"requestBody\"][\"content\"][\"application/json\"] = {\n    application_stack: {\n      requirements: pipfile,\n      requirements_format: \"pipenv\",\n      requirements_lock: pipfileLock,\n    },\n    runtime_environment: runtime_environment,\n  };\n\n  return axios.post<requestResponseSuccess>(THOTH_URL + \"/advise/python\", data, config);\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/versions\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getPackageExists = async (name: requestParams[\"name\"]) => {\n  const config: IConfig = {\n    params: {\n      name: name,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n  return axios\n    .get<requestResponseSuccess>(THOTH_URL + \"/python/package/versions\", config)\n    .then(res => {\n      return res.data.versions.length > 0;\n    })\n    .catch(() => false);\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"../../../lib/schema\";\n\ntype path = paths[\"/analyze\"][\"post\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess = path[\"responses\"][\"202\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n    \"Content-Type\": \"application/json\";\n  };\n}\n\nexport const postImageAnalyze = (image: requestParams[\"image\"]) => {\n  const config: IConfig = {\n    params: {\n      image: image,\n    },\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post<requestResponseSuccess>(THOTH_URL + \"/analyze\", {}, config);\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useInfiniteQuery, useQuery } from \"react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/container-images\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure = path[\"responses\"][\"400\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getContainerImages = async (\n  page: requestParams[\"page\"] = 0,\n  per_page: requestParams[\"per_page\"] = 100,\n) => {\n  const config: IConfig = {\n    params: {\n      page: page,\n      per_page: per_page,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n  return axios.get<requestResponseSuccess>(THOTH_URL + \"/container-images\", config);\n};\n\nexport const useContainerImages = (config: { [key: string]: unknown }) => {\n  return useQuery<AxiosResponse<requestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    queryKey: [\"container-images\"],\n    queryFn: () => getContainerImages(),\n  });\n};\n\nexport const useInfiniteContainerImages = (config: { [key: string]: unknown }) => {\n  return useInfiniteQuery<AxiosResponse<requestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    queryKey: [\"container-images\"],\n    queryFn: input => {\n      return getContainerImages(input.pageParam);\n    },\n    getNextPageParam: (lastPage: AxiosResponse<requestResponseSuccess>) => {\n      return lastPage.data.container_images.length === 0 ? undefined : lastPage.data.parameters.page + 1;\n    },\n  });\n};\n","import { Button, Grid, Typography } from \"@mui/material\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPackageExists } from \"../api\";\n\nexport const PackageSearch = () => {\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchError, setSearchError] = useState(\"\");\n\n  const handleAnalyze = async () => {\n    // if no query\n    if (searchQuery === \"\") {\n      return;\n    }\n\n    const exists = await getPackageExists(searchQuery);\n\n    if (exists) {\n      navigate(\"/package/\" + searchQuery);\n    } else {\n      setSearchError(\"Thoth does not know about that package\");\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n    if (searchError !== \"\") {\n      setSearchError(\"\");\n    }\n  };\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Grid alignSelf=\"flex-start\" item xs={12}>\n        <Typography color=\"error\" variant=\"body1\" sx={{ minHeight: 30 }}>\n          {searchError ?? \"\"}\n        </Typography>\n      </Grid>\n      <Grid container spacing={2} item xs={12}>\n        <Grid item xs={12} md={10}>\n          <SearchBar\n            error={searchError !== \"\"}\n            onChange={e => handleChange(e)}\n            helpertext={\"Search for a Python package\"}\n            type=\"search\"\n            lefticon={<SearchRoundedIcon />}\n            onEnter={handleAnalyze}\n          />\n        </Grid>\n        <Grid item xs={12} md={2}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleAnalyze()}\n            sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n          >\n            <b>Analyze</b>\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport { useMemo } from \"react\";\n\ninterface IComboBox {\n  suggestions: string[];\n  label: string;\n  help: string;\n  required: boolean;\n  error: boolean;\n  value: string | { title: string; inputValue?: string };\n  setValue: (e: { title: string; inputValue?: string } | null) => void;\n}\n\nconst filter = createFilterOptions<{ title: string; inputValue?: string }>();\n\nexport default function ComboBox({ suggestions, label, help, required, error, value, setValue }: IComboBox) {\n  const suggestions_mapped = useMemo<{ title: string; inputValue?: string }[]>(() => {\n    return suggestions.map(suggestion => {\n      return {\n        title: suggestion,\n      };\n    });\n  }, [suggestions]);\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        if (typeof newValue === \"string\") {\n          setValue({ title: newValue });\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({ title: newValue.inputValue });\n        } else {\n          setValue(newValue);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        if (params.inputValue !== \"\") {\n          filtered.push({\n            inputValue: params.inputValue,\n            title: `Add \"${params.inputValue}\"`,\n          });\n        }\n\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={suggestions_mapped ?? []}\n      getOptionLabel={option => {\n        // Value selected with enter, right from the input\n        if (typeof option === \"string\") {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.title;\n      }}\n      renderOption={(props, option) => <li {...props}>{option.title}</li>}\n      freeSolo\n      renderInput={params => (\n        <TextField {...params} fullWidth label={label} required={required} error={error} helperText={help} />\n      )}\n    />\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Paper from \"@mui/material/Paper\";\nimport ArrowForwardRoundedIcon from \"@mui/icons-material/ArrowForwardRounded\";\nimport { IconButton } from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\n\nfunction descendingComparator(a: { [key: string]: any }, b: { [key: string]: any }, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order: \"desc\" | \"asc\", orderBy: string) {\n  return order === \"desc\"\n    ? (a: { [key: string]: any }, b: { [key: string]: any }) => descendingComparator(a, b, orderBy)\n    : (a: { [key: string]: any }, b: { [key: string]: any }) => -descendingComparator(a, b, orderBy);\n}\n\ninterface IGenericTable {\n  headers: {\n    id: string;\n    label: string;\n  }[];\n  rows: { [key: string]: unknown }[];\n  action?: (row: any) => void;\n}\n\ninterface IEnhancedTableHead {\n  order: \"asc\" | \"desc\";\n  orderBy: IGenericTable[\"headers\"][number][\"id\"];\n  onRequestSort: (property: IGenericTable[\"headers\"][number][\"id\"]) => void;\n  rowCount: number;\n  headers: IGenericTable[\"headers\"];\n}\n\nfunction EnhancedTableHead(props: IEnhancedTableHead) {\n  const { order, orderBy, onRequestSort, headers } = props;\n  const createSortHandler = (property: typeof headers[number][\"id\"]) => {\n    onRequestSort(property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headers.map(headCell => (\n          <TableCell key={headCell.id} sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={() => createSortHandler(headCell.id)}\n            >\n              <b>{headCell.label}</b>\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell />\n      </TableRow>\n    </TableHead>\n  );\n}\n\nexport default function GenericTable({ headers, rows, action }: IGenericTable) {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState<typeof headers[number][\"id\"]>(headers[0].id);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleRequestSort = (property: typeof headers[number][\"id\"]) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event: any, newPage: React.SetStateAction<number>) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: { target: { value: string } }) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  if (!rows) {\n    return (\n      <div className=\"w-full h-48 flex justify-center items-center\">\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }} variant=\"outlined\">\n        <TableContainer>\n          <Table sx={{ minWidth: 750 }} size=\"medium\">\n            <EnhancedTableHead\n              order={order as IEnhancedTableHead[\"order\"]}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headers={headers}\n            />\n            <TableBody>\n              {rows\n                .slice()\n                .sort(getComparator(order as IEnhancedTableHead[\"order\"], orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow hover tabIndex={-1} key={labelId}>\n                      {headers.map((header, j) => {\n                        if (j === 0) {\n                          return (\n                            <TableCell component=\"th\" id={labelId} scope=\"row\" key={header.id + j}>\n                              {row[header.id] as string}\n                            </TableCell>\n                          );\n                        } else {\n                          return (\n                            <TableCell key={header.id + j} align=\"left\">\n                              {row[header.id] as string}\n                            </TableCell>\n                          );\n                        }\n                      })}\n\n                      {action ? (\n                        <TableCell align=\"right\">\n                          <IconButton onClick={() => action(row)}>\n                            <ArrowForwardRoundedIcon />\n                          </IconButton>\n                        </TableCell>\n                      ) : undefined}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  );\n}\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQueries, useQuery } from \"react-query\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/dependencies\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure = path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getPackageDependencies = (\n  name: requestParams[\"name\"],\n  version: requestParams[\"version\"],\n  index: requestParams[\"index\"] = \"https://pypi.org/simple\",\n) => {\n  const config: IConfig = {\n    params: {\n      name: name,\n      version: version,\n      index: index,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n  return axios.get<requestResponseSuccess>(THOTH_URL + \"/python/package/dependencies\", config);\n};\n\nexport const usePackageDependencies = (\n  name: requestParams[\"name\"],\n  version: requestParams[\"version\"],\n  config: { [key: string]: unknown },\n) => {\n  return useQuery<AxiosResponse<requestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    queryKey: [\"packageDependencies\", name, version],\n    queryFn: () => getPackageDependencies(name, version),\n  });\n};\n\nexport const usePackagesDependencies = (\n  packages: {\n    name: requestParams[\"name\"];\n    version: requestParams[\"version\"];\n  }[],\n  config: { [key: string]: unknown },\n) => {\n  return useQueries(\n    packages.map(p => {\n      return {\n        ...config,\n        queryKey: [\"packageDependencies\", p.name, p.version],\n        queryFn: () => getPackageDependencies(p.name, p.version),\n      };\n    }),\n  );\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQueries, useQuery } from \"react-query\";\nimport { paths } from \"lib/schema\";\nimport { UseQueryResult } from \"react-query/types/react/types\";\n\ntype path = paths[\"/advise/python/{analysis_id}\"][\"get\"];\nexport type AdviseDocumentRequestParams = path[\"parameters\"][\"path\"];\nexport type AdviseDocumentRequestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"202\"][\"content\"][\"application/json\"];\ntype requestResponseFailure = path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n/**\n * An async function that returns a promise for `{base_url}/advise/python`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseDocument = (analysis_id?: AdviseDocumentRequestParams[\"analysis_id\"]) => {\n  return axios.get<AdviseDocumentRequestResponseSuccess>(THOTH_URL + \"/advise/python/\" + analysis_id, {\n    headers: {\n      accept: \"application/json\",\n    },\n  });\n};\n\nexport const useAdviseDocument = (\n  analysis_id?: AdviseDocumentRequestParams[\"analysis_id\"],\n  config?: { [key: string]: unknown },\n): UseQueryResult<AxiosResponse<AdviseDocumentRequestResponseSuccess>, AxiosError<requestResponseFailure>> => {\n  return useQuery({\n    ...config,\n    enabled: !!analysis_id && analysis_id.startsWith(\"adviser\"),\n    queryKey: [\"adviseDocument\", analysis_id],\n    queryFn: () => getAdviseDocument(analysis_id),\n  });\n};\n\nexport const useAdviseDocuments = (\n  analysis_ids: AdviseDocumentRequestParams[\"analysis_id\"][],\n  config?: { [key: string]: unknown },\n): UseQueryResult<AxiosResponse<AdviseDocumentRequestResponseSuccess>, AxiosError<requestResponseFailure>>[] => {\n  return useQueries(\n    analysis_ids.map(id => {\n      return {\n        ...config,\n        queryKey: [\"adviseDocument\", id],\n        queryFn: () => getAdviseDocument(id),\n      };\n    }),\n  ) as UseQueryResult<AxiosResponse<AdviseDocumentRequestResponseSuccess>, AxiosError<requestResponseFailure>>[];\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/advise/python/{analysis_id}/log\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"path\"];\ntype requestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure = path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n/**\n * An async function that returns a promise for `{base_url}/advise/python/logs`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseLogs = async (analysis_id?: requestParams[\"analysis_id\"]) => {\n  return axios.get<requestResponseSuccess>(THOTH_URL + \"/advise/python/\" + analysis_id + \"/log\", {\n    headers: {\n      accept: \"application/json\",\n    },\n  });\n};\n\nexport const useAdviseLogs = (analysis_id?: requestParams[\"analysis_id\"], config?: { [key: string]: unknown }) => {\n  return useQuery<AxiosResponse<requestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    queryKey: [\"adviseLogs\", analysis_id],\n    queryFn: () => getAdviseLogs(analysis_id),\n  });\n};\n","/**\n * Get the time between now and a date in a string format.\n *\n * @param date\n */\nexport default function timeSince(date: Date) {\n  const startTime = new Date();\n  const seconds = Math.floor((startTime.valueOf() - date.valueOf()) / 1000);\n\n  let interval = seconds / 3.154e7;\n\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" year\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 2.628e6;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" month\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 86400;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" day\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 3600;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" hour\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 60;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" minute\" + (num !== 1 ? \"s\" : \"\");\n  }\n  const num = Math.floor(seconds);\n\n  return num + \" second\" + (num !== 1 ? \"s\" : \"\");\n}\n","import timeSince from \"utils/timeSince\";\n\n/**\n * Given either a date and time, calculated time since that date.\n * This is used to calculate how long ago an Advisor document was generated or has been generating.\n * It is specific to the document formatting\n *\n * @param finished_at - for when the advise document is completed\n * @param started_at - the time at which the document was started (is preceded by finished at)\n * @param datetime - fallback to datetime\n * @returns {string} - English version of date\n */\nexport const calcTime = (finished_at?: string | null, started_at?: string | null, datetime?: string | null) => {\n  // if status says finished\n  if (finished_at) {\n    return \"Advise finished \" + timeSince(new Date(finished_at)) + \" ago.\";\n  }\n  // if status is pending\n  else if (started_at) {\n    return \"Advise started \" + timeSince(new Date(started_at)) + \" ago.\";\n  }\n  // if status is nulled so use metadata end date\n  else if (datetime) {\n    return \"Advise finished \" + timeSince(new Date(datetime + \"Z\")) + \" ago.\";\n  } else {\n    return \"Time started/finished not available\";\n  }\n};\n","import { Button, Collapse, Grid, Paper, TextField, Typography } from \"@mui/material\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport React, { useMemo, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { postAdvise } from \"../api\";\nimport ComboBox from \"./ComboBox/ComboBox\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport { components } from \"lib/schema\";\nimport GenericTable from \"../../../components/Elements/GenericTable/GenericTable\";\nimport { useAdviseDocuments } from \"../../advise/api\";\nimport { LOCAL_STORAGE_KEY } from \"../../../config\";\nimport { calcTime } from \"../../../utils/calcTime\";\n\ninterface IAdviseState {\n  error: { [key: string]: string | undefined };\n  id?: string;\n  pipfile?: string;\n  pipfileLock?: string;\n  loading: boolean;\n  lookupType: string;\n  operating_system_name: string;\n  operating_system_version: string;\n  python_version: string;\n  cuda_version: string;\n  cudnn_version: string;\n  mkl_version: string;\n  name: string;\n  openblas_version: string;\n  openmpi_version: string;\n  base_image: string;\n}\n\nfunction reducer(state: IAdviseState, action: { [key: string]: any }) {\n  switch (action.type) {\n    case \"loading\":\n      return { ...state, loading: action.payload };\n    case \"error\":\n      return {\n        ...state,\n        error: { ...state.error, [action.param]: action.payload },\n      };\n    case \"clear-error\":\n      state.error = {};\n      return state;\n    case \"input\":\n      return {\n        ...state,\n        [action.param]: action.payload,\n        error: { ...state.error, [action.param]: undefined },\n      };\n    default:\n      throw new Error(\"Advise state dispatch error\");\n  }\n}\n\nconst headCells = [\n  {\n    id: \"document_id\",\n    label: \"Document ID\",\n  },\n  {\n    id: \"status\",\n    label: \"Status\",\n  },\n  {\n    id: \"name\",\n    label: \"Name\",\n  },\n  {\n    id: \"os_name\",\n    label: \"OS Name\",\n  },\n  {\n    id: \"os_version\",\n    label: \"OS Version\",\n  },\n  {\n    id: \"python_version\",\n    label: \"Python Version\",\n  },\n  {\n    id: \"date\",\n    label: \"Last Run\",\n  },\n];\n\nexport const initState: IAdviseState = {\n  error: {},\n  loading: false,\n  lookupType: \"id\",\n  operating_system_name: \"ubi\",\n  operating_system_version: \"8\",\n  python_version: \"3.8\",\n  cuda_version: \"\",\n  cudnn_version: \"\",\n  mkl_version: \"\",\n  name: \"\",\n  openblas_version: \"\",\n  openmpi_version: \"\",\n  base_image: \"\",\n};\n\nexport const AdviseCreation = () => {\n  const navigate = useNavigate();\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const localHistory: string[] = useMemo(() => {\n    const ids = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (ids) {\n      return ids.split(\",\").filter(s => s !== \"\");\n    } else {\n      return [];\n    }\n  }, []);\n\n  const adviseHistory = useAdviseDocuments(localHistory);\n\n  const rows = useMemo(() => {\n    if (adviseHistory) {\n      return adviseHistory.map(doc => {\n        const status = () => {\n          if (doc.data?.data?.status) {\n            return doc.data?.data?.status.state;\n          } else if (doc.data?.data.result.report?.products) {\n            return \"success\";\n          } else {\n            return \"error\";\n          }\n        };\n        return {\n          document_id: doc.data?.data?.metadata?.document_id,\n          name: doc.data?.data?.result?.report?.products?.[0].project.runtime_environment?.name,\n          os_name: doc.data?.data?.result?.report?.products?.[0].project.runtime_environment?.operating_system?.name,\n          os_version:\n            doc.data?.data?.result?.report?.products?.[0].project.runtime_environment?.operating_system?.version,\n          python_version: doc.data?.data?.result?.report?.products?.[0].project.runtime_environment?.python_version,\n          status: status(),\n          date: calcTime(\n            doc.data?.data?.status?.finished_at,\n            doc.data?.data?.status?.started_at,\n            doc.data?.data?.metadata?.datetime,\n          ),\n        };\n      });\n    } else {\n      return [];\n    }\n  }, [adviseHistory]);\n\n  const tableRowAction = (row: { document_id: string }) => {\n    navigate(\"/advise/\" + row.document_id);\n  };\n\n  const isValid = () => {\n    if (state.lookupType === \"id\") {\n      if (!state.id || state.id === \"\") {\n        dispatch({\n          type: \"error\",\n          param: \"id\",\n          payload: \"Field cant be empty\",\n        });\n        return false;\n      }\n    } else {\n      let valid = true;\n      if (!state.pipfile) {\n        valid = false;\n        dispatch({\n          type: \"error\",\n          param: \"pipfile\",\n          payload: \"Field cant be empty\",\n        });\n      }\n      if (!state.pipfileLock) {\n        valid = false;\n        dispatch({\n          type: \"error\",\n          param: \"pipfileLock\",\n          payload: \"Field cant be empty\",\n        });\n      }\n      if (!state.name) {\n        valid = false;\n        dispatch({\n          type: \"error\",\n          param: \"name\",\n          payload: \"Field cant be empty\",\n        });\n      }\n\n      return valid;\n    }\n\n    return true;\n  };\n\n  const handleAnalyze = async () => {\n    if (state.loading || !isValid()) {\n      return;\n    }\n\n    if (state.lookupType === \"id\") {\n      navigate(\"/advise/\" + state.id);\n    } else {\n      dispatch({ type: \"loading\", payload: true });\n      const runtime_environment: components[\"schemas\"][\"RuntimeEnvironment\"] = {\n        operating_system: {\n          name: state.operating_system_name,\n          version: state.operating_system_version,\n        },\n        python_version: state.python_version,\n        base_image: state.base_image,\n        cuda_version: state.cuda_version,\n        cudnn_version: state.cudnn_version,\n        mkl_version: state.mkl_version,\n        name: state.name,\n        openblas_version: state.openblas_version,\n        openmpi_version: state.openmpi_version,\n      };\n\n      (Object.keys(runtime_environment) as Array<keyof typeof runtime_environment>).forEach(key => {\n        if (runtime_environment[key] === \"\") {\n          delete runtime_environment[key];\n        }\n      });\n      if (\n        runtime_environment?.[\"operating_system\"]?.[\"name\"] === \"\" ||\n        runtime_environment?.[\"operating_system\"]?.[\"version\"] === \"\"\n      ) {\n        delete runtime_environment[\"operating_system\"];\n      }\n\n      if (!state.pipfile) {\n        dispatch({\n          type: \"error\",\n          param: \"pipfile\",\n          payload: \"Pipfile is required\",\n        });\n      } else if (!state.pipfileLock) {\n        dispatch({\n          type: \"error\",\n          param: \"pipfileLock\",\n          payload: \"Pipfile.lock is required\",\n        });\n      } else {\n        postAdvise(state.pipfile, state.pipfileLock, runtime_environment)\n          .then(response => {\n            dispatch({ type: \"loading\", payload: false });\n            navigate(\"/advise/\" + response.data.analysis_id + \"/summary\");\n          })\n          .catch(error => {\n            dispatch({ type: \"loading\", payload: false });\n            if (error?.response?.status === 400) {\n              if (error?.response?.data?.error?.includes(\"Pipfile.lock\")) {\n                dispatch({\n                  type: \"error\",\n                  param: \"pipfileLock\",\n                  payload: error?.response?.data?.error,\n                });\n              } else if (error?.response?.data?.error?.includes(\"Pipfile\")) {\n                dispatch({\n                  type: \"error\",\n                  param: \"pipfile\",\n                  payload: error?.response?.data?.error,\n                });\n              }\n            }\n          });\n      }\n    }\n  };\n\n  return (\n    <>\n      <Collapse in={state.lookupType === \"id\"}>\n        <>\n          <Grid container justifyContent=\"center\">\n            <Grid item xs={12}>\n              <Typography color=\"error\" variant=\"body1\" sx={{ minHeight: 30 }}>\n                {state.error?.id}\n              </Typography>\n            </Grid>\n            <Grid container item xs={12} spacing={2}>\n              <Grid item xs={12} md={10}>\n                <SearchBar\n                  error={state.error?.id !== undefined}\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"id\",\n                      payload: e.target.value,\n                    })\n                  }\n                  helpertext={\"Analysis ID\"}\n                  type=\"search\"\n                  boxprops={{ marginRight: 2 }}\n                  lefticon={<SearchRoundedIcon />}\n                  onEnter={handleAnalyze}\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => handleAnalyze()}\n                  sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                >\n                  <b>Analyze</b>\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Button\n            onClick={() =>\n              dispatch({\n                type: \"input\",\n                param: \"lookupType\",\n                payload: \"manual\",\n              })\n            }\n          >\n            New Advise\n          </Button>\n          <Button\n            onClick={() =>\n              dispatch({\n                type: \"input\",\n                param: \"lookupType\",\n                payload: \"history\",\n              })\n            }\n          >\n            History\n          </Button>\n        </>\n      </Collapse>\n\n      <Collapse in={state.lookupType === \"history\"}>\n        <>\n          <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n            Local Thoth Advise History\n          </Typography>\n          <GenericTable headers={headCells} rows={rows} action={tableRowAction} />\n        </>\n      </Collapse>\n\n      <Collapse in={state.lookupType === \"manual\"}>\n        <>\n          <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n            Advise Parameters\n          </Typography>\n          <Paper\n            sx={{\n              backgroundColor: \"white\",\n              padding: 3,\n              marginBottom: 5,\n            }}\n            variant=\"outlined\"\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <SearchBar\n                  label={state.error?.pipfile ? state.error?.pipfile : \"Pipfile contents\"}\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"pipfile\",\n                      payload: e.target.value,\n                    })\n                  }\n                  error={state.error?.pipfile !== undefined}\n                  multiline\n                  rows={8}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <SearchBar\n                  label={state.error?.pipfileLock ? state.error?.pipfileLock : \"Pipfile.lock contents\"}\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"pipfileLock\",\n                      payload: e.target.value,\n                    })\n                  }\n                  error={state.error?.pipfileLock !== undefined}\n                  multiline\n                  rows={8}\n                />\n              </Grid>\n            </Grid>\n            <Grid container mt={4} spacing={2}>\n              <Grid item xs={12} sm={6} md={4}>\n                <TextField\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"base_image\",\n                      payload: e.target.value,\n                    })\n                  }\n                  value={state.base_image}\n                  sx={{ minWidth: \"100%\" }}\n                  label=\"Base Image\"\n                  required={false}\n                  helperText=\"A base container image used to run the application.\"\n                  error={state.error?.base_image !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"cuda_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.cuda_version}\n                  suggestions={[\"9.0\"]}\n                  label=\"CUDA Version\"\n                  required={false}\n                  help=\"Nvidia CUDA version which the application uses.\"\n                  error={state.error?.cuda_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"cudnn_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.cudnn_version}\n                  suggestions={[\"8\"]}\n                  label=\"cuDNN Version\"\n                  required={false}\n                  help=\"NVIDIA cuDNN version used, if any.\"\n                  error={state.error?.cudnn_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"mkl_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.mkl_version}\n                  suggestions={[\"2021.1.1\"]}\n                  label=\"MKL Version\"\n                  required={false}\n                  help=\"Intel® Math Kernel Library version used, if any.\"\n                  error={state.error?.mkl_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"name\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.name}\n                  suggestions={[\"ubi:8-prod\"]}\n                  label=\"Name\"\n                  required={true}\n                  help=\"User defined name of the runtime environment.\"\n                  error={state.error?.name !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"openblas_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.openblas_version}\n                  suggestions={[\"0.3.13\"]}\n                  label=\"OpenBLAS Version\"\n                  required={false}\n                  help=\"OpenBLAS version used, if any.\"\n                  error={state.error?.openblas_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"openmpi_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.openmpi_version}\n                  suggestions={[\"4.1\"]}\n                  label=\"Open MPI Version\"\n                  required={false}\n                  help=\"Open MPI version used, if any.\"\n                  error={state.error?.openmpi_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <TextField\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"operating_system_name\",\n                      payload: e.target.value,\n                    })\n                  }\n                  value={state.operating_system_name}\n                  sx={{ minWidth: \"100%\" }}\n                  label=\"Operating System Name\"\n                  required={false}\n                  helperText=\"Operating system name used.\"\n                  error={state.error?.operating_system_name !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <TextField\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"operating_system_version\",\n                      payload: e.target.value,\n                    })\n                  }\n                  value={state.operating_system_version}\n                  sx={{ minWidth: \"100%\" }}\n                  label=\"Operating System Version\"\n                  required={false}\n                  helperText=\"Operating system version used.\"\n                  error={state.error?.operating_system_version !== undefined}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <ComboBox\n                  setValue={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"python_version\",\n                      payload: e?.title ?? \"\",\n                    })\n                  }\n                  value={state.python_version}\n                  suggestions={[\"2.7\", \"3.6\", \"3.7\", \"3.8\", \"3.9\"]}\n                  label=\"Python Version\"\n                  required={false}\n                  help=\"Python version on which the application runs on.\"\n                  error={state.error?.python_version !== undefined}\n                />\n              </Grid>\n              <Grid container item xs={12} spacing={2}>\n                <Grid item xs={6} md={6}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() =>\n                      dispatch({\n                        type: \"input\",\n                        param: \"lookupType\",\n                        payload: \"id\",\n                      })\n                    }\n                    sx={{\n                      minHeight: \"100%\",\n                      minWidth: \"100%\",\n                    }}\n                  >\n                    <b>Cancel</b>\n                  </Button>\n                </Grid>\n                <Grid item xs={6}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleAnalyze()}\n                    loading={state.loading}\n                    sx={{\n                      minHeight: \"100%\",\n                      minWidth: \"100%\",\n                    }}\n                  >\n                    <b>Analyze</b>\n                  </LoadingButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        </>\n      </Collapse>\n    </>\n  );\n};\n","import { Button, Collapse, Grid, Typography } from \"@mui/material\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport React, { useMemo, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { postImageAnalyze, useContainerImages } from \"../api\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport GenericTable from \"components/Elements/GenericTable/GenericTable\";\nimport timeSince from \"utils/timeSince\";\n\ninterface ImageSearchState {\n  error: { [key: string]: string | undefined };\n  loading: boolean;\n  lookupType: string;\n  id: string;\n}\n\nfunction reducer(state: ImageSearchState, action: { [key: string]: any }) {\n  switch (action.type) {\n    case \"loading\":\n      return { ...state, loading: action.payload };\n    case \"error\":\n      return {\n        ...state,\n        error: { ...state.error, [action.param]: action.payload },\n      };\n    case \"clear-error\":\n      state.error = {};\n      return state;\n    case \"input\":\n      return {\n        ...state,\n        [action.param]: action.payload,\n        error: { ...state.error, [action.param]: undefined },\n      };\n    default:\n      throw new Error(\"Image state dispatch error\");\n  }\n}\n\nconst headCells = [\n  {\n    id: \"environment_name\",\n    label: \"Image Name\",\n  },\n  {\n    id: \"os_name\",\n    label: \"OS Name\",\n  },\n  {\n    id: \"os_version\",\n    label: \"OS Version\",\n  },\n  {\n    id: \"python_version\",\n    label: \"Python Version\",\n  },\n  {\n    id: \"date\",\n    label: \"Last Updated\",\n  },\n];\n\nconst initState: ImageSearchState = {\n  error: {},\n  loading: false,\n  lookupType: \"id\",\n  id: \"\",\n};\n\nexport const ImageSearch = () => {\n  const navigate = useNavigate();\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const images = useContainerImages({ useErrorBoundary: false });\n\n  const rows = useMemo(() => {\n    if (images?.data?.data?.container_images) {\n      return images?.data?.data?.container_images.map(image => {\n        return {\n          ...image,\n          date: timeSince(new Date(image.datetime)) + \" ago\",\n        };\n      });\n    } else {\n      return [];\n    }\n  }, [images?.data]);\n\n  const tableRowAction = (row: { package_extract_document_id: string; environment_name: string }) => {\n    navigate(\"/image/\" + row.package_extract_document_id, {\n      state: { image_name: row.environment_name },\n    });\n  };\n\n  const handleAnalyze = async () => {\n    if (state.loading) {\n      return;\n    }\n\n    if (state.id.includes(\"package-extract\")) {\n      navigate(\"/image/\" + state.id);\n      return;\n    }\n\n    dispatch({ type: \"loading\", payload: true });\n\n    postImageAnalyze(state.id)\n      .then(response => {\n        dispatch({ type: \"loading\", payload: false });\n        navigate(\"/image/\" + response.data.analysis_id, {\n          state: { image_name: state.id },\n        });\n      })\n      .catch(error => {\n        dispatch({ type: \"loading\", payload: false });\n        if (error?.response?.status === 400) {\n          dispatch({\n            type: \"error\",\n            param: \"id\",\n            payload: error?.response?.data?.error ?? \"An unknown error occurred\",\n          });\n        }\n      });\n  };\n\n  return (\n    <>\n      <Collapse in={state.lookupType === \"id\"}>\n        <>\n          <Grid container justifyContent=\"center\">\n            <Grid item xs={12}>\n              <Typography color=\"error\" variant=\"body1\" sx={{ minHeight: 30 }}>\n                {state.error?.id}\n              </Typography>\n            </Grid>\n            <Grid container item xs={12} spacing={2}>\n              <Grid item xs={12} md={10}>\n                <SearchBar\n                  error={state.error?.id != undefined}\n                  onChange={e =>\n                    dispatch({\n                      type: \"input\",\n                      param: \"id\",\n                      payload: e.target.value,\n                    })\n                  }\n                  helpertext={\"Analysis ID or image name\"}\n                  type=\"search\"\n                  boxprops={{ mr: 2 }}\n                  lefticon={<SearchRoundedIcon />}\n                  onEnter={handleAnalyze}\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleAnalyze}\n                  sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                >\n                  <b>Analyze</b>\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Button\n            onClick={() =>\n              dispatch({\n                type: \"input\",\n                param: \"lookupType\",\n                payload: \"lookup\",\n              })\n            }\n          >\n            Lookup Thoth Images\n          </Button>\n        </>\n      </Collapse>\n\n      <Collapse in={state.lookupType === \"lookup\"}>\n        <>\n          <Typography variant={\"h6\"} mt={3} mb={1} ml={2}>\n            Available Thoth Container Images\n          </Typography>\n          <GenericTable headers={headCells} rows={rows} action={tableRowAction} />\n        </>\n      </Collapse>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/footer-logo.7d0f9037.png\";","import React from \"react\";\n\nimport { Box, Link, Paper, Stack, Typography } from \"@mui/material\";\nimport logo from \"assets/footer-logo.png\";\n\nexport const Footer = () => {\n  return (\n    <Paper variant=\"outlined\" sx={{ padding: 4, marginTop: 10, marginBottom: 5 }}>\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"flex-start\">\n        <img style={{ paddingLeft: 2, paddingRight: 2, height: \"40px\" }} alt=\"Red Hat Sponsor Logo\" src={logo} />\n        <Stack sx={{ paddingX: 2 }}>\n          <Typography\n            sx={{\n              textTransform: \" uppercase\",\n              paddingBottom: \"20px\",\n            }}\n            variant=\"h6\"\n          >\n            Useful links\n          </Typography>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://github.com/orgs/thoth-station/projects/\">\n            GitHub project board\n          </Link>\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"http://bit.ly/thoth-on-youtube\">\n            YouTube channel\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://twitter.com/ThothStation\">\n            Twitter\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://github.com/thoth-station\">\n            GitHub organization\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://www.kaggle.com/thothstation\">\n            Kaggle datasets\n          </Link>\n        </Stack>\n\n        <Stack sx={{ paddingX: 2 }}>\n          <Typography\n            sx={{\n              textTransform: \" uppercase\",\n              paddingBottom: \"20px\",\n            }}\n            variant=\"h6\"\n          >\n            Info\n          </Typography>\n\n          <Link\n            underline=\"hover\"\n            sx={{ paddingBottom: 1 }}\n            href=\"https://thoth-station.ninja/docs/developers/adviser/landing_page.html#landing-page\"\n          >\n            Thoth&apos;s landing page\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://thoth-station.ninja/docs/developers/adviser/\">\n            Main documentation page\n          </Link>\n        </Stack>\n\n        <Stack sx={{ paddingX: 2 }}>\n          <Typography\n            sx={{\n              textTransform: \" uppercase\",\n              paddingBottom: \"20px\",\n            }}\n            variant=\"h6\"\n          >\n            Friends\n          </Typography>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://github.com/AICoE/aicoe-ci\">\n            AICoE-CI\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"https://www.operate-first.cloud/\">\n            Operate First\n          </Link>\n\n          <Link underline=\"hover\" sx={{ paddingBottom: 1 }} href=\"http://opendatahub.io/\">\n            Open Data Hub\n          </Link>\n        </Stack>\n      </Box>\n    </Paper>\n  );\n};\n","// react\nimport React, { useState } from \"react\";\n\n// material-ui\nimport { Typography, Grid, Divider, ToggleButtonGroup, ToggleButton, Box } from \"@mui/material\";\n\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\n// local\nimport TabPanel from \"components/Elements/TabPanel\";\nimport logo from \"assets/thoth-logo.png\";\n\nimport { PackageSearch, AdviseCreation, ImageSearch } from \"../components\";\nimport { Footer } from \"../../../components/Footer\";\n\nexport const Home = () => {\n  // utility states\n  const [mode, setMode] = useState<string>(\"package\");\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  // change mode view\n  const handleMode = (event: any, newMode: string) => {\n    if (newMode) {\n      setMode(newMode);\n    }\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" sx={{ paddingX: 2, maxWidth: \"1000px\", margin: \"auto\" }}>\n      <Grid item>\n        <Box sx={{ marginTop: 10 }}>\n          <img alt=\"Thoth Logo\" src={logo} height={!matches ? \"auto\" : 300} width={\"100%\"} />\n        </Box>\n      </Grid>\n      <Grid container item justifyContent=\"center\" mt={5} spacing={0}>\n        <Grid item xs={12} alignItems=\"left\" mb={3}>\n          <Typography variant=\"h4\">\n            <b>Thoth Search</b>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} alignItems=\"left\">\n          <Typography variant=\"subtitle1\">\n            Thoth Search is a tool that runs analysis on a Python application. It utilizes package metadata and Thoth\n            Adviser to analyse and recommend a software stack. You can run analysis on an entire Python application\n            using a properly formatted Pipfile and Pipfile.lock. Alternatively, you can analyse a single Python package\n            to see what Thoth knows about the package.\n          </Typography>\n        </Grid>\n        <Grid item textAlign=\"center\" xs={12} mt={3} mb={4}>\n          <ToggleButtonGroup value={mode} exclusive onChange={handleMode} size={!matches ? \"small\" : \"large\"}>\n            <ToggleButton value=\"package\">\n              <b>package</b>\n            </ToggleButton>\n            <ToggleButton value=\"environment\">\n              <b>environment</b>\n            </ToggleButton>\n            <ToggleButton value=\"image\">\n              <b>image</b>\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item xs={12} sx={{ marginBottom: 3 }}>\n          <Divider />\n          <TabPanel value={mode} index=\"package\">\n            <PackageSearch />\n          </TabPanel>\n          <TabPanel value={mode} index=\"environment\">\n            <AdviseCreation />\n          </TabPanel>\n          <TabPanel value={mode} index=\"image\">\n            <ImageSearch />\n          </TabPanel>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Footer />\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\n\nexport const NotFound = () => {\n  return <div>404</div>;\n};\n","import React from \"react\";\n\n// material-ui\nimport { Link, Stack, BoxProps, Typography } from \"@mui/material\";\n\ninterface IIconText extends BoxProps {\n  /** The text shown */\n  text: string;\n  /** The icon component to be displayed */\n  icon: React.ReactNode;\n  /** Optional link if text is selected */\n  link?: string;\n}\n\n/**\n * Text with an icon to the right of it.\n */\nconst IconText = ({ text, icon, link, ...props }: IIconText) => {\n  return (\n    <Stack {...props} direction=\"row\" spacing={1} alignItems=\"center\">\n      {icon}\n      {link ? (\n        <Link\n          underline=\"none\"\n          href={link ? link : undefined}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          variant=\"body2\"\n          align=\"center\"\n        >\n          {text}\n        </Link>\n      ) : (\n        <Typography variant=\"body2\" align=\"center\">\n          {text}\n        </Typography>\n      )}\n    </Stack>\n  );\n};\n\nexport default IconText;\n\nIconText.propTypes = {};\n","import React from \"react\";\nimport { Button, Alert, AlertColor, AlertProps } from \"@mui/material\";\n\ninterface ICustomAlert extends AlertProps {\n  /** The alert content. */\n  info: {\n    /** Link to navigate to if alert is actioned on. */\n    link?: string;\n    /** Text displayed in the alert. */\n    message: string;\n    /** Severity (color) of alert: `[\"ERROR\", \"WARNING\", \"INFO\", \"SUCCESS\"]`. */\n    type: AlertColor;\n  };\n}\n\n/**\n * A custom alert card.\n */\nconst CustomAlert = ({ info, ...props }: ICustomAlert) => {\n  return (\n    <Alert\n      action={\n        info.link ? (\n          <Button color=\"inherit\" size=\"small\" href={info?.link}>\n            DETAILS\n          </Button>\n        ) : undefined\n      }\n      severity={info.type}\n      {...props}\n    >\n      {info?.message}\n    </Alert>\n  );\n};\n\nexport default CustomAlert;\n","// React\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Chip, ChipProps, AlertColor, Stack, Paper } from \"@mui/material\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport CustomAlert from \"./CustomAlert\";\n\n// utils\nimport { calcTime } from \"utils/calcTime\";\nimport { AdviseDocumentRequestParams, AdviseDocumentRequestResponseSuccess } from \"../../api\";\n\ninterface IAdviseHeader {\n  /** the Advise document id*/\n  adviseDocument?: AdviseDocumentRequestResponseSuccess;\n  /** the Advise document logs*/\n  lastLog?: { [key: string]: string };\n}\n\n/**\n * Displays basic Advise document information and\n * displays any errors, info, or warnings that came up\n * in the document generation.\n */\nexport const AdviseHeader = ({ adviseDocument, lastLog }: IAdviseHeader) => {\n  // get status of the report\n  const [statusText, statusColor] = useMemo<[string, ChipProps[\"color\"]]>(() => {\n    // if report is done\n    if (adviseDocument?.result?.report) {\n      if (adviseDocument.result.report.ERROR) {\n        return [\"ERROR\", \"error\"];\n      } else {\n        return [\"COMPLETE\", \"success\"];\n      }\n    } else if (adviseDocument?.result?.error) {\n      return [\"ERROR\", \"error\"];\n    }\n    // if report is not done\n    else if (adviseDocument?.status?.state) {\n      return [adviseDocument.status.state.toUpperCase(), \"info\"];\n    } else {\n      return [\"UNKNOWN\", undefined];\n    }\n  }, [adviseDocument]);\n\n  return (\n    <div>\n      <Paper variant=\"outlined\" sx={{ padding: 2 }}>\n        <Typography variant=\"h5\" mb={1}>\n          <b>\n            {adviseDocument?.metadata?.document_id ??\n              (adviseDocument?.parameters as AdviseDocumentRequestParams)?.analysis_id}\n          </b>\n        </Typography>\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n          <Chip label={statusText} color={statusColor} />\n          <IconText\n            text={calcTime(\n              adviseDocument?.status?.finished_at,\n              adviseDocument?.status?.started_at,\n              adviseDocument?.metadata?.datetime,\n            )}\n            icon={<AccessTimeIcon />}\n          />\n        </Stack>\n      </Paper>\n      <>\n        {statusText === \"ERROR\" ? (\n          <CustomAlert\n            variant=\"filled\"\n            sx={{ margin: 1, marginTop: 2 }}\n            info={{\n              message: adviseDocument?.result?.report?.ERROR ?? adviseDocument?.result?.error_msg ?? \"\",\n              type: \"error\",\n            }}\n          />\n        ) : statusText !== \"COMPLETE\" ? (\n          <CustomAlert\n            variant=\"outlined\"\n            sx={{ margin: 1, marginTop: 2 }}\n            info={{\n              message: lastLog?.message ?? \"\",\n              type: lastLog?.levelname?.toLowerCase() as AlertColor,\n            }}\n          />\n        ) : undefined}\n      </>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { TableHead, TableRow, TableSortLabel, Box, TableCell } from \"@mui/material\";\n\nimport { visuallyHidden } from \"@mui/utils\";\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    label: \"Package\",\n  },\n  {\n    id: \"depth\",\n    numeric: true,\n    label: \"Depth\",\n  },\n  {\n    id: \"license\",\n    numeric: false,\n    label: \"License\",\n  },\n  {\n    id: \"dependencies\",\n    numeric: true,\n    label: \"Direct Dependencies\",\n  },\n];\n\ninterface IEnhancedTableHead {\n  /** the function used to sort an individual column */\n  onRequestSort: (c: string) => void;\n  /** the order in which the column is sorted on*/\n  order: \"asc\" | \"desc\";\n  /** The column in which to order the table by */\n  orderBy: string;\n}\n\n/**\n * A specific custom table header for packages.\n * It handles sorting individual columns.\n */\nfunction EnhancedTableHead({ order, orderBy, onRequestSort }: IEnhancedTableHead) {\n  const createSortHandler = (property: string) => {\n    onRequestSort(property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding=\"normal\"\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={() => createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nexport default EnhancedTableHead;\n","import React, { useContext, useMemo, useState } from \"react\";\n\nimport { Chip, List, ListItem, ListItemSecondaryAction, ListItemText, Stack, Typography } from \"@mui/material\";\n\n// local\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface IPackageList {\n  graph?: Graph<Node<PackageNodeValue>>;\n}\n\ntype PackageList = {\n  name: string;\n  key: string;\n  summary?: string;\n  version?: string;\n  warnings: number;\n  errors: number;\n}[];\n\n/**\n * The table cells and total structure specific to\n * python packages.\n */\nexport function PackageList({ graph }: IPackageList) {\n  const navigate = useNavigate();\n\n  const { selected, setSelected } = useContext(SelectedPackageContext) ?? {\n    setSelected: () => console.log(\"missing callback\"),\n  };\n\n  const [search, setSearch] = useState<string>(\"\");\n\n  const handleSearch = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setSearch(event.target.value);\n  };\n\n  // format data\n  const packageList = useMemo(() => {\n    if (!graph) {\n      return [];\n    }\n\n    const packages: PackageList = [];\n    graph.nodes.forEach(node => {\n      if (node.value.depth === -1) {\n        return;\n      }\n      packages.push({\n        name: node.value.name ?? node.key,\n        key: node.key,\n        summary: node?.value?.metadata?.Summary ?? \"\",\n        version: node?.value.version,\n        warnings: node.value.justifications?.filter(j => j.type === \"WARNING\")?.length ?? 0,\n        errors: node.value.justifications?.filter(j => j.type === \"ERROR\")?.length ?? 0,\n      });\n    });\n\n    return packages;\n  }, [graph]);\n\n  if (!graph) {\n    return null;\n  }\n\n  return (\n    <Stack spacing={2} sx={{ maxHeight: \"100%\" }}>\n      <SearchBar onChange={handleSearch} lefticon={<SearchRoundedIcon />} />\n      <List sx={{ overflow: \"scroll\" }} dense>\n        {packageList\n          .filter(p => p.name.startsWith(search))\n          .map(p => {\n            return (\n              <ListItem\n                key={p.key}\n                button\n                onClick={() => {\n                  setSelected(p.key);\n                  navigate(\"../packages/\" + p.key);\n                }}\n                selected={selected === p.key}\n                // divider\n                sx={{\n                  borderRadius: 1.5,\n                  // marginY: 0.5,\n                  // backgroundColor:\n                  //     selected === p.key\n                  //         ? hexFromArgb(\n                  //               activeColor.light\n                  //                   .colorContainer,\n                  //           )\n                  //         : undefined,\n                  // color:\n                  //     selected === p.key\n                  //         ? hexFromArgb(\n                  //               activeColor.light\n                  //                   .onColorContainer,\n                  //           )\n                  //         : undefined,\n                }}\n              >\n                <ListItemText primary={<Typography variant=\"h5\">{p.name}</Typography>} secondary={`v${p.version}`} />\n                <ListItemSecondaryAction>\n                  <Stack direction=\"row\" spacing={1}>\n                    {p.warnings ? (\n                      <Chip\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        icon={<WarningAmberOutlinedIcon />}\n                        label={p.warnings}\n                        color=\"warning\"\n                      />\n                    ) : undefined}\n                    {p.errors ? (\n                      <Chip\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        icon={<ErrorOutlineOutlinedIcon />}\n                        label={p.errors}\n                        color=\"error\"\n                      />\n                    ) : undefined}\n                  </Stack>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n      </List>\n    </Stack>\n  );\n}\n","import { Box, CircularProgress, LinearProgress, Typography } from \"@mui/material\";\nimport React, { useMemo } from \"react\";\n\ninterface ILoading {\n  type: \"circular\" | \"bar\";\n  label?: string;\n  progress?: number;\n}\n\nconst Loading = ({ type, label, progress }: ILoading) => {\n  return useMemo(() => {\n    if (type === \"bar\") {\n      return (\n        <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <LinearProgress variant={progress ? \"determinate\" : undefined} value={progress} />\n          <Typography variant=\"body2\">{label}</Typography>\n        </Box>\n      );\n    } else {\n      return (\n        <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <CircularProgress variant={progress ? \"determinate\" : undefined} value={progress} />\n          <Typography variant=\"body2\">{label}</Typography>\n        </Box>\n      );\n    }\n  }, [type, label, progress]);\n};\n\nexport default Loading;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { SelectedPackage } from \"../components\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\nimport { PackageList } from \"../components/PackageList\";\nimport Loading from \"components/Elements/Loading/Loading\";\nimport { StateContext } from \"stores/Global\";\nimport { useParams } from \"react-router-dom\";\n\ntype SelectedPackageType = {\n  selected: string;\n  setSelected: (c: string) => void;\n};\n\nexport const SelectedPackageContext = React.createContext<SelectedPackageType>({} as SelectedPackageType);\n\ninterface IAdviseDetails {\n  graph?: Graph<Node<PackageNodeValue>>;\n}\n\nexport const AdviseDetails = ({ graph }: IAdviseDetails) => {\n  const params = useParams();\n  const [selected, setSelected] = useState<string>(\"\");\n  const state = useContext(StateContext);\n\n  useEffect(() => {\n    if (params.pkg) {\n      setSelected(params.pkg);\n    }\n  }, [params.pkg]);\n\n  if (!graph) {\n    if (!state?.loading?.[\"graph\"]) {\n      return (\n        <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"h5\" align=\"center\">\n            Package data not available\n          </Typography>\n          <Typography variant=\"body2\" align=\"center\">\n            The advise run encountered an error.\n          </Typography>\n        </Box>\n      );\n    }\n    return (\n      <Loading\n        type=\"circular\"\n        label={state?.loading?.[\"graph\"].text}\n        progress={((state?.loading?.[\"graph\"].value ?? 0) / (state?.loading?.[\"graph\"].total ?? 1)) * 100}\n      />\n    );\n  }\n\n  if (graph.nodes.size === 1) {\n    return (\n      <Box height=\"100%\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" align=\"center\">\n          No packages found\n        </Typography>\n        <Typography variant=\"body2\" align=\"center\">\n          The advise document encountered an error resulting in no Pipfile.lock\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <SelectedPackageContext.Provider value={{ selected, setSelected }}>\n      <Box flexDirection=\"column\" display=\"flex\" height=\"100%\" justifyContent=\"center\" alignItems=\"flex-start\">\n        <Box flexGrow={1} display=\"flex\" sx={{ overflowY: \"hidden\", width: \"100%\" }}>\n          <Box overflow=\"auto\" sx={{ marginRight: 2, minWidth: \"500px\" }}>\n            <PackageList graph={graph} />\n          </Box>\n          <Box overflow=\"auto\" sx={{ minWidth: \"50%\", width: \"100%\" }}>\n            {!selected || !graph ? (\n              <Box height=\"100%\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Typography variant=\"h5\" align=\"center\">\n                  Choose a package\n                </Typography>\n                <Typography variant=\"body2\" align=\"center\">\n                  Click on a package from the packages found in the Pipfile.lock\n                </Typography>\n              </Box>\n            ) : (\n              <SelectedPackage graph={graph} />\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </SelectedPackageContext.Provider>\n  );\n};\n","// react\nimport React from \"react\";\n\n// material-ui\nimport { Typography } from \"@mui/material\";\n\ninterface ILockfileView {\n  /** The Pipfile.lock json object */\n  file: { default: { [key: string]: unknown } };\n}\n\n/**\n * Renders out a Pipfile.lock file and attaches\n * `<a>` tags to package names, which is used to\n *  scroll to certain spot in the lock file\n */\nexport const LockfileView = ({ file }: ILockfileView) => {\n  return (\n    <Typography variant=\"caption\">\n      <pre>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: JSON.stringify(file, undefined, 4)?.replaceAll(\n              new RegExp('(\"' + Object.keys(file?.default)?.join('\"|\"') + '\")', \"g\"),\n              (match: string) => {\n                return `<a id=\"${match.slice(1, -1)}\">${match}</a>`;\n              },\n            ),\n          }}\n        />\n      </pre>\n    </Typography>\n  );\n};\n","// react\nimport React from \"react\";\n\nimport { Typography, Grid } from \"@mui/material\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\ninterface IPopup {\n  node: Node<PackageNodeValue>;\n}\n\n/**\n * Graph hover model appears when you hover over a node on the graph.\n */\nconst Popup = ({ node }: IPopup) => {\n  return (\n    <div>\n      <Grid container alignItems=\"center\">\n        <Grid item xs={6}>\n          <Typography variant=\"h6\">\n            <b>{node.value.id}</b>\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography ml={2} variant=\"body1\">\n            v{node.value.version ?? \"NaN\"}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Typography gutterBottom variant=\"body2\">\n        {node.value?.metadata?.Summary ?? \"NaN\"}\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item>\n          <IconText text={node.value?.metadata?.License ?? \"NaN\"} icon={<GavelIcon />} />\n        </Grid>\n        <Grid item>\n          <IconText\n            ml={2}\n            text={\n              node.value?.latestVersion // TODO is not correct\n                ? \"Latest version is installed\"\n                : \"Installed version is NOT the latest.\"\n            }\n            icon={<BookmarkIcon />}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Popup;\n","// react\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// utils and configs\nimport { options } from \"config\";\n\n// vis-network\nimport { Network, DataSet, Data } from \"vis-network/standalone\";\n\n// local\nimport Popup from \"../Popup\";\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\ninterface INetworkGraph {\n  graph: Graph<Node<PackageNodeValue>>;\n  root?: Node<PackageNodeValue>;\n  graphHeight?: string | number;\n}\n\n/**\n * Renders a network graph visualization using `vis-network`.\n */\nconst NetworkGraph = ({ graph, graphHeight, root, ...props }: INetworkGraph) => {\n  const visJsRef = useRef<HTMLDivElement>(null);\n  const { selected } = useContext(SelectedPackageContext);\n\n  // create the graph\n  useEffect(() => {\n    if ((!selected && !root) || !graph) {\n      return;\n    }\n\n    const selectedNode = root ?? graph.nodes.get(selected);\n\n    if (selectedNode) {\n      const nodes = graph.findAllNodesOnAllPaths(selectedNode, \"*App\");\n\n      const app_node = graph.nodes.get(\"*App\");\n      if (app_node) {\n        nodes.set(\"*App\", app_node);\n      }\n\n      // convert to vis graph format\n      const convertedNodes = new DataSet<PackageNodeValue>();\n      nodes.forEach(value => {\n        // popup element\n        const popup = document.createElement(\"div\");\n        ReactDOM.render(<Popup node={value} />, popup);\n\n        // default colors\n        let color = value.value.color ?? options.nodes.color.background;\n        let font = undefined;\n\n        // if node is root\n        if (value.key === \"*App\") {\n          color = \"#4fc1ea\";\n          font = { color: \"#4fc1ea\", strokeWidth: 3, size: 20 };\n        }\n        // if selected node\n        else if (value.key === selectedNode.key) {\n          color = \"#f39200\";\n        }\n\n        convertedNodes.add({\n          ...value.value,\n          color: color,\n          title: value.key === selectedNode.key || value.key === \"*App\" ? undefined : popup,\n          font: font,\n        });\n      });\n\n      const visData: Data = {\n        nodes: convertedNodes,\n        edges: new DataSet(graph.visEdges),\n      };\n\n      const network = visJsRef.current && new Network(visJsRef.current, visData, options);\n\n      // change cursor when hovering and grabbing\n      // Get the canvas HTML element\n      const networkCanvas = document?.getElementById(\"mynetwork\")?.getElementsByTagName(\"canvas\")[0];\n\n      // changes the cursor graphic depending on where and what the mouse is doing\n      const changeCursor = (newCursorStyle: string) => {\n        if (networkCanvas) {\n          networkCanvas.style.cursor = newCursorStyle;\n        }\n      };\n\n      if (network) {\n        network.on(\"hoverNode\", function () {\n          changeCursor(\"grab\");\n        });\n        network.on(\"blurNode\", function () {\n          changeCursor(\"default\");\n        });\n        network.on(\"dragStart\", function () {\n          changeCursor(\"grabbing\");\n        });\n        network.on(\"dragging\", function () {\n          changeCursor(\"grabbing\");\n        });\n        network.on(\"dragEnd\", function () {\n          changeCursor(\"grab\");\n        });\n      }\n    }\n  }, [selected, root, graph, visJsRef]);\n\n  return (\n    <div {...props} style={{ display: \"flex\", flexFlow: \"column nowrap\" }}>\n      <div ref={visJsRef} id=\"mynetwork\" style={{ flex: \"1 1 auto\", height: graphHeight ?? \"50vh\" }} />\n    </div>\n  );\n};\n\nexport default NetworkGraph;\n","import React, { useState } from \"react\";\nimport { Box, Card, CardContent, CardHeader, Chip, Collapse, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\n\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\ntype ScoreCardItemProp = {\n  tags: string;\n  name: string;\n  short: string;\n  risk: string;\n  passing?: boolean;\n  justification?: string;\n};\n\nconst ScorecardItem = ({ tags, name, short, risk, passing, justification }: ScoreCardItemProp) => {\n  const [selected, setSelected] = useState(false);\n\n  return (\n    <Box>\n      <Grid\n        container\n        alignItems=\"center\"\n        sx={{\n          backgroundColor: selected ? \"action.selected\" : undefined,\n          borderRadius: \"16px\",\n        }}\n      >\n        <Grid item xs={11}>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n            <IconButton onClick={() => setSelected(!selected)}>\n              <KeyboardArrowDown\n                sx={{\n                  mr: -1,\n                  transform: selected ? \"rotate(0deg)\" : \"rotate(-90deg)\",\n                  transition: \"0.2s\",\n                }}\n              />\n            </IconButton>\n            <Typography variant=\"body1\" fontWeight=\"bolder\">\n              {name}\n            </Typography>\n          </Stack>\n        </Grid>\n        <Grid item xs={1}>\n          <Box display=\"flex\" justifyContent=\"flex-end\" sx={{ marginRight: 2 }}>\n            {!passing ? <CloseRoundedIcon color=\"error\" /> : <DoneRoundedIcon color=\"success\" />}\n          </Box>\n        </Grid>\n      </Grid>\n      <Collapse in={selected}>\n        <Grid container sx={{ marginLeft: 5, marginBottom: 1, paddingRight: 1 }}>\n          <Grid item xs={12} sx={{ marginBottom: 2 }}>\n            <Typography variant=\"body2\">{short}</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography fontWeight=\"bolder\" variant=\"body2\">\n              Reason\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sx={{ marginBottom: 1 }}>\n            <Typography variant=\"body2\">{justification}</Typography>\n          </Grid>\n          <Grid item xs={12} sx={{ marginBottom: 1 }}>\n            <Stack alignItems=\"center\" direction=\"row\" spacing={1}>\n              <Typography variant=\"body2\">risk: </Typography>\n              <Chip\n                size=\"small\"\n                label={risk}\n                color={risk === \"High\" ? \"error\" : risk == \"Medium\" ? \"warning\" : \"info\"}\n              />\n            </Stack>\n          </Grid>\n          <Grid item xs={12}>\n            <Stack alignItems=\"center\" direction=\"row\" spacing={1}>\n              <Typography variant=\"body2\">tags: </Typography>\n              {tags.split(\", \").map(tag => {\n                return <Chip size=\"small\" key={tag} label={tag} />;\n              })}\n            </Stack>\n          </Grid>\n        </Grid>\n      </Collapse>\n    </Box>\n  );\n};\n\nexport const ScorecardMetric = ({\n  metric,\n}: {\n  metric: {\n    tags: string;\n    name: string;\n    short: string;\n    risk: string;\n    passing?: boolean;\n    justification?: string;\n  }[];\n}) => {\n  return (\n    <Card variant=\"outlined\" sx={{ marginTop: 2 }}>\n      <CardHeader\n        title=\"Security Scorecards\"\n        subheader={`Scorecards give consumers of open-source projects an easy way to judge whether their dependencies are safe.`}\n        action={\n          <IconButton\n            href={\"https://github.com/ossf/scorecard/blob/main/docs/checks.md\"}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <OpenInNewRoundedIcon />\n          </IconButton>\n        }\n      />\n      <CardContent>\n        <Stack>\n          {Object.values(metric).map(value => {\n            return <ScorecardItem key={value.name} {...value} />;\n          })}\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQueries, useQuery } from \"react-query\";\nimport { paths } from \"lib/schema\";\nimport { UseQueryResult } from \"react-query/types/react/types\";\n\ntype path = paths[\"/python/package/version/metadata\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\nexport type PackageMetadataRequestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure = path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getPackageMetadata = (\n  name: requestParams[\"name\"],\n  version: requestParams[\"version\"],\n  index: requestParams[\"index\"],\n  os_name: requestParams[\"os_name\"],\n  os_version: requestParams[\"os_version\"],\n  python_version: requestParams[\"python_version\"],\n) => {\n  const config: IConfig = {\n    params: {\n      name: name,\n      version: version,\n      index: index,\n      os_name: os_name,\n      os_version: os_version,\n      python_version: python_version,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n  return axios.get<PackageMetadataRequestResponseSuccess>(THOTH_URL + \"/python/package/version/metadata\", config);\n};\n\nexport const usePackageMetadata = (\n  name?: requestParams[\"name\"],\n  version?: requestParams[\"version\"],\n  index?: requestParams[\"index\"],\n  os_name?: requestParams[\"os_name\"],\n  os_version?: requestParams[\"os_version\"],\n  python_version?: requestParams[\"python_version\"],\n  config?: { [key: string]: any },\n): UseQueryResult<AxiosResponse<PackageMetadataRequestResponseSuccess>, AxiosError<requestResponseFailure>> => {\n  return useQuery<AxiosResponse<PackageMetadataRequestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    enabled: !!name && !!version && !!index && !!os_name && !!os_version && !!python_version,\n    queryKey: [\"packageMetadata\", name, version, index, os_name, os_version, python_version],\n    queryFn: () =>\n      getPackageMetadata(name ?? \"\", version ?? \"\", index ?? \"\", os_name ?? \"\", os_version ?? \"\", python_version ?? \"\"),\n  });\n};\n\nexport const usePackagesMetadata = (\n  packages: requestParams[],\n  config?: { [key: string]: any },\n): UseQueryResult<AxiosResponse<PackageMetadataRequestResponseSuccess>, AxiosError<requestResponseFailure>>[] => {\n  return useQueries(\n    packages.map(p => {\n      return {\n        ...config,\n        enabled: !!p.name && !!p.version && !!p.index && !!p.os_name && !!p.os_version && !!p.python_version,\n        queryKey: [\"packageMetadata\", p.name, p.version, p.index, p.os_name, p.os_version, p.python_version],\n        queryFn: () => getPackageMetadata(p.name, p.version, p.index, p.os_name, p.os_version, p.python_version),\n      };\n    }),\n  ) as UseQueryResult<AxiosResponse<PackageMetadataRequestResponseSuccess>, AxiosError<requestResponseFailure>>[];\n};\n","import YAML from \"yaml\";\n\nexport async function getFile(url: RequestInfo) {\n  const response = await fetch(url);\n  return await response.text();\n}\n\nexport async function getYamlFile(url: string) {\n  const text = await getFile(url);\n  return YAML.parse(text);\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport { getYamlFile } from \"api\";\nimport { components } from \"lib/schema\";\n\nfunction getMatch(name: string, scorecards: components[\"schemas\"][\"Justification\"]) {\n  const matchLookup = {\n    Maintained: \"actively maintained\",\n    \"Dependency-Update-Tool\": \"automatic dependency updates\",\n    \"Binary-Artifacts\": \"binary artifacts\",\n    \"Branch-Protection\": \"branch protection\",\n    \"CI-Tests\": \"CI tests\",\n    \"CII-Best-Practices\": \"CII Best Practices\",\n    \"Code-Review\": \"code review\",\n    Contributors: \"contributors\",\n    Fuzzing: \"fuzzing\",\n    Packaging: \"published as a package\",\n    \"Pinned-Dependencies\": \"pinned dependencies\",\n    SAST: \"static source code analysis\",\n    \"Security-Policy\": \"security policy\",\n    \"Signed-Releases\": \"sign tags\",\n    \"Token-Permissions\": \"least privilege\",\n    Vulnerabilities: \"vulnerabilities\",\n    \"Dangerous-Workflow\": \"dangerous\",\n    License: \"license\",\n  };\n\n  const pattern = matchLookup[name as keyof typeof matchLookup];\n  return scorecards.find(scorecard => scorecard.message.includes(pattern));\n}\n\nexport const useScorecards = (justifications: Map<string, components[\"schemas\"][\"Justification\"][number]>) => {\n  const [scorecard, setScorecard] = useState<\n    {\n      tags: string;\n      name: string;\n      short: string;\n      risk: string;\n      passing?: boolean;\n      justification?: string;\n    }[]\n  >([]);\n\n  const scorecardJustifications = useMemo(() => {\n    if (justifications) {\n      return Array.from(justifications.values()).filter(s => {\n        if (s.link === \"https://github.com/ossf/scorecard/blob/main/docs/checks.md\") {\n          justifications.delete(s.message);\n          return true;\n        }\n        return false;\n      });\n    }\n  }, [justifications]);\n\n  useEffect(() => {\n    if (!justifications) {\n      return;\n    }\n\n    let active = true;\n    load();\n    return () => {\n      active = false;\n    };\n\n    async function load() {\n      const res = await getYamlFile(\n        \"https://raw.githubusercontent.com/ossf/scorecard/main/docs/checks/internal/checks.yaml\",\n      ).then(yaml => {\n        return Object.entries(yaml?.checks ?? {})\n          .filter(([key]) => getMatch(key, scorecardJustifications ?? []))\n          .map(([name, value]) => {\n            const info = value as { [k: string]: unknown };\n            const match = getMatch(name, scorecardJustifications ?? []);\n            return {\n              tags: info?.tags as string,\n              name: name as string,\n              short: info?.short as string,\n              risk: info?.risk as string,\n              justification: match?.message as string,\n              passing: match?.type !== \"WARNING\",\n            };\n          });\n      });\n      if (!active) {\n        return;\n      }\n      setScorecard(res);\n    }\n  }, [justifications]);\n\n  return scorecard;\n};\n","// React\nimport React, { useContext, useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Grid, Box, Link, Stack, CardHeader, CardContent, Card, Divider, IconButton } from \"@mui/material\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\nimport ErrorRoundedIcon from \"@mui/icons-material/ErrorRounded\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport NetworkGraphView from \"../NetworkGraphView\";\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { components } from \"lib/schema\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\nimport { ScorecardMetric } from \"../JustificationMetrics\";\nimport { useScorecards } from \"./hooks/useScorecards\";\nimport { useLinkData } from \"./hooks/useLinkData\";\n\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport InfoRoundedIcon from \"@mui/icons-material/InfoOutlined\";\nimport WarningAmberRoundedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport StarRoundedIcon from \"@mui/icons-material/StarRounded\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface ISelectedPackage {\n  graph: Graph<Node<PackageNodeValue>>;\n}\n\n/**\n * Renders the selected package context variable's data. It will preform\n * a search of the list of packages using the selected package variable.\n */\nexport const SelectedPackage = ({ graph }: ISelectedPackage) => {\n  const { selected, setSelected } = useContext(SelectedPackageContext);\n  const navigate = useNavigate();\n\n  const selectedPackage = useMemo<Node<PackageNodeValue> | undefined>(() => {\n    return graph.nodes.get(selected);\n  }, [selected]);\n\n  const dependents = useMemo<string[]>(() => {\n    const deps: string[] = [];\n\n    if (selectedPackage) {\n      [...selectedPackage.parents]\n        .filter(p => p !== \"*App\")\n        .forEach(node => {\n          const nodeObj = graph.nodes.get(node);\n          if (nodeObj) {\n            deps.push(node);\n          }\n        });\n    }\n\n    return deps;\n  }, [selectedPackage]);\n\n  const justifications = useMemo(() => {\n    const justs: Map<string, components[\"schemas\"][\"Justification\"][number]> = new Map();\n\n    if (selectedPackage) {\n      selectedPackage?.value?.justifications?.forEach(just => {\n        justs.set(just.message, just);\n      });\n    }\n\n    return justs;\n  }, [selectedPackage]);\n\n  const scorecards = useScorecards(justifications);\n\n  const linkData = useLinkData(justifications);\n\n  const popular = useMemo(() => {\n    if (justifications) {\n      return Array.from(justifications.values()).find(s => {\n        if (s.message.includes(\"popularity on GitHub\")) {\n          justifications.delete(s.message);\n          return true;\n        }\n        return false;\n      });\n    }\n  }, [justifications]);\n\n  const browseLink = useMemo(() => {\n    if (justifications) {\n      const just = Array.from(justifications.values()).find(s => {\n        if (s.message.includes(\"Thoth Search UI\")) {\n          justifications.delete(s.message);\n          return true;\n        }\n        return false;\n      });\n\n      return just?.link;\n    }\n  }, [justifications]);\n\n  const showError = useMemo(() => {\n    return (\n      <Stack direction=\"row\" alignItems=\"center\" sx={{ marginTop: 2 }}>\n        <ErrorRoundedIcon color=\"error\" sx={{ marginRight: \".5rem\" }} />\n        <Typography mb={0} color=\"error\" gutterBottom variant=\"body2\">\n          The package metadata could not be fetched.\n        </Typography>\n      </Stack>\n    );\n  }, []);\n\n  return (\n    <Box sx={{ overflow: \"scroll\" }}>\n      <Card variant=\"outlined\" sx={{ padding: 2 }}>\n        <Grid container alignItems=\"center\" mb={1}>\n          <Grid item>\n            <Typography variant=\"h3\">\n              <Link underline=\"none\" href={browseLink}>\n                <b>{selectedPackage?.value?.name}</b>\n              </Link>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography ml={2} variant=\"h6\">\n              {selectedPackage?.value?.version}\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={1}>\n          <Grid item>\n            <IconText text={selectedPackage?.value?.metadata?.License ?? \"NaN\"} icon={<GavelIcon />} />\n          </Grid>\n          {Object.values(linkData).map((value, i) => {\n            return (\n              <React.Fragment key={value.link ?? \"\" + i}>\n                <Grid item>\n                  <Divider orientation=\"vertical\" />\n                </Grid>\n                <Grid key={value.label} item>\n                  <IconText text={value.label ?? \"\"} icon={value.icon} link={value.link} />\n                </Grid>\n              </React.Fragment>\n            );\n          })}\n        </Grid>\n\n        <Typography sx={{ marginTop: 2 }} variant=\"body1\">\n          {selectedPackage?.value?.metadata?.Summary}\n        </Typography>\n\n        {!selectedPackage?.value?.metadata && showError}\n      </Card>\n\n      {scorecards.length > 0 ? <ScorecardMetric metric={scorecards} /> : undefined}\n\n      {popular ? (\n        <Card variant=\"outlined\" sx={{ marginTop: 2 }}>\n          <CardHeader\n            title={popular.message}\n            action={\n              <IconButton href={popular.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                <OpenInNewRoundedIcon />\n              </IconButton>\n            }\n            avatar={<StarRoundedIcon />}\n          />\n        </Card>\n      ) : undefined}\n\n      {browseLink\n        ? Array.from(justifications.values()).map((just, i) => {\n            return (\n              <Card key={just.message + i} variant=\"outlined\" sx={{ marginTop: 2 }}>\n                <CardHeader\n                  title={just.message}\n                  action={\n                    <IconButton href={just.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <OpenInNewRoundedIcon />\n                    </IconButton>\n                  }\n                  avatar={\n                    just.type === \"ERROR\" ? (\n                      <ErrorRoundedIcon color=\"error\" />\n                    ) : just.type === \"WARNING\" ? (\n                      <WarningAmberRoundedIcon color=\"warning\" />\n                    ) : (\n                      <InfoRoundedIcon color=\"info\" />\n                    )\n                  }\n                />\n              </Card>\n            );\n          })\n        : undefined}\n\n      <Card variant=\"outlined\" sx={{ marginTop: 2 }}>\n        <CardHeader\n          title=\"Dependency Graph\"\n          subheader={\n            <Typography variant=\"body1\" mb={2}>\n              {[...(selectedPackage?.parents ?? [])].filter(p => p !== \"*App\")?.length === 0\n                ? selectedPackage?.value?.label + \" is not a dependent of any package in this Python environment\"\n                : \"There are \" +\n                  [...(selectedPackage?.parents ?? [])].filter(p => p !== \"*App\")?.length +\n                  \" package(s) that have \" +\n                  selectedPackage?.value?.label +\n                  \" as a direct dependency: \"}\n              {dependents.map((dep, i) => {\n                return (\n                  <React.Fragment key={dep + i}>\n                    <Link\n                      underline=\"hover\"\n                      onClick={() => {\n                        setSelected(dep);\n                        navigate(\"../packages/\" + dep);\n                      }}\n                    >\n                      {dep}\n                    </Link>{\" \"}\n                  </React.Fragment>\n                );\n              })}\n            </Typography>\n          }\n        />\n        <CardContent>\n          <NetworkGraphView graph={graph} />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { components } from \"lib/schema\";\n\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport ArticleRoundedIcon from \"@mui/icons-material/ArticleRounded\";\nimport NewReleasesRoundedIcon from \"@mui/icons-material/NewReleasesRounded\";\n\nexport const useLinkData = (justifications: Map<string, components[\"schemas\"][\"Justification\"][number]>) => {\n  const [linkData, setLinkData] = useState<{\n    [key: string]: {\n      label?: string;\n      icon?: React.ReactNode;\n      link?: string;\n    };\n  }>({\n    \"libraries.io\": {\n      label: \"libraries.io\",\n      icon: <OpenInNewRoundedIcon />,\n    },\n    \"released on PyPI\": {\n      label: \"PyPI\",\n      icon: <OpenInNewRoundedIcon />,\n    },\n    \"hosted on GitHub\": {\n      label: \"GitHub\",\n      icon: <GitHubIcon />,\n    },\n    \"Release notes\": {\n      label: \"Release\",\n      icon: <NewReleasesRoundedIcon />,\n    },\n    \"StackOverflow tags\": {\n      label: \"StackOverflow\",\n      icon: <OpenInNewRoundedIcon />,\n    },\n    \"project documentation\": {\n      label: \"Documentation\",\n      icon: <ArticleRoundedIcon />,\n    },\n  });\n\n  useEffect(() => {\n    const patterns = Object.keys(linkData);\n    let temp = linkData;\n\n    if (justifications) {\n      Array.from(justifications.values()).forEach(s => {\n        patterns.forEach(pattern => {\n          if (s.message.includes(pattern)) {\n            justifications.delete(s.message);\n            temp = {\n              ...temp,\n              [pattern]: {\n                ...temp[pattern],\n                link: s?.link ?? \"\",\n              },\n            };\n          }\n        });\n      });\n    }\n\n    Object.entries(temp).forEach(([key, value]) => {\n      if (!value.link) {\n        delete temp[key];\n      }\n    });\n\n    setLinkData(temp);\n  }, [justifications]);\n\n  return linkData;\n};\n","import { AdviseDocumentRequestResponseSuccess } from \"../api\";\nimport { components } from \"lib/schema\";\nimport { useEffect, useState } from \"react\";\nimport { getYamlFile } from \"../../../api\";\n\nexport type OpenSourceVulnerabilityFormat = {\n  id: string;\n  published: string;\n  details: string;\n  affected: {\n    package: {\n      ecosystem: string;\n      name: string;\n    };\n    ranges: {\n      type: string;\n      repo?: string;\n      events: {\n        introduced?: string;\n        fixed?: string;\n      }[];\n    }[];\n    ecosystem_specific?: {\n      severity?: string;\n    };\n  }[];\n  references: {\n    type: string;\n    url: string;\n  }[];\n};\n\nconst findCVEPackages = async (justifications: components[\"schemas\"][\"Justification\"]) => {\n  const cves = new Map<\n    string,\n    {\n      packages: { name: string; version: string; index: string }[];\n      report?: OpenSourceVulnerabilityFormat;\n    }\n  >();\n\n  await Promise.all(\n    justifications.map(async just => {\n      if (just.message.includes(\"CVE\") && !just.message.startsWith(\"No known\")) {\n        const matches = Array.from(just.message.matchAll(/'(.*?)'/g));\n        if (matches && matches.length === 4) {\n          if (!cves.has(matches[3][1])) {\n            const report = await getYamlFile(\n              `https://raw.githubusercontent.com/pypa/advisory-database/main/vulns/${matches[0][1]}/${matches[3][1]}.yaml`,\n            );\n            cves.set(matches[3][1], {\n              report: report,\n              packages: [\n                {\n                  name: matches[0][1],\n                  version: matches[1][1],\n                  index: matches[2][1],\n                },\n              ],\n            });\n          } else {\n            cves.set(matches[3][1], {\n              ...(cves.get(matches[3][1]) ?? {}),\n              packages: [\n                ...(cves.get(matches[3][1])?.packages ?? []),\n                {\n                  name: matches[0][1],\n                  version: matches[1][1],\n                  index: matches[2][1],\n                },\n              ],\n            });\n          }\n        }\n      }\n    }),\n  );\n\n  return { data: cves };\n};\n\nconst findPackagesWithWarnings = (justifications: components[\"schemas\"][\"Justification\"]) => {\n  const pkgs = new Map<string, number>();\n  justifications.forEach(just => {\n    const package_justification = just as { package_name?: string };\n    if (just.type === \"WARNING\" && package_justification?.package_name) {\n      pkgs.set(package_justification.package_name, (pkgs.get(package_justification.package_name) ?? 0) + 1);\n    }\n  });\n\n  const sorted_array = Array.from(pkgs.entries()).sort(([, a], [, b]) => a - b);\n\n  const top_bucket = sorted_array.at(-1)?.[1] ?? 0;\n\n  return {\n    data: {\n      values: sorted_array,\n      top_packages: sorted_array.filter(([, count]) => count === top_bucket),\n      avg: sorted_array.reduce((prev, [, cur]) => prev + cur, 0) / sorted_array.length,\n    },\n  };\n};\n\nconst findUnmaintainedPackages = (justifications: components[\"schemas\"][\"Justification\"]) => {\n  const pkgs = new Map<\n    string,\n    {\n      not_maintained?: boolean;\n      last_release?: string;\n      low_maintainers?: boolean;\n    }\n  >();\n  const visited = new Set();\n  justifications.forEach(just => {\n    const package_name = (just as { package_name?: string }).package_name;\n    if (package_name) {\n      visited.add(package_name);\n    }\n\n    if (package_name && just.message.includes(\"actively maintained\") && just.type === \"WARNING\") {\n      pkgs.set(package_name, { ...pkgs.get(package_name), not_maintained: true });\n    }\n\n    if (package_name && just.message.includes(\"has no recent release\")) {\n      const date = just.message.split(\"dates back to \").at(-1);\n      pkgs.set(package_name, { ...pkgs.get(package_name), last_release: date });\n    }\n\n    if (package_name && just.message.includes(\"low number of maintainers\")) {\n      pkgs.set(package_name, { ...pkgs.get(package_name), low_maintainers: true });\n    }\n  });\n\n  return {\n    data: {\n      total: visited.size,\n      packages: Array.from(pkgs.entries())\n        .map(([k, v]) => ({\n          ...v,\n          id: k,\n        }))\n        .sort(\n          (a, b) => new Date(b.last_release ?? Date.now()).getTime() - new Date(a.last_release ?? Date.now()).getTime(),\n        ),\n    },\n  };\n};\n\nexport const useImportantJustifications = (adviseDocument?: AdviseDocumentRequestResponseSuccess) => {\n  const [result, setResult] = useState<{\n    cvePackages?: {\n      data?: Map<\n        string,\n        {\n          packages: { name: string; version: string; index: string }[];\n          report?: OpenSourceVulnerabilityFormat;\n        }\n      >;\n    };\n    warningPackages?: {\n      data?: {\n        values: [string, number][];\n        top_packages: [string, number][];\n        avg: number;\n      };\n    };\n    unmaintainedPackages?: {\n      data?: {\n        total: number;\n        packages: { id: string; not_maintained?: boolean; last_release?: string; low_maintainers?: boolean }[];\n      };\n    };\n  }>();\n\n  useEffect(() => {\n    let active = true;\n    load();\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      active = false;\n    };\n\n    async function load() {\n      if (adviseDocument) {\n        const justifications = adviseDocument?.result.report?.products?.[0].justification;\n\n        if (!justifications) {\n          setResult({\n            cvePackages: {},\n            warningPackages: {},\n            unmaintainedPackages: {},\n          });\n          return;\n        }\n\n        const cvePackages = await findCVEPackages(justifications);\n        const warningPackages = findPackagesWithWarnings(justifications);\n        const unmaintainedPackages = findUnmaintainedPackages(justifications);\n\n        setResult({\n          cvePackages: cvePackages,\n          warningPackages: warningPackages,\n          unmaintainedPackages: unmaintainedPackages,\n        });\n      }\n    }\n  }, [adviseDocument?.result.report?.products?.[0].justification]);\n\n  return result;\n};\n","import React, { useMemo, useState } from \"react\";\n\nimport { HorizontalRectSeries, XAxis, FlexibleWidthXYPlot, Highlight, HighlightArea, YAxis } from \"react-vis\";\nimport Color from \"color\";\n\nfunction histogram(data: number[], size: number) {\n  let min = Infinity;\n  let max = -Infinity;\n\n  for (const item of data) {\n    if (item < min) min = item;\n    else if (item > max) max = item;\n  }\n\n  const bins = Math.ceil((max - min + 1) / size);\n\n  const histogram = new Array(bins).fill(0);\n\n  for (const item of data) {\n    histogram[Math.floor((item - min) / size)]++;\n  }\n\n  return histogram;\n}\n\ninterface IBubbleHistogram {\n  source?: {\n    values: [string, number][];\n    top_packages: [string, number][];\n  };\n  handleClick: (pkgs: [string, number][]) => void;\n}\n\nexport const BubbleHistogram = ({ source, handleClick }: IBubbleHistogram) => {\n  const [selectionStart, setSelectionStart] = useState<number | null>(null);\n  const [selectionEnd, setSelectionEnd] = useState<number | null>(null);\n\n  const updateDragState = (area: HighlightArea | null) => {\n    const start = (area && area.left) ?? null;\n    const end = (area && area.right) ?? null;\n\n    setSelectionStart(start);\n    setSelectionEnd(end);\n\n    if (start && end) {\n      const selection: [string, number][] = [];\n      data?.forEach(pkg => {\n        const inX = pkg.x >= start && pkg.x <= end;\n        const inX0 = pkg.x0 >= start && pkg.x0 <= end;\n        const inStart = start >= pkg.x0 && start <= pkg.x;\n        const inEnd = end >= pkg.x0 && end <= pkg.x;\n\n        if (inStart || inEnd || inX || inX0) {\n          selection.push(...pkg.pkgs);\n        }\n      });\n\n      handleClick(selection);\n    } else {\n      handleClick([]);\n    }\n  };\n\n  const sourceMax = useMemo(() => {\n    if (source) {\n      return Math.max(...source.values.map(([, val]) => val));\n    }\n  }, [source]);\n\n  const data = React.useMemo(() => {\n    if (source && sourceMax) {\n      return histogram(\n        source.values.map(([, n]) => n),\n        1,\n      ).map((b, i) => {\n        return {\n          color: Color.rgb(46, 125, 50)\n            .mix(Color.rgb(237, 108, 2), (i + 1) / sourceMax)\n            .lighten(0.25)\n            .hex(),\n          selectedColor: Color.rgb(46, 125, 50)\n            .mix(Color.rgb(237, 108, 2), (i + 1) / sourceMax)\n            .darken(0.25)\n            .hex(),\n          x: i,\n          y: 0,\n          x0: i + 1,\n          y0: b + 1,\n          index: i,\n          pkgs: source.values.filter(([, count]) => count === i + 1),\n        };\n      });\n    }\n  }, [source, sourceMax]);\n\n  return (\n    <div>\n      <FlexibleWidthXYPlot margin={{ left: 8, right: 8 }} height={150}>\n        <XAxis\n          tickFormat={value => value.toString()}\n          tickTotal={(data?.length ?? 0) / 2}\n          style={{\n            ticks: { stroke: \"#000000\" },\n            text: { stroke: \"none\" },\n          }}\n        />\n        <YAxis />\n        <HorizontalRectSeries\n          colorType=\"literal\"\n          data={data}\n          getOpacity={d => {\n            if (selectionStart === null || selectionEnd === null) {\n              return 1;\n            }\n            const inX = d.x >= selectionStart && d.x <= selectionEnd;\n            const inX0 = d.x0 >= selectionStart && d.x0 <= selectionEnd;\n            const inStart = selectionStart >= d.x0 && selectionStart <= d.x;\n            const inEnd = selectionEnd >= d.x0 && selectionEnd <= d.x;\n\n            return inStart || inEnd || inX || inX0 ? 1 : 0.6;\n          }}\n        />\n        <Highlight color=\"#829AE3\" drag enableY={false} onDrag={updateDragState} onDragEnd={updateDragState} />\n      </FlexibleWidthXYPlot>\n    </div>\n  );\n};\n","import { Card, CardContent, CardHeader, Divider, Grid, Skeleton, Stack, Typography } from \"@mui/material\";\nimport { BubbleHistogram } from \"./BubbleHistogram\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface IWarningPackages {\n  warningPackages?: {\n    data?: {\n      values: [string, number][];\n      top_packages: [string, number][];\n      avg: number;\n    };\n  };\n}\n\nexport const WarningPackages = ({ warningPackages }: IWarningPackages) => {\n  const [warningPackagesSelected, setWarningPackagesSelected] = useState<[string, number][]>([]);\n\n  const handleClick = (pkgs: [string, number][]) => {\n    setWarningPackagesSelected(pkgs);\n  };\n\n  if (!warningPackages) {\n    return (\n      <>\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"rectangular\" width={210} height={118} />\n      </>\n    );\n  } else if (!warningPackages.data) {\n    return null;\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader title=\"Package Warnings\" subheader=\"The distribution of all package warnings generated by Thoth\" />\n      <CardContent>\n        <Grid container justifyContent=\"center\">\n          <Grid item style={{ height: \"100%\", width: \"100%\" }}>\n            <BubbleHistogram source={warningPackages.data} handleClick={handleClick} />\n          </Grid>\n          <Grid item width={\"100%\"}>\n            <Typography textAlign=\"center\" sx={{ marginBottom: 0.5 }} variant=\"body1\" fontStyle=\"italic\">\n              {warningPackagesSelected.length > 0\n                ? `${warningPackagesSelected.length} packages selected`\n                : \"Click and drag on the chart to select packages\"}\n            </Typography>\n            {warningPackagesSelected.length > 0 && (\n              <>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography fontWeight=\"bold\" variant=\"body1\">\n                    Average Warnings:\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {(warningPackagesSelected.reduce((p, [, c]) => p + c, 0) / warningPackagesSelected.length).toFixed(\n                      1,\n                    )}\n                  </Typography>\n                </Stack>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography fontWeight=\"bold\" variant=\"body1\">\n                    Max Warnings:\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {warningPackagesSelected.sort(([, a], [, b]) => a - b).at(-1)?.[1]}\n                  </Typography>\n                </Stack>\n                <Stack direction=\"row\" spacing={1} sx={{ marginBottom: 2 }}>\n                  <Typography fontWeight=\"bold\" variant=\"body1\">\n                    Min Warnings:\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {warningPackagesSelected.sort(([, a], [, b]) => a - b).at(0)?.[1]}\n                  </Typography>\n                </Stack>\n                {Array.from(new Set(warningPackagesSelected.map(([, c]) => c)).values())\n                  .sort((a, b) => b - a)\n                  .map(count => (\n                    <React.Fragment key={count}>\n                      <Typography color=\"gray\" variant=\"subtitle2\" fontStyle=\"italic\">{`${count} warnings`}</Typography>\n                      <Divider />\n                      <Grid\n                        container\n                        spacing={1.5}\n                        sx={{\n                          marginBottom: 1,\n                          marginLeft: 1,\n                        }}\n                      >\n                        {warningPackagesSelected\n                          .filter(([, c]) => c === count)\n                          .map(([pkg]) => (\n                            <Grid key={pkg} item>\n                              <Link replace to={\"../packages/\" + pkg}>\n                                {pkg}\n                              </Link>\n                            </Grid>\n                          ))}\n                      </Grid>\n                    </React.Fragment>\n                  ))}\n              </>\n            )}\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n","import {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Skeleton,\n  Slide,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport NavigateNextRoundedIcon from \"@mui/icons-material/NavigateNextRounded\";\nimport { OpenSourceVulnerabilityFormat } from \"../../hooks/useImportantJustifications\";\nimport { Link } from \"react-router-dom\";\n\ninterface ICVEPackages {\n  cvePackages?: {\n    data?: Map<\n      string,\n      {\n        packages: { name: string; version: string; index: string }[];\n        report?: OpenSourceVulnerabilityFormat;\n      }\n    >;\n  };\n}\n\nexport const CVEPackages = ({ cvePackages }: ICVEPackages) => {\n  const [selectedCVE, setSelectedCVE] = useState<OpenSourceVulnerabilityFormat | null>(null);\n  const containerRef = React.useRef(null);\n\n  if (!cvePackages) {\n    return (\n      <>\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"rectangular\" height={118} />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n      </>\n    );\n  } else if (!cvePackages.data) {\n    return null;\n  }\n\n  return (\n    <Card variant=\"outlined\" ref={containerRef}>\n      <CardHeader\n        title=\"CVE Warnings\"\n        subheader=\"Security advisories for packages published on PyPI\"\n        action={\n          <IconButton href=\"https://thoth-station.ninja/j/cve\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <OpenInNewRoundedIcon />\n          </IconButton>\n        }\n      />\n      <CardContent>\n        <Slide direction=\"right\" in={selectedCVE !== null} container={containerRef.current}>\n          <div>\n            {selectedCVE !== null ? (\n              <React.Fragment>\n                <Stack alignItems=\"center\" direction=\"row\">\n                  <IconButton size=\"small\" onClick={() => setSelectedCVE(null)}>\n                    <NavigateNextRoundedIcon sx={{ transform: \"rotate(180deg)\" }} />\n                  </IconButton>\n                  <Typography variant=\"h5\" fontWeight=\"bold\">\n                    {selectedCVE?.id}\n                  </Typography>\n                </Stack>\n                {selectedCVE.id ? (\n                  <>\n                    <Typography sx={{ marginLeft: 4 }} variant=\"subtitle2\" fontStyle=\"italic\" color=\"gray\">\n                      Published: {new Date(selectedCVE?.published).toLocaleString()}\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ marginTop: 2 }}>\n                      {selectedCVE?.details}\n                    </Typography>\n                    <Typography sx={{ marginTop: 2 }} variant=\"h6\" fontWeight=\"bold\">\n                      Affected Packages\n                    </Typography>\n                    {selectedCVE?.affected?.map((pkg, i) => (\n                      <Box sx={{ marginBottom: 1 }} key={pkg?.package?.name + i}>\n                        <Stack direction=\"row\" spacing={1}>\n                          <Typography variant=\"body1\" color=\"gray\">{`[${pkg?.package?.ecosystem}]`}</Typography>\n                          <Typography variant=\"body1\">\n                            {\" \"}\n                            <Link replace to={\"../packages/\" + pkg?.package?.name}>\n                              {pkg?.package?.name}\n                            </Link>\n                          </Typography>\n                        </Stack>\n                        {pkg?.ranges?.map((range, j) => (\n                          <Grid\n                            container\n                            key={range.type + j + i}\n                            sx={{\n                              marginLeft: 2,\n                              marginTop: 0.5,\n                            }}\n                          >\n                            <Grid item xs={2}>\n                              <Typography variant=\"body2\" fontWeight=\"bold\">\n                                Type\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"body2\">{range.type}</Typography>\n                            </Grid>\n\n                            <Grid item xs={2}>\n                              <Typography variant=\"body2\" fontWeight=\"bold\">\n                                Events\n                              </Typography>\n                            </Grid>\n                            <Grid\n                              item\n                              xs={10}\n                              sx={{\n                                marginBottom: 2,\n                              }}\n                            >\n                              {range.events.map((event, k) => (\n                                <Grid container key={\"event\" + i + j + k} direction=\"row\" spacing={1}>\n                                  <Grid item xs={3}>\n                                    <Typography variant=\"body2\" fontWeight=\"bold\">\n                                      {event.fixed ? \"Fixed\" : \"Introduced\"}\n                                    </Typography>\n                                  </Grid>\n                                  <Grid item xs={9}>\n                                    <Typography variant=\"body2\">{event.introduced ?? event.fixed}</Typography>\n                                  </Grid>\n                                </Grid>\n                              ))}\n                            </Grid>\n                          </Grid>\n                        ))}\n                      </Box>\n                    ))}\n                  </>\n                ) : (\n                  <Typography variant=\"body2\" color=\"red\" textAlign=\"center\">\n                    Unable to fetch CVE details\n                  </Typography>\n                )}\n              </React.Fragment>\n            ) : undefined}\n          </div>\n        </Slide>\n        <Slide direction=\"left\" in={selectedCVE === null} container={containerRef.current}>\n          <div>\n            {selectedCVE === null ? (\n              <List disablePadding dense>\n                {Array.from(cvePackages.data.entries()).map(([cve, value]) => (\n                  <ListItem disablePadding dense key={cve}>\n                    <ListItemButton onClick={() => setSelectedCVE(value.report ?? null)}>\n                      <ListItemText\n                        primary={cve}\n                        secondary={value.packages.map(pkg => `${pkg.name} ${pkg.version}`).join(\", \")}\n                      />\n                      <ListItemIcon>\n                        <NavigateNextRoundedIcon />\n                      </ListItemIcon>\n                    </ListItemButton>\n                  </ListItem>\n                ))}\n              </List>\n            ) : undefined}\n          </div>\n        </Slide>\n      </CardContent>\n    </Card>\n  );\n};\n","import React from \"react\";\n\nimport { FlexibleWidthXYPlot, MarkSeries, XAxis } from \"react-vis\";\n\ninterface ITimeline {\n  source?: [string, string | undefined][];\n  selected?: string;\n}\n\nexport const TimelineChart = ({ source, selected }: ITimeline) => {\n  const data = React.useMemo(() => {\n    if (source) {\n      return source.map(([id, timestamp]) => {\n        return {\n          x: (Date.now() - new Date(timestamp ?? Date.now()).getTime()) / 3.154e10,\n          y: 0,\n          opacity: 0.5,\n          id: id,\n        };\n      });\n    }\n  }, [source]);\n\n  return (\n    <div>\n      <FlexibleWidthXYPlot margin={{ left: 8, right: 8, bottom: 16 }} height={70}>\n        <XAxis\n          style={{\n            ticks: { stroke: \"#000000\" },\n            line: { stroke: \"#000000\", transform: \"translateY(-44px)\" },\n            text: { stroke: \"none\", transform: \"translateY(-20px)\" },\n          }}\n        />\n        <MarkSeries\n          colorType=\"literal\"\n          data={data}\n          getOpacity={point => {\n            if (selected === point.id) {\n              return 1;\n            } else {\n              return 0.5;\n            }\n          }}\n          getColor={point => {\n            if (selected === point.id) {\n              return \"#000000\";\n            }\n          }}\n        />\n      </FlexibleWidthXYPlot>\n    </div>\n  );\n};\n","import { Card, CardContent, CardHeader, Divider, Grid, IconButton, Skeleton, Stack, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { TimelineChart } from \"./TimelineChart\";\nimport CheckRoundedIcon from \"@mui/icons-material/CheckRounded\";\nimport ClearRoundedIcon from \"@mui/icons-material/ClearRounded\";\nimport ArrowBackIosRoundedIcon from \"@mui/icons-material/ArrowBackIosRounded\";\nimport ArrowForwardIosRoundedIcon from \"@mui/icons-material/ArrowForwardIosRounded\";\nimport { Link } from \"react-router-dom\";\n\ninterface IUnmaintainedPackages {\n  unmaintainedPackages?: {\n    data?: {\n      total: number;\n      packages: { id: string; not_maintained?: boolean; last_release?: string; low_maintainers?: boolean }[];\n    };\n  };\n}\n\nexport const UnmaintainedPackages = ({ unmaintainedPackages }: IUnmaintainedPackages) => {\n  const [selected, setSelected] = useState<number>(0);\n\n  const next = () => {\n    setSelected((selected + 1) % (unmaintainedPackages?.data?.packages?.length ?? 0));\n  };\n  const previous = () => {\n    setSelected(\n      (((selected - 1) % (unmaintainedPackages?.data?.packages?.length ?? 0)) +\n        (unmaintainedPackages?.data?.packages?.length ?? 0)) %\n        (unmaintainedPackages?.data?.packages?.length ?? 0),\n    );\n  };\n\n  if (!unmaintainedPackages) {\n    return (\n      <>\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"rectangular\" width={210} height={118} />\n      </>\n    );\n  } else if (!unmaintainedPackages.data || unmaintainedPackages.data?.packages?.length === 0) {\n    return null;\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title=\"Package Maintenance\"\n        subheader=\"Which packages are not well maintained or haven't released a new version recently\"\n      />\n      <CardContent>\n        <Grid container justifyContent=\"center\">\n          <Grid item width={\"100%\"}>\n            <Typography textAlign=\"center\" sx={{ marginBottom: 1 }} variant=\"body2\">\n              Number of months a package last had a release\n            </Typography>\n          </Grid>\n          <Grid item style={{ height: \"100%\", width: \"100%\" }}>\n            <TimelineChart\n              source={unmaintainedPackages.data.packages\n                .filter(obj => obj.last_release !== undefined)\n                .map(obj => [obj.id, obj.last_release])}\n              selected={unmaintainedPackages.data.packages[selected].id}\n            />\n          </Grid>\n          <Grid item width={\"100%\"} sx={{ marginBottom: 2 }}>\n            <Stack direction=\"row\" alignItems=\"center\">\n              <IconButton onClick={previous}>\n                <ArrowBackIosRoundedIcon fontSize=\"small\" />\n              </IconButton>\n              <Typography variant=\"body1\" fontWeight=\"bold\">{`${selected + 1}/${\n                unmaintainedPackages.data.packages.length\n              }`}</Typography>\n              <IconButton onClick={next}>\n                <ArrowForwardIosRoundedIcon fontSize=\"small\" />\n              </IconButton>\n              <Typography variant=\"body1\" fontWeight=\"bold\">\n                <Link replace to={\"../packages/\" + unmaintainedPackages.data.packages[selected].id}>\n                  {unmaintainedPackages.data.packages[selected].id}\n                </Link>\n              </Typography>\n            </Stack>\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n              {unmaintainedPackages.data.packages[selected].not_maintained ? (\n                <ClearRoundedIcon color=\"error\" fontSize=\"small\" />\n              ) : (\n                <CheckRoundedIcon color=\"success\" fontSize=\"small\" />\n              )}\n              <Typography variant=\"body2\">{`Package is ${\n                unmaintainedPackages.data.packages[selected].not_maintained ? \"not\" : \"\"\n              } actively maintained according to Security Scorecards`}</Typography>\n            </Stack>\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n              {unmaintainedPackages.data.packages[selected].low_maintainers ? (\n                <ClearRoundedIcon color=\"error\" fontSize=\"small\" />\n              ) : (\n                <CheckRoundedIcon color=\"success\" fontSize=\"small\" />\n              )}\n              <Typography variant=\"body2\">{`Package has ${\n                unmaintainedPackages.data.packages[selected].low_maintainers\n                  ? \"low number of maintainers on PyPI (less than 3)\"\n                  : \"sufficient maintainers on PyPI (more than 3)\"\n              }`}</Typography>\n            </Stack>\n            {unmaintainedPackages.data.packages[selected].last_release ? (\n              <Typography sx={{ marginLeft: 3.5 }} variant=\"body2\">{`Package's last release was on ${new Date(\n                unmaintainedPackages.data.packages[selected].last_release ?? \"\",\n              ).toDateString()}`}</Typography>\n            ) : undefined}\n          </Grid>\n          <Grid item xs={12} sx={{ marginBottom: 2 }}>\n            <Divider />\n          </Grid>\n          <Grid item xs={12}>\n            <Stack direction=\"row\" spacing={1}>\n              <Typography fontWeight=\"bold\" textAlign=\"center\" variant=\"body1\">\n                {`${\n                  Array.from(unmaintainedPackages.data.packages.values()).filter(p => p.low_maintainers).length\n                } out of ${unmaintainedPackages.data.total}`}\n              </Typography>\n              <Typography textAlign=\"center\" variant=\"body1\">\n                packages have a low number of maintainers ( less than 3 )\n              </Typography>\n            </Stack>\n          </Grid>\n          <Grid item xs={12}>\n            <Stack direction=\"row\" spacing={1}>\n              <Typography fontWeight=\"bold\" textAlign=\"center\" variant=\"body1\">\n                {`${\n                  Array.from(unmaintainedPackages.data.packages.values()).filter(p => p.not_maintained).length\n                } out of ${unmaintainedPackages.data.total}`}\n              </Typography>\n              <Typography textAlign=\"center\" variant=\"body1\">\n                packages are not maintained according to Security Scorecards\n              </Typography>\n            </Stack>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\nexport type DependencyMetricType = {\n  /** summary object of all roots aggregated */\n  all: {\n    /** number of dependencies directly related to root packages */\n    direct?: number;\n    /** number of dependencies directly or indirectly related to the direct packages*/\n    indirect?: number;\n    /** number of dependencies that have no dependents*/\n    roots?: number;\n  };\n  /** an object of key (package name) value pairs of specific roots with direct and indirect parameters for each value */\n  roots: {\n    [key: string]: {\n      /** roots own direct packages */\n      direct?: number;\n      /** roots own indirect packages */\n      indirect?: number;\n    };\n  };\n};\n\nexport const useDependencyMetric = (graph?: Graph<Node<PackageNodeValue>>) => {\n  const [metric, setMetric] = useState<DependencyMetricType>();\n\n  useEffect(() => {\n    if (!graph) {\n      return;\n    }\n\n    const base: DependencyMetricType = {\n      all: {},\n      roots: {},\n    };\n\n    const roots: string[] = [];\n    graph.nodes.forEach(value => {\n      if (value.value.depth === 0) {\n        roots.push(value.key);\n      }\n    });\n\n    const visited = new Set();\n\n    // for each starting node\n    roots.forEach(root => {\n      const rootObj = graph.nodes.get(root);\n      if (!rootObj) {\n        return;\n      }\n\n      const bfs = graph.graphSearch(rootObj);\n      const visitedOrder = Array.from(bfs);\n\n      visitedOrder.forEach(node => {\n        if (node.key === \"*App\") {\n          return;\n        }\n\n        if (visited.has(node.value.id)) {\n          return;\n        } else {\n          visited.add(node.value.id);\n        }\n\n        const depth = node.value.depth === 0 ? \"roots\" : node.value.depth === 1 ? \"direct\" : \"indirect\";\n\n        base.all[depth] = (base.all[depth] ?? 0) + 1;\n\n        if (depth !== \"roots\") {\n          if (!base.roots[root]) {\n            base.roots[root] = {};\n          }\n          base.roots[root][depth] = (base.roots?.[root]?.[depth] ?? 0) + 1;\n        }\n      });\n    });\n\n    setMetric(base);\n  }, [graph]);\n\n  return metric;\n};\n","import { useEffect, useState } from \"react\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\nexport type LicenseMetricType = {\n  /** The license name */\n  [key: string]: {\n    /** The packages that use this license as an object */\n    packages: {\n      [key: string]: {\n        depth: number;\n        specific?: string;\n      };\n    };\n    /** License specific information */\n    metadata: {\n      /** If license is approved by OSI standards */\n      isOsiApproved: boolean | null;\n    };\n  };\n};\n\nexport const useLicenseMetric = (graph?: Graph<Node<PackageNodeValue>>) => {\n  const [metric, setMetric] = useState<LicenseMetricType>();\n\n  useEffect(() => {\n    if (!graph) {\n      return;\n    }\n\n    let base: LicenseMetricType = {};\n\n    const roots: string[] = [];\n    graph.nodes.forEach(value => {\n      if (value.value.depth === 0) {\n        roots.push(value.key);\n      }\n    });\n\n    const visited = new Set();\n\n    // for each starting node\n    roots.forEach(root => {\n      const rootObj = graph.nodes.get(root);\n      if (!rootObj) {\n        return;\n      }\n\n      const bfs = graph.graphSearch(rootObj);\n      const visitedOrder = Array.from(bfs);\n\n      visitedOrder.forEach(node => {\n        if (node.key === \"*App\") {\n          return;\n        }\n\n        if (visited.has(node.value.id)) {\n          return;\n        } else {\n          visited.add(node.value.id);\n        }\n\n        // licence metric\n        type PackageLicenses = {\n          generalLicense: string;\n          specificLicense?: string;\n          isOsiApproved: boolean | null;\n        }[];\n        const packageLicenses: PackageLicenses = [];\n\n        // get general classification\n        node?.value?.metadata?.Classifier?.forEach(classifier => {\n          const parsed = classifier.split(\" :: \");\n\n          if (parsed[0] === \"License\") {\n            if (parsed[1] === \"OSI Approved\") {\n              packageLicenses.push({\n                generalLicense: parsed?.[2] ?? node.value.metadata?.License,\n                specificLicense: node.value.metadata?.License,\n                isOsiApproved: true,\n              });\n            } else {\n              packageLicenses.push({\n                generalLicense: parsed?.[1] ?? node.value.metadata?.License,\n                specificLicense: node.value.metadata?.License,\n                isOsiApproved: false,\n              });\n            }\n          }\n        });\n\n        if (packageLicenses.length === 0) {\n          packageLicenses.push({\n            generalLicense: node?.value?.metadata?.License ?? \"N/A\",\n            specificLicense: node?.value?.metadata?.License ?? \"N/A\",\n            isOsiApproved: null,\n          });\n        }\n\n        // get specific classification\n        packageLicenses.forEach(license => {\n          if (!base[license.generalLicense]) {\n            base[license.generalLicense] = {\n              packages: {},\n              metadata: {\n                isOsiApproved: license.isOsiApproved,\n              },\n            };\n          }\n\n          base = {\n            ...base,\n            [license.generalLicense]: {\n              ...base[license.generalLicense],\n              packages: {\n                ...(base[license.generalLicense].packages ?? null),\n                [node.value.id]: {\n                  depth: node.value?.depth ?? 0,\n                  specific: license.specificLicense,\n                },\n              },\n            },\n          };\n        });\n      });\n    });\n\n    setMetric(base);\n  }, [graph]);\n\n  return metric;\n};\n","import { useMemo } from \"react\";\nimport {\n  useLicenseMetric,\n  useDependencyMetric,\n  useAdviseMetric,\n  DependencyMetricType,\n  LicenseMetricType,\n  AdviseMetricType,\n} from \"hooks/metrics\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\nimport { AdviseDocumentRequestResponseSuccess } from \"../api\";\n\nexport type AllMetrics = {\n  advise: AdviseMetricType | null;\n  dependencies: DependencyMetricType | null;\n  licenses: LicenseMetricType | null;\n};\n\nexport function useMetrics(\n  graph?: Graph<Node<PackageNodeValue>>,\n  adviseDocument?: AdviseDocumentRequestResponseSuccess,\n) {\n  const adviseMetric = useAdviseMetric(graph, adviseDocument);\n  const dependencyMetric = useDependencyMetric(graph);\n  const licenseMetric = useLicenseMetric(graph);\n\n  return useMemo(() => {\n    const base: AllMetrics = {\n      advise: null,\n      dependencies: null,\n      licenses: null,\n    };\n\n    if (adviseMetric) {\n      base.advise = adviseMetric;\n    }\n    if (dependencyMetric) {\n      base.dependencies = dependencyMetric;\n    }\n    if (licenseMetric) {\n      base.licenses = licenseMetric;\n    }\n\n    return base;\n  }, [adviseMetric, dependencyMetric, licenseMetric]);\n}\n","import { useEffect, useState } from \"react\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { components } from \"lib/schema\";\nimport { PackageNodeValue } from \"../../lib/interfaces/PackageNodeValue\";\n\nexport type AdviseMetricType = {\n  justification: Record<string, number>;\n  /** which build is being displayed (new or old) */\n  build: string;\n};\n\nexport const useAdviseMetric = (\n  graph?: Graph<Node<PackageNodeValue>>,\n  adviseDocument?: components[\"schemas\"][\"AdviserResultResponse\"],\n) => {\n  const [metric, setMetric] = useState<AdviseMetricType>();\n\n  useEffect(() => {\n    if (!graph || !adviseDocument?.metadata) {\n      return;\n    }\n\n    const base: AdviseMetricType = {\n      justification: {},\n      build: \"\",\n    };\n\n    //build environment\n    base.build = `We have analysed an application stack running on ${adviseDocument.metadata.os_release.name} ${adviseDocument.metadata.os_release.version}, running Python (${adviseDocument.metadata.python.implementation_name}) ${adviseDocument.metadata.python.major}.${adviseDocument.metadata.python.minor}.${adviseDocument.metadata.python.micro}. It was Adviser Job ID ${adviseDocument.metadata.document_id}, by ${adviseDocument.metadata.analyzer} v${adviseDocument.metadata.analyzer_version}.`;\n\n    //justification counts\n    adviseDocument?.result?.report?.products?.[0]?.justification.forEach(justification => {\n      if (base.justification[justification.type]) {\n        base.justification[justification.type] = base.justification[justification.type] + 1;\n      } else {\n        base.justification[justification.type] = 1;\n      }\n    });\n    setMetric(base);\n  }, [graph, adviseDocument]);\n\n  return metric;\n};\n","import { Card, CardContent, CardHeader, Grid, Skeleton, Stack, Typography } from \"@mui/material\";\nimport React, { useMemo } from \"react\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\nimport { LicenseMetricType } from \"../../../../hooks/metrics\";\n\ninterface ILicenseSummary {\n  licenses: LicenseMetricType | null;\n}\n\nexport const LicenseSummary = ({ licenses }: ILicenseSummary) => {\n  const { warnings, errors, approved, totalPkgErrors, totalPkgWarnings, totalPkgApproved } = useMemo(() => {\n    if (licenses) {\n      let warnings = 0;\n      let totalPkgWarnings = 0;\n      let errors = 0;\n      let totalPkgErrors = 0;\n      let approved = 0;\n      let totalPkgApproved = 0;\n\n      Object.entries(licenses).forEach(([, value]) => {\n        if (value.metadata.isOsiApproved === null) {\n          totalPkgWarnings += Object.keys(value.packages).length;\n          warnings++;\n        } else if (!value.metadata.isOsiApproved) {\n          totalPkgErrors += Object.keys(value.packages).length;\n          errors++;\n        } else {\n          totalPkgApproved += Object.keys(value.packages).length;\n          approved++;\n        }\n      });\n      return {\n        warnings: warnings,\n        totalPkgWarnings: totalPkgWarnings,\n        totalPkgErrors: totalPkgErrors,\n        errors: errors,\n        approved: approved,\n        totalPkgApproved: totalPkgApproved,\n      };\n    }\n\n    return {\n      warnings: null,\n      totalPkgWarnings: null,\n      errors: null,\n      totalPkgErrors: null,\n      approved: null,\n      totalPkgApproved: null,\n    };\n  }, [licenses]);\n\n  if (!licenses) {\n    return null;\n  } else if (warnings === null || errors === null) {\n    return (\n      <>\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"text\" />\n        <Skeleton variant=\"rectangular\" height={118} />\n      </>\n    );\n  }\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title=\"Unapproved Licenses\"\n        subheader=\"Total number of licenses that are unknown or unapproved by OSI\"\n      />\n      <CardContent>\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n              <DoneRoundedIcon color=\"success\" />\n              <Typography variant=\"h4\">Approved</Typography>\n            </Stack>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h4\">{approved}</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              sx={{ marginLeft: 4.5 }}\n              variant=\"body1\"\n              color=\"gray\"\n            >{`${totalPkgApproved} total packages`}</Typography>\n          </Grid>\n        </Grid>\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n              <WarningAmberOutlinedIcon color=\"warning\" />\n              <Typography variant=\"h4\">Unknown Approval</Typography>\n            </Stack>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h4\">{warnings}</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              sx={{ marginLeft: 4.5 }}\n              variant=\"body1\"\n              color=\"gray\"\n            >{`${totalPkgWarnings} total packages`}</Typography>\n          </Grid>\n        </Grid>\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n              <ErrorOutlineOutlinedIcon color=\"error\" />\n              <Typography variant=\"h4\">Unapproved</Typography>\n            </Stack>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h4\">{errors}</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              sx={{ marginLeft: 4.5 }}\n              variant=\"body1\"\n              color=\"gray\"\n            >{`${totalPkgErrors} total packages`}</Typography>\n          </Grid>\n        </Grid>\n        {errors === 0 && warnings === 0 ? (\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n            <DoneRoundedIcon color=\"success\" />\n            <Typography variant=\"h4\">All licenses are OSI approved</Typography>\n          </Stack>\n        ) : undefined}\n      </CardContent>\n    </Card>\n  );\n};\n","import React, { CSSProperties } from \"react\";\n\nimport { RadialChart } from \"react-vis\";\nimport Loading from \"components/Elements/Loading/Loading\";\nimport { Stack } from \"@mui/material\";\n\ninterface IPieChart {\n  source?: Array<{\n    angle?: number | undefined;\n    label?: string | undefined;\n    radius?: number | undefined;\n    style?: CSSProperties | undefined;\n  }>;\n  setHovered: (val: { label: string } | undefined) => void;\n  hovered: { label: string } | undefined;\n}\n\nexport const PieChart = ({ source, setHovered, hovered }: IPieChart) => {\n  if (!source) {\n    return <Loading type=\"circular\" />;\n  }\n\n  return (\n    <Stack alignItems=\"center\" justifyContent=\"center\">\n      <RadialChart\n        height={150}\n        width={150}\n        data={source.map(row => {\n          if (hovered && hovered?.label === row?.label) {\n            return { ...row, style: { stroke: \"black\", strokeWidth: \"5px\" } };\n          }\n          return row;\n        })}\n        onValueMouseOver={row => setHovered(row as { label: string })}\n        onSeriesMouseOut={() => setHovered(undefined)}\n      />\n    </Stack>\n  );\n};\n","import { Card, CardContent, CardHeader, Grid, Stack, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { DependencyMetricType } from \"../../../../hooks/metrics\";\nimport { PieChart } from \"./PieChart\";\n\ninterface IDependencySummary {\n  dependencies: DependencyMetricType | null;\n}\n\nexport const DependencySummary = ({ dependencies }: IDependencySummary) => {\n  const [hovered, setHovered] = useState<{ label: string } | undefined>();\n  if (!dependencies) {\n    return null;\n  }\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title=\"Project Dependencies\"\n        subheader=\"Packages are categorized based on their depth in the dependency tree,\n                   with roots being the packages defined on the Pipfile\"\n      />\n\n      <CardContent>\n        <Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n          <Grid item md={12} lg={4}>\n            <PieChart\n              hovered={hovered}\n              setHovered={setHovered}\n              source={[\n                { label: \"Roots\", angle: dependencies.all.roots },\n                { label: \"Direct\", angle: dependencies.all.direct },\n                { label: \"Indirect\", angle: dependencies.all.indirect },\n              ]}\n            />\n          </Grid>\n          <Grid item md={12} lg={8}>\n            <Stack justifyContent=\"space-around\" width=\"100%\">\n              <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                    <Typography fontWeight={hovered?.label === \"Roots\" ? \"bold\" : undefined} variant=\"h4\">\n                      Root Packages\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item>\n                  <Typography fontWeight={hovered?.label === \"Roots\" ? \"bold\" : undefined} variant=\"h4\">\n                    {dependencies.all.roots}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                    <Typography fontWeight={hovered?.label === \"Direct\" ? \"bold\" : undefined} variant=\"h4\">\n                      Direct Packages\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item>\n                  <Typography fontWeight={hovered?.label === \"Direct\" ? \"bold\" : undefined} variant=\"h4\">\n                    {dependencies.all.direct}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                    <Typography fontWeight={hovered?.label === \"Indirect\" ? \"bold\" : undefined} variant=\"h4\">\n                      Indirect Packages\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item>\n                  <Typography fontWeight={hovered?.label === \"Indirect\" ? \"bold\" : undefined} variant=\"h4\">\n                    {dependencies.all.indirect}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Stack>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { AdviseHeader } from \"../components\";\nimport { AdviseDocumentRequestResponseSuccess } from \"../api\";\nimport { useImportantJustifications } from \"../hooks/useImportantJustifications\";\nimport { CVEPackages, UnmaintainedPackages, WarningPackages } from \"../components/SummaryCharts\";\nimport { useMetrics } from \"../hooks\";\nimport { LicenseSummary } from \"../components/SummaryCharts/LicenseSummary\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\nimport { DependencySummary } from \"../components/SummaryCharts/DependencySummary\";\nimport { Masonry } from \"@mui/lab\";\n\ninterface IAdviseSummary {\n  adviseDocument?: AdviseDocumentRequestResponseSuccess;\n  graph?: Graph<Node<PackageNodeValue>>;\n  lastLog?: { [key: string]: string };\n}\n\nexport const AdviseSummary = ({ adviseDocument, graph, lastLog }: IAdviseSummary) => {\n  const summary = useImportantJustifications(adviseDocument);\n  const metrics = useMetrics(graph, adviseDocument);\n\n  return (\n    <Masonry columns={{ xs: 1, md: 2 }} spacing={3} sx={{ mb: 3, mt: 1 }}>\n      <AdviseHeader adviseDocument={adviseDocument} lastLog={lastLog} />\n      <WarningPackages warningPackages={summary?.warningPackages} />\n      <CVEPackages cvePackages={summary?.cvePackages} />\n      <LicenseSummary licenses={metrics?.licenses} />\n      <DependencySummary dependencies={metrics?.dependencies} />\n      <UnmaintainedPackages unmaintainedPackages={summary?.unmaintainedPackages} />\n    </Masonry>\n  );\n};\n","import * as React from \"react\";\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\nimport Box from \"@mui/material/Box\";\nimport Fab from \"@mui/material/Fab\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Zoom from \"@mui/material/Zoom\";\n\ninterface Props {\n  children: React.ReactElement;\n  window?: () => Window;\n}\n\nfunction ScrollTop(props: Props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n    if (anchor) {\n      anchor.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\",\n      });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <Box onClick={handleClick} role=\"presentation\" sx={{ position: \"fixed\", bottom: 16, right: 16 }}>\n        {children}\n      </Box>\n    </Zoom>\n  );\n}\n\nexport function ScrollToTop(props: Props) {\n  return (\n    <React.Fragment>\n      <div id=\"back-to-top-anchor\" />\n      {props.children}\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import React, { ReactElement, useEffect, useMemo, useState } from \"react\";\n\nimport {\n  Box,\n  Grid,\n  FormControl,\n  Stack,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n  TextField,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Paper,\n  Switch,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport AddRoundedIcon from \"@mui/icons-material/AddRounded\";\n\nimport { AdviseDocumentRequestResponseSuccess, getAdviseDocument, useAdviseDocument } from \"../api\";\nimport { LOCAL_STORAGE_KEY } from \"config\";\nimport { components } from \"lib/schema\";\n\nimport { Requirements } from \"../../../hooks\";\nimport { Variant } from \"@mui/material/styles/createTypography\";\nimport { Lockfile } from \"../../../utils/formatLockfile\";\nimport { ScrollToTop } from \"../../../components/Elements/ScrollToTop\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\ninterface IAdviseCompare {\n  adviseDocument?: AdviseDocumentRequestResponseSuccess;\n}\n\nexport const AdviseCompare = ({ adviseDocument }: IAdviseCompare) => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (params.cmp) {\n      setComparison(params.cmp);\n    }\n  }, [params.cmp]);\n\n  const [comparison, setComparison] = React.useState(adviseDocument?.metadata?.document_id ?? \"\");\n\n  const compareDoc = useAdviseDocument(comparison);\n\n  const [open, setOpen] = React.useState(false);\n  const [differencesOnly, setDifferencesOnly] = React.useState(false);\n\n  const [importText, setImportText] = React.useState<string | null>(\"\");\n\n  const [optionList, setOptionList] = useState<\n    ({\n      id: string;\n      readable: ReactElement;\n      timestamp: number;\n    } | null)[]\n  >([]);\n\n  useEffect(() => {\n    let active = true;\n    load();\n    return () => {\n      active = false;\n    };\n\n    async function load() {\n      setOptionList([]); // this is optional\n\n      const options = await Promise.all(\n        localHistory.map(item => {\n          // get detail of runs\n          return getAdviseDocument(item)\n            .then(doc => {\n              const env = (doc.data?.result?.parameters as { project: components[\"schemas\"][\"ProjectDef\"] })?.project\n                ?.runtime_environment;\n\n              if (env) {\n                return {\n                  id: item,\n                  timestamp: doc.data?.metadata?.timestamp ?? 0,\n                  readable: (\n                    <Typography>\n                      <i>{new Date(doc.data?.metadata?.datetime).toLocaleString()}</i> : <b>{env?.name ?? \"N/A\"}</b>,{\" \"}\n                      {env?.operating_system?.name}-{env?.operating_system?.version} (Python {env?.python_version})\n                    </Typography>\n                  ),\n                };\n              } else {\n                return null;\n              }\n            })\n            .catch(() => {\n              return null;\n            });\n        }),\n      );\n\n      if (!active) {\n        return;\n      }\n      setOptionList(options);\n    }\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event?: any, reason?: string) => {\n    if (reason !== \"backdropClick\") {\n      setOpen(false);\n    }\n  };\n\n  const handleImport = async () => {\n    if (importText) {\n      await getAdviseDocument(importText)\n        .then(() => {\n          const ids = localStorage.getItem(LOCAL_STORAGE_KEY) ?? \"\";\n\n          const split = ids.split(\",\");\n          if (!split.includes(importText)) {\n            split.push(importText);\n            localStorage.setItem(LOCAL_STORAGE_KEY, split.join(\",\"));\n          }\n\n          setImportText(\"\");\n          setOpen(false);\n          setComparison(importText);\n          navigate(\"../compare/\" + importText);\n        })\n        .catch(() => {\n          setImportText(null);\n        });\n    }\n  };\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setComparison(event.target.value);\n    navigate(\"../compare/\" + event.target.value);\n  };\n\n  const localHistory: string[] = useMemo(() => {\n    const history: string[] = [];\n\n    const ids = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (ids) {\n      history.push(...ids.split(\",\").filter(s => s !== \"\"));\n    }\n\n    return history;\n  }, [importText === \"\"]);\n\n  const COMPARE_COLORS = {\n    old: {\n      text: \"#b31412\",\n      background: \"#fad2cf\",\n    },\n    new: {\n      text: \"#217f70\",\n      background: \"#e3fbf7\",\n    },\n    change: {\n      text: \"#b38012\",\n      background: \"#fae7cf\",\n    },\n    equal: {\n      text: undefined,\n      background: undefined,\n    },\n  };\n\n  const comparePaths = (obj1: any, obj2: any, label?: string, mapping = (obj: typeof obj1) => obj) => {\n    // if not null\n    const obj1_mapped = obj1 ? mapping(obj1) : null;\n    const obj2_mapped = obj2 ? mapping(obj2) : null;\n\n    // compare if equal\n    if (obj1_mapped && obj2_mapped) {\n      if (obj1_mapped === obj2_mapped) {\n        if (!differencesOnly) {\n          return (\n            <React.Fragment key={label}>\n              {renderCompareLine(obj1_mapped as string, \"equal\", label)}\n              {renderCompareLine(obj2_mapped as string, \"equal\", label)}\n            </React.Fragment>\n          );\n        }\n      } else {\n        return (\n          <React.Fragment key={label}>\n            {renderCompareLine(obj1_mapped as string, \"change\", label)}\n            {renderCompareLine(obj2_mapped as string, \"change\", label)}\n          </React.Fragment>\n        );\n      }\n    } else if (obj1_mapped) {\n      return (\n        <React.Fragment key={label}>\n          {renderCompareLine(obj1_mapped as string, \"old\", label)}\n          {renderCompareLine(obj2_mapped as string, \"\", label)}\n        </React.Fragment>\n      );\n    } else if (obj2_mapped) {\n      return (\n        <React.Fragment key={label}>\n          {renderCompareLine(obj1_mapped as string, \"\", label)}\n          {renderCompareLine(obj2_mapped as string, \"new\", label)}\n        </React.Fragment>\n      );\n    } else {\n      return undefined;\n    }\n  };\n\n  const renderCompareLine = (value: string, compareType: \"old\" | \"new\" | \"equal\" | \"change\" | \"\", label?: string) => {\n    const borderStyles = {\n      height: \"100%\",\n      paddingBottom: 0.25,\n      paddingTop: 0.25,\n      borderRadius: 0,\n      borderStyle: \"hidden solid hidden solid\",\n      overflow: \"hidden\",\n    };\n    if (compareType) {\n      return (\n        <Grid item xs={6}>\n          <Paper\n            variant=\"outlined\"\n            sx={{\n              backgroundColor: COMPARE_COLORS[compareType].background,\n              ...borderStyles,\n            }}\n          >\n            <Stack direction=\"row\">\n              {compareType !== \"equal\" ? (\n                <Typography\n                  fontWeight=\"bold\"\n                  sx={{\n                    textAlign: \"center\",\n                    minWidth: \"2rem\",\n                    color: COMPARE_COLORS[compareType].text,\n                  }}\n                  variant=\"body2\"\n                >\n                  {compareType === \"old\" ? \"-\" : compareType === \"new\" ? \"+\" : \"~\"}\n                </Typography>\n              ) : (\n                <Box sx={{ minWidth: \"2rem\" }} />\n              )}\n              {label ? (\n                <Typography\n                  sx={{\n                    marginRight: 1,\n                    color: COMPARE_COLORS[compareType].text,\n                  }}\n                  variant=\"body2\"\n                  fontWeight=\"bold\"\n                >\n                  {label + \":\"}\n                </Typography>\n              ) : undefined}\n              <Typography sx={{ color: COMPARE_COLORS[compareType].text }} display=\"inline\" variant=\"body2\">\n                {value.toString()}\n              </Typography>\n            </Stack>\n          </Paper>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid item xs={6}>\n          <Paper\n            variant=\"outlined\"\n            sx={{\n              backgroundColor: COMPARE_COLORS[\"equal\"].background,\n              ...borderStyles,\n            }}\n          >\n            <Box />\n          </Paper>\n        </Grid>\n      );\n    }\n  };\n\n  const doubleRenderTypography = (\n    variant: Variant,\n    text: string,\n    styleOverrides: { [key: string]: string | number | undefined } = {},\n  ) => {\n    const headerStyles = {\n      paddingLeft: 4,\n      paddingBottom: 1,\n      paddingTop: 4,\n      borderRadius: 0,\n      borderStyle: \"hidden solid hidden solid\",\n      ...styleOverrides,\n    };\n    return (\n      <>\n        <Grid item xs={6}>\n          <Paper\n            variant=\"outlined\"\n            sx={{\n              ...headerStyles,\n            }}\n          >\n            <Typography variant={variant}>{text}</Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper\n            variant=\"outlined\"\n            sx={{\n              ...headerStyles,\n            }}\n          >\n            <Typography variant={variant}>{text}</Typography>\n          </Paper>\n        </Grid>\n      </>\n    );\n  };\n\n  const compareArrays = (array1: any[] = [], array2: any[] = [], mapping = (obj: any) => obj) => {\n    const s1 = array1.map(e => JSON.stringify(e));\n    const s2 = array2.map(e => JSON.stringify(e));\n    const set1 = new Set(s1);\n    const set2 = new Set(s2);\n\n    const merged = [...new Set([...s1, ...s2])];\n\n    return merged.sort().map(key => {\n      const value = JSON.parse(key);\n      return comparePaths(set1.has(key) ? value : undefined, set2.has(key) ? value : undefined, undefined, mapping);\n    });\n  };\n\n  const createProjectCompare = (\n    proj1?: components[\"schemas\"][\"ProjectDef\"],\n    proj2?: components[\"schemas\"][\"ProjectDef\"],\n  ) => {\n    const runtimeEnvironment: (keyof components[\"schemas\"][\"RuntimeEnvironment\"])[] = [\n      \"name\",\n      \"python_version\",\n      \"cuda_version\",\n      \"openblas_version\",\n      \"openmpi_version\",\n      \"cudnn_version\",\n      \"mkl_version\",\n      \"platform\",\n      \"base_image\",\n    ];\n    const dev_packages = [\n      ...new Set([\n        ...Object.keys((proj1?.requirements as Requirements)?.[\"dev-packages\"] ?? {}),\n        ...Object.keys((proj2?.requirements as Requirements)?.[\"dev-packages\"] ?? {}),\n      ]),\n    ];\n    const packages = [\n      ...new Set([\n        ...Object.keys((proj1?.requirements as Requirements)?.packages ?? {}),\n        ...Object.keys((proj2?.requirements as Requirements)?.packages ?? {}),\n      ]),\n    ];\n    const requirements_locked = [\n      ...new Set([\n        ...Object.keys((proj1?.requirements_locked as Lockfile)?.default ?? {}),\n        ...Object.keys((proj2?.requirements_locked as Lockfile)?.default ?? {}),\n      ]),\n    ];\n\n    return (\n      <React.Fragment>\n        {dev_packages.length > 0\n          ? doubleRenderTypography(\"h6\", \"Pipfile Dev Packages\", {\n              paddingTop: 0.5,\n              paddingBottom: 0.5,\n            })\n          : undefined}\n        {dev_packages.map(key => {\n          return comparePaths(\n            (proj1?.requirements as Requirements)?.[\"dev-packages\"][key],\n            (proj2?.requirements as Requirements)?.[\"dev-packages\"][key],\n            key,\n          );\n        })}\n\n        {packages.length > 0\n          ? doubleRenderTypography(\"h6\", \"Pipfile Packages\", {\n              paddingTop: 0.5,\n              paddingBottom: 0.5,\n            })\n          : undefined}\n        {packages.map(key => {\n          return comparePaths(\n            (proj1?.requirements as Requirements)?.packages[key],\n            (proj2?.requirements as Requirements)?.packages[key],\n            key,\n          );\n        })}\n\n        {doubleRenderTypography(\"h6\", \"Pipfile.lock Sources\")}\n        {compareArrays(\n          (proj1?.requirements_locked as Lockfile)?._meta?.sources,\n          (proj2?.requirements_locked as Lockfile)?._meta?.sources,\n          obj => {\n            return `${obj.name} (${obj.url})`;\n          },\n        )}\n\n        {doubleRenderTypography(\"h6\", \"Pipfile.lock Packages\")}\n        {requirements_locked.map(key => {\n          return comparePaths(\n            (proj1?.requirements_locked as Lockfile)?.default[key],\n            (proj2?.requirements_locked as Lockfile)?.default[key],\n            key,\n            obj => {\n              return obj?.version;\n            },\n          );\n        })}\n\n        {doubleRenderTypography(\"h6\", \"Runtime Environment\")}\n        {runtimeEnvironment.map(field => {\n          return comparePaths(proj1?.runtime_environment?.[field], proj2?.runtime_environment?.[field], field);\n        })}\n\n        {comparePaths(\n          proj1?.runtime_environment?.operating_system,\n          proj1?.runtime_environment?.operating_system,\n          \"operating_system\",\n          obj => {\n            return obj.name + \" \" + obj.version;\n          },\n        )}\n        {comparePaths(proj1?.runtime_environment?.hardware, proj1?.runtime_environment?.hardware, \"hardware\", obj => {\n          let text = \"\";\n          text += obj.cpu_model ?? \" \";\n          text += obj.cpu_family ?? \" \";\n          text += obj.gpu_model ?? \" \";\n          if (text.trim()) {\n            return text;\n          }\n        })}\n      </React.Fragment>\n    );\n  };\n\n  const createCompare = (doc1: AdviseDocumentRequestResponseSuccess, doc2: AdviseDocumentRequestResponseSuccess) => {\n    const metadataFields: (keyof AdviseDocumentRequestResponseSuccess[\"metadata\"])[] = [\n      \"document_id\",\n      \"analyzer\",\n      \"analyzer_version\",\n      \"datetime\",\n      \"thoth_deployment_name\",\n    ];\n    const argumentFields: string[] = [\n      \"beam_width\",\n      \"constraints\",\n      \"count\",\n      \"dev\",\n      \"labels\",\n      \"library_usage\",\n      \"limit\",\n      \"limit_latest_versions\",\n      \"no_pretty\",\n      \"output\",\n      \"pipeline\",\n      \"plot\",\n      \"predictor\",\n      \"recommendation_type\",\n      \"requirements\",\n      \"requirements_format\",\n      \"requirements_locked\",\n      \"runtime_environment\",\n      \"seed\",\n      \"user_stack_scoring\",\n    ];\n    const distributionFields: (keyof AdviseDocumentRequestResponseSuccess[\"metadata\"][\"distribution\"])[] = [\n      \"codename\",\n      \"id\",\n      \"like\",\n      \"version\",\n    ];\n    const osReleaseFields: (keyof AdviseDocumentRequestResponseSuccess[\"metadata\"][\"os_release\"])[] = [\n      \"id\",\n      \"name\",\n      \"platform_id\",\n      \"version\",\n    ];\n\n    return (\n      <>\n        {doubleRenderTypography(\"h5\", \"Result\", { paddingTop: 0 })}\n        {comparePaths(\n          doc1?.result?.report?.accepted_final_states_count,\n          doc2?.result?.report?.accepted_final_states_count,\n          \"accepted_final_states_count\",\n        )}\n        {comparePaths(\n          doc1?.result?.report?.discarded_final_states_count,\n          doc2?.result?.report?.discarded_final_states_count,\n          \"discarded_final_states_count\",\n        )}\n        {comparePaths(\n          doc1?.result?.report?.resolver_iterations,\n          doc2?.result?.report?.resolver_iterations,\n          \"resolver_iterations\",\n        )}\n        {comparePaths(doc1?.result?.report?.pipeline, doc2?.result?.report?.pipeline, \"pipeline\")}\n\n        {createProjectCompare(\n          doc1?.result?.report?.products?.[0]?.project,\n          doc2?.result?.report?.products?.[0]?.project,\n        )}\n\n        {doubleRenderTypography(\"h6\", \"Advised Manifest Changes\")}\n        {compareArrays(\n          doc1?.result?.report?.products?.[0]?.advised_manifest_changes ?? [],\n          doc2?.result?.report?.products?.[0]?.advised_manifest_changes ?? [],\n          obj => {\n            let text = \"\";\n            obj.forEach(\n              (change: {\n                patch: {\n                  path: any;\n                  op: any;\n                  value: { name: any; value: any };\n                };\n              }) => {\n                text += `[ ${change?.patch?.path}; ${change?.patch?.op}; ${change?.patch?.value?.name}: ${change?.patch?.value?.value} ]`;\n              },\n            );\n            return text;\n          },\n        )}\n\n        {doubleRenderTypography(\"h6\", \"Stack Info\")}\n        {compareArrays(doc1?.result?.report?.stack_info, doc2?.result?.report?.stack_info, obj => {\n          return obj.message;\n        })}\n\n        {doubleRenderTypography(\"h5\", \"Metadata\")}\n        {metadataFields.map(field => {\n          return comparePaths(doc1?.metadata?.[field], doc2.metadata?.[field], field);\n        })}\n        {comparePaths(doc1?.result?.error_msg, doc2?.result?.error_msg, \"error_msg\")}\n\n        {doubleRenderTypography(\"h6\", \"Arguments\")}\n        {argumentFields.map(field => {\n          return comparePaths(\n            (\n              doc1?.metadata?.arguments?.advise as {\n                [key: string]: any;\n              }\n            )?.[field],\n            (\n              doc2?.metadata?.arguments?.advise as {\n                [key: string]: any;\n              }\n            )?.[field],\n            field,\n          );\n        })}\n\n        {doubleRenderTypography(\"h6\", \"Distribution\")}\n        {distributionFields.map(field => {\n          return comparePaths(doc1?.metadata?.distribution?.[field], doc2?.metadata?.distribution?.[field], field);\n        })}\n\n        {doubleRenderTypography(\"h6\", \"OS Release\")}\n        {osReleaseFields.map(field => {\n          return comparePaths(\n            doc1?.metadata?.os_release?.[field],\n            doc2?.metadata?.os_release?.[field],\n            field as string,\n          );\n        })}\n\n        {doubleRenderTypography(\"h6\", \"Python\")}\n        {comparePaths(doc1?.metadata?.python, doc2?.metadata?.python, \"version\", obj => {\n          return `${obj.major}.${obj.minor}.${obj.micro}`;\n        })}\n        {comparePaths(doc1?.metadata?.python?.api_version, doc2?.metadata?.python?.api_version, \"api_version\")}\n        {comparePaths(\n          doc1?.metadata?.python?.implementation_name,\n          doc2?.metadata?.python?.implementation_name,\n          \"implementation_name\",\n        )}\n        {comparePaths(doc1?.metadata?.python?.releaselevel, doc2?.metadata?.python?.releaselevel, \"release level\")}\n      </>\n    );\n  };\n\n  const compareJSX = useMemo(() => {\n    if (!adviseDocument || !compareDoc.data?.data) {\n      if (comparison === \"Original Lockfile\") {\n        return (\n          <React.Fragment>\n            {createProjectCompare(\n              adviseDocument?.result?.report?.products?.[0]?.project,\n              (\n                adviseDocument?.result?.parameters as {\n                  project: components[\"schemas\"][\"ProjectDef\"];\n                }\n              )?.project,\n            )}\n            {doubleRenderTypography(\"body1\", \" \", {\n              borderBottomStyle: \"solid\",\n              borderRadius: undefined,\n              borderTopLeftRadius: 0,\n              borderTopRightRadius: 0,\n            })}\n          </React.Fragment>\n        );\n      }\n      return undefined;\n    }\n    return (\n      <>\n        {createCompare(adviseDocument, compareDoc.data?.data)}\n        {doubleRenderTypography(\"body1\", \" \", {\n          borderBottomStyle: \"solid\",\n          borderRadius: undefined,\n          borderTopLeftRadius: 0,\n          borderTopRightRadius: 0,\n        })}\n      </>\n    );\n  }, [adviseDocument, compareDoc.data?.data, differencesOnly]);\n\n  if (!adviseDocument) {\n    return (\n      <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" align=\"center\">\n          Compare not available\n        </Typography>\n        <Typography variant=\"body2\" align=\"center\">\n          The adviser has not finished resolving packages\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <ScrollToTop>\n      <Box>\n        <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n          <DialogTitle>Import another Advise document</DialogTitle>\n          <DialogContent>\n            <Box component=\"form\" sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              <TextField\n                error={importText === null}\n                onChange={event => setImportText(event.target.value)}\n                label=\"Document ID\"\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => handleClose()}>Cancel</Button>\n            <Button onClick={() => handleImport()}>Import</Button>\n          </DialogActions>\n        </Dialog>\n        <Grid container mb={1} columnSpacing={10}>\n          <Grid item xs={6}>\n            <Paper\n              variant=\"outlined\"\n              sx={{\n                height: \"100%\",\n                borderTopStyle: \"solid\",\n                borderBottomLeftRadius: 0,\n                borderBottomRightRadius: 0,\n                paddingBottom: 4,\n                paddingTop: 4,\n                borderStyle: \"solid solid hidden solid\",\n              }}\n            >\n              <Typography\n                sx={{\n                  textAlign: \"center\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                  overflow: \"hidden\",\n                }}\n                fontWeight=\"bold\"\n                variant=\"h6\"\n              >\n                Current Advise Document\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper\n              variant=\"outlined\"\n              sx={{\n                height: \"100%\",\n                borderTopStyle: \"solid\",\n                borderBottomLeftRadius: 0,\n                borderBottomRightRadius: 0,\n                paddingBottom: 4,\n                paddingTop: 4,\n                borderStyle: \"solid solid hidden solid\",\n              }}\n            >\n              <Stack direction=\"row\" spacing={1} sx={{ marginX: \"10%\" }}>\n                <FormControl fullWidth>\n                  <Select value={comparison} displayEmpty onChange={handleChange} size=\"small\">\n                    <MenuItem disabled value=\"\">\n                      <em>Select a comparison</em>\n                    </MenuItem>\n\n                    {(adviseDocument?.result?.parameters?.project as components[\"schemas\"][\"ProjectDef\"])\n                      ?.requirements_locked && <MenuItem value=\"Original Lockfile\">Original Lockfile</MenuItem>}\n\n                    {optionList\n                      .sort((a, b) => (b ? b.timestamp : 0) - (a ? a.timestamp : 0))\n                      .map(option => {\n                        if (option) {\n                          return (\n                            <MenuItem key={option.id} value={option.id}>\n                              {option.readable}\n                            </MenuItem>\n                          );\n                        }\n                      })}\n                  </Select>\n                </FormControl>\n                <IconButton onClick={handleClickOpen}>\n                  <AddRoundedIcon />\n                </IconButton>\n              </Stack>\n              <FormControlLabel\n                sx={{ marginX: \"10%\", marginTop: 0.5 }}\n                control={\n                  <Switch\n                    defaultChecked\n                    checked={differencesOnly}\n                    onChange={event => setDifferencesOnly(event.target.checked)}\n                  />\n                }\n                label=\"Differences only\"\n              />\n            </Paper>\n          </Grid>\n          {compareJSX}\n        </Grid>\n      </Box>\n    </ScrollToTop>\n  );\n};\n","import { useEffect, useRef } from \"react\";\n\nexport const useInterval = (callback: undefined | (() => void), delay: number | null) => {\n  const savedCallback = useRef<undefined | (() => void)>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      if (savedCallback.current) {\n        savedCallback.current();\n      }\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import { Node, NodeValue } from \"lib/interfaces/Node\";\n\n/**\n * Graph data structure implemented with an adjacent list\n */\nexport class Graph<NodeType extends Node<NodeValue>> {\n  nodes: Map<NodeType[\"key\"], NodeType>;\n  visEdges: {\n    id: number | string;\n    to: string;\n    from: string;\n  }[];\n\n  constructor() {\n    this.nodes = new Map();\n    this.visEdges = [];\n  }\n\n  /**\n   * Add a node to the graph.\n   */\n  addVertex(\n    key: NodeType[\"key\"],\n    value: NodeType[\"value\"],\n    Node: new (key: string, value: NodeType[\"value\"]) => NodeType,\n  ): NodeType {\n    let node = this.nodes.get(key);\n    if (node) {\n      return node;\n    }\n\n    node = new Node(key, value);\n    this.nodes.set(key, node);\n    return node;\n  }\n\n  /**\n   * Create a connection between the source node and the destination node.\n   * If the nodes don't exist, then it will make them on the fly.\n   */\n  addEdge(source: NodeType[\"key\"], destination: NodeType[\"key\"]): [NodeType | undefined, NodeType | undefined] {\n    const sourceNode = this.nodes.get(source);\n    const destinationNode = this.nodes.get(destination);\n\n    if (sourceNode && destinationNode) {\n      sourceNode.addAdjacent(destinationNode);\n    }\n\n    return [sourceNode, destinationNode];\n  }\n\n  /**\n   * Generic graph search where we can pass a bfs or dfs\n   */\n  *graphSearch(first: NodeType, type = \"bfs\"): Generator<NodeType> {\n    const visited = new Set();\n    const visitList = [];\n\n    visitList.push(first);\n\n    while (visitList.length !== 0) {\n      const node = type === \"dfs\" ? visitList.pop() : visitList.shift();\n      if (node && !visited.has(node)) {\n        yield node;\n        visited.add(node);\n        node.getAdjacents().forEach(adj => visitList.push(adj));\n      }\n    }\n  }\n\n  /**\n   * Find a path between source and destination\n   * It might not be the optimal path\n   */\n  findPath(source: NodeType[\"key\"], destination: NodeType[\"key\"], path: Set<NodeType> = new Set()): NodeType[] {\n    const sourceNode = this.nodes.get(source);\n    const destinationNode = this.nodes.get(destination);\n    const newPath = new Set(path);\n\n    if (!destinationNode || !sourceNode) return [];\n\n    newPath.add(sourceNode);\n\n    if (source === destination) {\n      return Array.from(newPath);\n    }\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const node of sourceNode.getAdjacents()) {\n      if (!newPath.has(node)) {\n        const nextPath = this.findPath(\n          node.key, // TODO might still be node.value\n          destination,\n          newPath,\n        );\n        if (nextPath.length) {\n          return nextPath;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  findAllNodesOnAllPaths(\n    source: NodeType,\n    destinationKey: NodeType[\"key\"],\n    visited: Map<NodeType[\"key\"], NodeType> = new Map(),\n  ): Map<NodeType[\"key\"], NodeType> {\n    const visitList: (NodeType | undefined)[] = [];\n\n    visitList.push(source);\n\n    while (visitList.length !== 0) {\n      const node = visitList.pop();\n      if (node && node.key === destinationKey) {\n        continue;\n      }\n      if (node && !visited.has(node.key)) {\n        visited.set(node.key, node);\n        node.parents.forEach(parent => visitList.push(this.nodes.get(parent)));\n      }\n    }\n\n    return visited;\n  }\n\n  /**\n   * Find all paths from source to destination\n   */\n  findAllPaths(source: NodeType[\"key\"], destination: NodeType[\"key\"], path: Set<NodeType> = new Set()): NodeType[][] {\n    const sourceNode = this.nodes.get(source);\n    const destinationNode = this.nodes.get(destination);\n    const newPath = new Set(path);\n\n    if (!destinationNode || !sourceNode) return [];\n\n    newPath.add(sourceNode);\n\n    if (source === destination) {\n      return [Array.from(newPath)];\n    }\n\n    const paths: NodeType[][] = [];\n    sourceNode.getAdjacents().forEach(node => {\n      if (!newPath.has(node)) {\n        const nextPaths = this.findAllPaths(\n          node.key, // TODO might need to use node.value.id\n          destination,\n          newPath,\n        );\n        nextPaths.forEach(nextPath => {\n          paths.push(nextPath);\n        });\n      }\n    });\n    return paths;\n  }\n}\n","export interface NodeValue {\n  [key: string]: unknown;\n}\n\n/**\n * Graph node/vertex that hold adjacency nodes\n * For performance, uses a HashSet instead of array for adjacent.\n */\nexport class Node<GenericNodeValue extends NodeValue> {\n  /** Nodes connected (children) to this node **/\n  adjacents: Set<this>;\n  /** the unique identifier **/\n  key: string;\n  value: GenericNodeValue;\n  /** Nodes connected (parents) to this node **/\n  parents: Set<string>;\n\n  constructor(key: string, value: GenericNodeValue) {\n    this.adjacents = new Set(); // adjacency list\n    this.key = key; // key\n    this.value = value;\n    this.parents = new Set<string>();\n  }\n\n  /**\n   * Add node to adjacency list\n   * Runtime: O(1)\n   * @param {this} node\n   */\n  addAdjacent(node: this) {\n    this.adjacents.add(node);\n  }\n\n  /**\n   * Check if a Node is adjacent to other\n   * Runtime: O(1)\n   * @param {this} node\n   */\n  isAdjacent(node: this) {\n    return this.adjacents.has(node);\n  }\n\n  /**\n   * Get all adjacent nodes\n   */\n  getAdjacents() {\n    return Array.from(this.adjacents);\n  }\n}\n","import { useContext, useEffect, useState } from \"react\";\n\nimport { usePackagesMetadata } from \"api\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { components, operations } from \"../lib/schema\";\nimport { PackageMetadata } from \"../lib/types/PackageMetadata\";\nimport { DispatchContext } from \"../stores/Global\";\n\nexport type Requirements = {\n  \"dev-packages\": { [key: string]: string };\n  packages: { [key: string]: string };\n  requires: {\n    python_version: string;\n  };\n  source: {\n    name: string;\n    url: string;\n    verify_ssl: boolean;\n  }[];\n};\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useGraph(\n  data: operations[\"get_python_package_version_metadata\"][\"parameters\"][\"query\"][] = [],\n  knownRoots?: Requirements[\"packages\"],\n  justifications?: components[\"schemas\"][\"Justification\"],\n  advise_document?: components[\"schemas\"][\"AdviserResultResponse\"],\n) {\n  const { updateLoading } = useContext(DispatchContext);\n  const allMetadata = usePackagesMetadata(data);\n\n  const [loading, setLoading] = useState(true);\n  const [graph, setGraph] = useState<Graph<Node<PackageNodeValue>>>();\n\n  useEffect(() => {\n    if (!allMetadata || allMetadata.length === 0) {\n      return;\n    }\n\n    updateLoading(\n      \"graph\",\n      \"Loading package metadata\",\n      allMetadata.filter(query => !query.isLoading).length,\n      allMetadata.length,\n    );\n\n    if (allMetadata.every(query => !query.isLoading)) {\n      setLoading(false);\n    }\n  }, [allMetadata]);\n\n  useEffect(() => {\n    if (loading) {\n      return;\n    } else {\n      updateLoading(\"graph\");\n    }\n\n    // create graph\n    const tempGraph = new Graph<Node<PackageNodeValue>>();\n    const notRoot: unknown[] = [];\n\n    // add data to graph\n    allMetadata.forEach(query => {\n      // if could not find metadata\n      if (query.error) {\n        const error = query.error;\n        const params = error.response?.data?.parameters ?? error.response?.config?.params;\n\n        const value: PackageNodeValue = {\n          id: params.name.toLowerCase(),\n          label: params.name + \" \" + params.version,\n          name: params.name,\n          version: params.version,\n          metadata: null,\n          depth: 0,\n        };\n\n        // add package to graph\n        tempGraph.addVertex(value.id, value, Node);\n      }\n      // metadata was found\n      else if (query.isSuccess) {\n        const metadata = query.data.data.metadata;\n        const value = {\n          id: metadata.package_name.toLowerCase(),\n          label: metadata.package_name + \" \" + metadata.package_version,\n          name: metadata.package_name,\n          version: metadata.package_version,\n          metadata: metadata.importlib_metadata.metadata as PackageMetadata,\n          install_size: metadata.importlib_metadata.files.reduce(\n            (prev, cur) => prev + (cur as { size: number })?.size,\n            0,\n          ),\n        };\n\n        // add package to graph\n        tempGraph.addVertex(value.id, value, Node);\n      }\n    });\n\n    const dependency_graph = advise_document?.[\"result\"]?.[\"report\"]?.[\"products\"]?.[0]?.dependency_graph;\n    if (dependency_graph) {\n      dependency_graph.edges.forEach(([source, destination]) => {\n        const cleaned_source = dependency_graph.nodes[source]?.toLowerCase().replace(\".\", \"-\");\n        const cleaned_destination = dependency_graph.nodes[destination]?.toLowerCase().replace(\".\", \"-\");\n\n        const sourceNode = tempGraph.nodes.get(cleaned_source);\n        const destinationNode = tempGraph.nodes.get(cleaned_destination);\n        if (sourceNode && destinationNode) {\n          tempGraph.addEdge(sourceNode.value.id, destinationNode.value.id);\n\n          // set parent\n          destinationNode.parents.add(sourceNode.value.id);\n          notRoot.push(destinationNode.value.id);\n        }\n      });\n    }\n\n    // add app node to graph\n    const app = tempGraph.addVertex(\n      \"*App\",\n      {\n        id: \"*App\",\n        label: \"App\",\n        depth: -1,\n      },\n      Node,\n    );\n\n    notRoot.push(\"*App\");\n\n    const visited = new Set();\n    const visitList: Node<PackageNodeValue>[] = [];\n\n    // get roots and connect to app\n    tempGraph.nodes.forEach((value, key) => {\n      if (!notRoot.includes(key) || Object.keys(knownRoots ?? {}).includes(key)) {\n        value.value.depth = 0;\n        value.parents.add(\"*App\");\n        visitList.push(value);\n        tempGraph.addEdge(app.key, value.key);\n      }\n    });\n\n    const justifiedPackages = new Map();\n\n    if (justifications) {\n      justifications.forEach(\n        (\n          justification: components[\"schemas\"][\"Justification\"][number] & {\n            package_name?: string;\n          },\n        ) => {\n          const key = justification.package_name ?? \"*App\";\n          if (justifiedPackages.has(key)) {\n            justifiedPackages.set(key, [...justifiedPackages.get(key), justification]);\n          } else {\n            justifiedPackages.set(key, [justification]);\n          }\n        },\n      );\n    }\n\n    // set depth and parent packages using dfs\n    while (visitList.length !== 0) {\n      const node = visitList.pop();\n      if (node && !visited.has(node)) {\n        visited.add(node);\n\n        // check if there is a justification for change\n        if (justifiedPackages.has(node.key)) {\n          node.value.justifications = justifiedPackages.get(node.key);\n        }\n\n        const adjs = node.getAdjacents();\n\n        for (let i = 0; i < adjs.length; i++) {\n          // update depth\n          adjs[i].value.depth = Math.min(\n            (node.value?.depth ?? 0) + 1,\n            adjs[i].value.depth ?? (node.value?.depth ?? 0) + 2,\n          );\n          visitList.push(adjs[i]);\n        }\n      }\n    }\n\n    const visGraphEdges = new Map();\n\n    // add edges from old graph\n    tempGraph.nodes.forEach(value => {\n      // set package edges\n      value.adjacents.forEach(adj => {\n        visGraphEdges.set(value.value.id + adj.value.id, {\n          id: value.value.id + adj.value.id,\n          to: value.value.id,\n          from: adj.value.id,\n        });\n      });\n    });\n\n    // add edges to merged graph Object\n    tempGraph[\"visEdges\"] = Array.from(visGraphEdges.values());\n\n    setGraph(tempGraph);\n  }, [loading, knownRoots]);\n\n  return graph;\n}\n","import React from \"react\";\n\ninterface IAdviseNotFound {\n  analysis_id: string;\n}\n\nexport const AdviseNotFound = ({ analysis_id }: IAdviseNotFound) => {\n  return <div>`&quot;{analysis_id}&quot;` not found</div>;\n};\n","import * as React from \"react\";\nimport { Box } from \"@mui/material\";\n\ninterface IProps {\n  children: NonNullable<React.ReactNode>;\n}\n\n/**\n * Main layout adds margins and spacing to the whole app.\n */\nexport const MainLayout = ({ children }: IProps) => {\n  return <Box sx={{ marginY: 2, marginRight: 2, height: \"calc(100vh - 32px)\" }}>{children}</Box>;\n};\n","import * as React from \"react\";\nimport { Box, Button, Chip, CSSObject, IconButton, Stack, styled, Theme, Typography } from \"@mui/material\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport AutoAwesomeMosaicRoundedIcon from \"@mui/icons-material/AutoAwesomeMosaicRounded\";\nimport ArticleRoundedIcon from \"@mui/icons-material/ArticleRounded\";\nimport CompareArrowsRoundedIcon from \"@mui/icons-material/CompareArrowsRounded\";\nimport TerminalRoundedIcon from \"@mui/icons-material/TerminalRounded\";\nimport { Link as RouterLink, useLocation, useNavigate } from \"react-router-dom\";\nimport CircleRoundedIcon from \"@mui/icons-material/CircleRounded\";\nimport { useMemo } from \"react\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\nimport MenuRoundedIcon from \"@mui/icons-material/MenuRounded\";\nimport MenuOpenRoundedIcon from \"@mui/icons-material/MenuOpenRounded\";\nimport { hexFromArgb } from \"@material/material-color-utilities\";\n\nimport { activeColor } from \"styles/Theme\";\n\nconst drawerWidth = 360;\n\ninterface IProps {\n  children: React.ReactNode;\n  chipData: {\n    [key: string]: {\n      info: number;\n      warning: number;\n      error: number;\n    };\n  };\n}\n\ninterface ICustomListItem {\n  label: string;\n  to: string;\n  icon?: React.ReactNode;\n  selected: boolean;\n  chipData?: {\n    info: number;\n    warning: number;\n    error: number;\n  };\n  disabled?: boolean;\n  open: boolean;\n  hideOnClosed?: boolean;\n}\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: \"80px\",\n});\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: prop => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nconst CustomListItem = ({\n  label,\n  to,\n  selected = false,\n  icon,\n  chipData,\n  disabled,\n  open,\n  hideOnClosed,\n}: ICustomListItem) => {\n  if (!open && hideOnClosed) {\n    return null;\n  }\n\n  return (\n    <ListItem\n      sx={{\n        borderRadius: 100,\n        height: 48,\n        paddingLeft: 3,\n        paddingRight: 3,\n        marginRight: 1.5,\n        marginY: 0.5,\n        justifyContent: !open ? \"center\" : undefined,\n        backgroundColor: selected ? hexFromArgb(activeColor.light.colorContainer) : undefined,\n        color: selected ? hexFromArgb(activeColor.light.onColorContainer) : undefined,\n      }}\n      button\n      disabled={disabled}\n      component={RouterLink}\n      to={to}\n      secondaryAction={\n        chipData && open ? (\n          <Stack direction=\"row\" spacing={1}>\n            {chipData.info ? (\n              <Chip variant=\"outlined\" size=\"small\" icon={<InfoOutlinedIcon />} label={chipData.info} color=\"info\" />\n            ) : undefined}\n            {chipData.warning ? (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                icon={<WarningAmberOutlinedIcon />}\n                label={chipData.warning}\n                color=\"warning\"\n              />\n            ) : undefined}\n            {chipData.error ? (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                icon={<ErrorOutlineOutlinedIcon />}\n                label={chipData.error}\n                color=\"error\"\n              />\n            ) : undefined}\n          </Stack>\n        ) : undefined\n      }\n    >\n      {icon ? (\n        <ListItemIcon\n          sx={{\n            minWidth: 3,\n            marginRight: open ? 1.5 : 0,\n            color: selected ? hexFromArgb(activeColor.light.onColorContainer) : undefined,\n          }}\n        >\n          {icon}\n        </ListItemIcon>\n      ) : undefined}\n      {open ? (\n        <ListItemText disableTypography sx={{ marginLeft: icon ? undefined : 4.5 }}>\n          <Typography fontWeight=\"600\" variant=\"body2\">\n            {label}\n          </Typography>\n        </ListItemText>\n      ) : undefined}\n    </ListItem>\n  );\n};\n\nexport const AdviserLayout = ({ children, chipData }: IProps) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [open, setOpen] = React.useState(false);\n\n  const currentTab = useMemo(() => {\n    return location.pathname.split(\"/\").at(3);\n  }, [location.pathname]);\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <Drawer open={open} variant=\"permanent\">\n        {open ? (\n          <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            sx={{\n              marginBottom: 1,\n              marginTop: 3,\n              paddingRight: 1.5,\n            }}\n          >\n            <Typography\n              component={Button}\n              onClick={() => navigate(\"/\")}\n              variant=\"h5\"\n              sx={{\n                textAlign: \"center\",\n                color: \"primary.main\",\n                marginLeft: 3,\n                width: \"fit-content\",\n              }}\n            >\n              SEARCH UI\n            </Typography>\n            <IconButton onClick={() => setOpen(false)}>\n              <MenuOpenRoundedIcon />\n            </IconButton>\n          </Stack>\n        ) : (\n          <Box\n            sx={{\n              marginBottom: 1,\n              marginTop: 3,\n              textAlign: \"center\",\n            }}\n          >\n            <IconButton onClick={() => setOpen(true)}>\n              <MenuRoundedIcon />\n            </IconButton>\n          </Box>\n        )}\n        <List sx={{ paddingLeft: 1.5, paddingRight: 1.5 }}>\n          <CustomListItem\n            selected={currentTab === \"summary\"}\n            label=\"Summary\"\n            to=\"summary\"\n            icon={<AutoAwesomeMosaicRoundedIcon />}\n            open={open}\n          />\n          <CustomListItem\n            label=\"Packages\"\n            to=\"packages\"\n            selected={currentTab === \"packages\"}\n            icon={<ArticleRoundedIcon />}\n            open={open}\n          />\n          <CustomListItem\n            label=\"Compare\"\n            to=\"compare\"\n            selected={currentTab === \"compare\"}\n            icon={<CompareArrowsRoundedIcon />}\n            open={open}\n          />\n          <CustomListItem\n            label=\"Logs\"\n            to=\"logs\"\n            selected={currentTab === \"logs\"}\n            icon={<TerminalRoundedIcon />}\n            open={open}\n          />\n        </List>\n        {open ? <Divider /> : undefined}\n        <List sx={{ paddingLeft: 1, paddingRight: 1.5 }}>\n          <CustomListItem\n            label=\"Environment\"\n            to=\"environment\"\n            icon={<CircleRoundedIcon />}\n            selected={currentTab === \"environment\"}\n            open={open}\n            hideOnClosed\n          />\n          <CustomListItem\n            label=\"Licenses\"\n            to=\"licenses\"\n            chipData={chipData[\"licenses\"]}\n            icon={<CircleRoundedIcon />}\n            selected={currentTab === \"licenses\"}\n            open={open}\n            hideOnClosed\n          />\n          <CustomListItem\n            label=\"Dependency Tree\"\n            to=\"dependency-tree\"\n            icon={<CircleRoundedIcon />}\n            selected={currentTab === \"dependency-tree\"}\n            open={open}\n            hideOnClosed\n          />\n          <CustomListItem\n            label=\"Stack Info\"\n            to=\"stack-info\"\n            icon={<CircleRoundedIcon />}\n            selected={currentTab === \"stack-info\"}\n            chipData={chipData[\"stack-info\"]}\n            open={open}\n            hideOnClosed\n          />\n        </List>\n      </Drawer>\n      <Box sx={{ width: \"100%\", overflowX: \"hidden\" }}>{children}</Box>\n    </Box>\n  );\n};\n","import * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"@mui/material\";\n\ninterface IProps {\n  children: React.ReactNode;\n  goHome?: boolean;\n}\n\n/**\n * Layout is used in most of the app and allows for backwards navigation.\n */\nexport const NavigationLayout = ({ children, goHome = false }: IProps) => {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          if (goHome) {\n            navigate(\"/\");\n          } else {\n            navigate(-1);\n          }\n        }}\n      >\n        {goHome ? \"go home\" : \"go back\"}\n      </Button>\n      <div>{children}</div>\n    </>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Chip } from \"@mui/material\";\nimport { ScrollToTop } from \"components/Elements/ScrollToTop\";\n\ninterface IAdviseLogs {\n  logs?: string | null;\n}\n\nexport function AdviseLogs({ logs }: IAdviseLogs) {\n  const rows = useMemo(() => {\n    return logs\n      ?.split(\"\\n\")\n      .slice(0, 20)\n      .map(line => {\n        let log;\n        try {\n          log = JSON.parse(line);\n        } catch (e) {\n          return {};\n        }\n\n        if (log) {\n          return {\n            name: log.name,\n            levelname: log.levelname,\n            module: log.module,\n            lineno: log.lineno,\n            funcname: log.funcname,\n            created: log.created,\n            asctime: log.asctime,\n            msecs: log.msecs,\n            relative_created: log.relative_created,\n            process: log.process,\n            message: log.message,\n          };\n        } else {\n          return {};\n        }\n      });\n  }, [logs]);\n  return (\n    <ScrollToTop>\n      <TableContainer component={Paper} variant=\"outlined\">\n        <Table size=\"small\" aria-label=\"a dense table\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              <TableCell>Level</TableCell>\n              <TableCell align=\"left\">Name</TableCell>\n              <TableCell align=\"left\">Function</TableCell>\n              <TableCell align=\"right\">Line Number</TableCell>\n              <TableCell align=\"right\">Process</TableCell>\n              <TableCell align=\"left\">Message</TableCell>\n              <TableCell align=\"right\">Time</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows?.map(row => (\n              <TableRow\n                key={row.created}\n                sx={{\n                  \"&:last-child td, &:last-child th\": {\n                    border: 0,\n                  },\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.levelname ? (\n                    <Chip color={row?.levelname?.toLowerCase() ?? \"default\"} label={row.levelname} />\n                  ) : undefined}\n                </TableCell>\n                <TableCell align=\"left\">{row.name}</TableCell>\n                <TableCell align=\"left\">{row.funcname}</TableCell>\n                <TableCell align=\"right\">{row.lineno}</TableCell>\n                <TableCell align=\"right\">{row.process}</TableCell>\n                <TableCell align=\"left\">{row.message}</TableCell>\n                <TableCell align=\"right\">{row.asctime}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </ScrollToTop>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  Collapse,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\nexport const StackInfoInstallErrorMetric = ({\n  url,\n  metric,\n}: {\n  url: string;\n  metric: ({ package: string; index: string; versions: string[] } | undefined)[];\n}) => {\n  const [selected, setSelected] = useState<number | undefined>();\n  const theme = useTheme();\n  const compact = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  return (\n    <>\n      {compact ? (\n        <Card variant=\"outlined\">\n          <CardHeader\n            title=\"Installation Errors\"\n            titleTypographyProps={{\n              variant: \"h6\",\n            }}\n            action={\n              <IconButton href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <OpenInNewRoundedIcon />\n              </IconButton>\n            }\n            avatar={\n              <Chip\n                icon={<ErrorOutlineOutlinedIcon />}\n                label={metric.reduce((prev, cur) => prev + (cur?.versions?.length ?? 0), 0)}\n                color=\"error\"\n              />\n            }\n          />\n        </Card>\n      ) : (\n        <Card variant=\"outlined\">\n          <CardHeader\n            title=\"Installation Errors\"\n            subheader=\"The given package & version combinations were removed from the resolution process as they produced errors during installation in the given environment\"\n            action={\n              <IconButton href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <OpenInNewRoundedIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <List dense>\n              {metric.map((pkg, i) => {\n                return (\n                  <React.Fragment key={(pkg?.package ?? \"\") + (pkg?.index ?? \"\") + i}>\n                    <ListItem\n                      selected={selected === i}\n                      secondaryAction={\n                        <KeyboardArrowDown\n                          sx={{\n                            mr: -1,\n                            transform: selected === i ? \"rotate(0deg)\" : \"rotate(-90deg)\",\n                            transition: \"0.2s\",\n                          }}\n                        />\n                      }\n                      key={(pkg?.package ?? \"\") + (pkg?.index ?? \"\")}\n                      button\n                      sx={{ borderRadius: \"16px\" }}\n                      onClick={() => setSelected(selected === i ? undefined : i)}\n                    >\n                      <ListItemIcon>\n                        <Chip label={pkg?.versions.length} color=\"error\" />\n                      </ListItemIcon>\n                      <ListItemText primary={pkg?.package} secondary={pkg?.index} />\n                    </ListItem>\n                    <Collapse in={selected === i}>\n                      <ListItem>\n                        <ListItemText inset secondary={metric[i]?.versions.join(\", \")} />\n                      </ListItem>\n                    </Collapse>\n                  </React.Fragment>\n                );\n              })}\n            </List>\n          </CardContent>\n        </Card>\n      )}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  Collapse,\n  Divider,\n  Grid,\n  IconButton,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\n\ninterface IStackInfoRulesMetric {\n  url: string;\n  metric: {\n    [key: string]: { package: string; constraint: string; index: string }[];\n  };\n}\n\nexport const StackInfoRulesMetric = ({ url, metric }: IStackInfoRulesMetric) => {\n  const [selected, setSelected] = useState<number | undefined>(0);\n  const theme = useTheme();\n  const compact = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  return (\n    <>\n      {compact ? (\n        <Card variant=\"outlined\">\n          <CardHeader\n            title=\"Solver Rules\"\n            titleTypographyProps={{\n              variant: \"h6\",\n            }}\n            action={\n              <IconButton href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <OpenInNewRoundedIcon />\n              </IconButton>\n            }\n            avatar={<Chip icon={<ErrorOutlineOutlinedIcon />} label={Object.keys(metric).length} color=\"error\" />}\n          />\n        </Card>\n      ) : (\n        <Card variant=\"outlined\">\n          <CardHeader\n            title=\"Solver Rules\"\n            subheader=\"One or multiple packages were removed based on Python solver rules configured\"\n            action={\n              <IconButton href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <OpenInNewRoundedIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <Stack spacing={2}>\n              {Object.entries(metric).map(([rule, value], i) => {\n                return (\n                  <Box key={rule}>\n                    <Button sx={{ marginBottom: 1 }} onClick={() => setSelected(selected === i ? undefined : i)}>\n                      <Stack direction=\"row\" spacing={2}>\n                        <Typography variant=\"body1\" fontWeight=\"bolder\">\n                          {rule}\n                        </Typography>\n                        <KeyboardArrowDown\n                          sx={{\n                            mr: -1,\n                            transform: selected === i ? \"rotate(0deg)\" : \"rotate(-90deg)\",\n                            transition: \"0.2s\",\n                          }}\n                        />\n                      </Stack>\n                    </Button>\n                    <Collapse in={selected === i}>\n                      <Grid\n                        container\n                        sx={{\n                          marginLeft: 1,\n                          paddingRight: 1,\n                        }}\n                      >\n                        <Grid item xs={5}>\n                          <Typography variant=\"body2\">Package</Typography>\n                        </Grid>\n                        <Grid item xs={2} textAlign=\"center\">\n                          <Typography variant=\"body2\">Constraint</Typography>\n                        </Grid>\n                        <Grid item xs={5} textAlign=\"right\">\n                          <Typography variant=\"body2\">Index</Typography>\n                        </Grid>\n                        <Grid item xs={12} sx={{ marginBottom: 1 }}>\n                          <Divider flexItem />\n                        </Grid>\n                        {value.map(pkg => {\n                          return (\n                            <React.Fragment key={pkg.package + pkg.index}>\n                              <Grid item xs={5}>\n                                {pkg.package}\n                              </Grid>\n                              <Grid item xs={2} textAlign=\"center\">\n                                {pkg.constraint}\n                              </Grid>\n                              <Grid item xs={5} textAlign=\"right\">\n                                {pkg.index}\n                              </Grid>\n                            </React.Fragment>\n                          );\n                        })}\n                      </Grid>\n                    </Collapse>\n                  </Box>\n                );\n              })}\n            </Stack>\n          </CardContent>\n        </Card>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Card, CardContent, CardHeader, Chip, Grid, IconButton, Typography } from \"@mui/material\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\n\nexport const StackInfoEnvMetric = ({\n  url,\n  metric,\n}: {\n  url: string;\n  metric: { provided: boolean; message: string }[];\n}) => {\n  const theme = useTheme();\n  const compact = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  return (\n    <React.Fragment key={url}>\n      {compact ? (\n        <Card variant=\"outlined\">\n          <CardHeader\n            title=\"Environment Parameters\"\n            titleTypographyProps={{\n              variant: \"h6\",\n            }}\n            action={\n              <IconButton href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <OpenInNewRoundedIcon />\n              </IconButton>\n            }\n            avatar={<Chip icon={<InfoOutlinedIcon />} label={metric.filter(env => env.provided).length} color=\"info\" />}\n          />\n        </Card>\n      ) : (\n        <Card variant=\"outlined\">\n          <CardHeader\n            title=\"Environment Parameters\"\n            subheader={`The advisor input was provided with ${\n              metric.filter(env => env.provided).length\n            } environment parameters`}\n            action={\n              <IconButton href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <OpenInNewRoundedIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <Grid container>\n              {metric.map((env, i) => (\n                <React.Fragment key={env.message + i}>\n                  <Grid item xs={1}>\n                    {env.provided ? <CloseRoundedIcon color=\"error\" /> : <DoneRoundedIcon color=\"success\" />}\n                  </Grid>\n                  <Grid item xs={11}>\n                    <Typography variant=\"body2\">{env.message}</Typography>\n                  </Grid>\n                </React.Fragment>\n              ))}\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n    </React.Fragment>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { Box, Card, CardContent, CardHeader, Chip, Divider, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport OpenInNewRoundedIcon from \"@mui/icons-material/OpenInNewRounded\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\n\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { components } from \"lib/schema\";\n\nexport const StackInfoMetric = ({ metrics }: { metrics: Map<string, components[\"schemas\"][\"StackInfo\"]> }) => {\n  const theme = useTheme();\n  const compact = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const typeTotals = useMemo(() => {\n    return {\n      info: Array.from(metrics.values()).reduce((p, c) => p + (c[0].type === \"INFO\" ? 1 : 0), 0),\n      warning: Array.from(metrics.values()).reduce((p, c) => p + (c[0].type === \"WARNING\" ? 1 : 0), 0),\n      error: Array.from(metrics.values()).reduce((p, c) => p + (c[0].type === \"ERROR\" ? 1 : 0), 0),\n    };\n  }, [metrics]);\n\n  const renderRow = (key: string, value: components[\"schemas\"][\"StackInfo\"]) => {\n    return (\n      <React.Fragment key={key}>\n        <Grid item xs={12} sx={{ marginY: 1 }}>\n          <Divider flexItem />\n        </Grid>\n        <Grid item xs={1}>\n          <Box display=\"flex\" alignContent=\"center\">\n            {value[0].type === \"ERROR\" ? (\n              <ErrorOutlineOutlinedIcon color=\"error\" />\n            ) : value[0].type === \"WARNING\" ? (\n              <WarningAmberOutlinedIcon color=\"warning\" />\n            ) : (\n              <InfoOutlinedIcon color=\"info\" />\n            )}\n          </Box>\n        </Grid>\n        <Grid item xs={10}>\n          <Stack spacing={1}>\n            {value.map((v: { message: string }) => (\n              <Typography key={v.message} variant=\"body2\">\n                {v.message}\n              </Typography>\n            ))}\n          </Stack>\n        </Grid>\n        <Grid item xs={1}>\n          <IconButton href={value[0].link} target=\"_blank\" rel=\"noopener noreferrer\">\n            <OpenInNewRoundedIcon />\n          </IconButton>\n        </Grid>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <>\n      {compact ? (\n        <Card variant=\"outlined\">\n          <CardHeader\n            title=\"Other Stack Info\"\n            titleTypographyProps={{\n              variant: \"h6\",\n            }}\n            avatar={\n              <Stack direction=\"row\" spacing={1}>\n                {typeTotals.info ? (\n                  <Chip icon={<InfoOutlinedIcon />} label={typeTotals.info} color=\"info\" />\n                ) : undefined}\n                {typeTotals.warning ? (\n                  <Chip icon={<WarningAmberOutlinedIcon />} label={typeTotals.warning} color=\"warning\" />\n                ) : undefined}\n                {typeTotals.error ? (\n                  <Chip icon={<ErrorOutlineOutlinedIcon />} label={typeTotals.error} color=\"error\" />\n                ) : undefined}\n              </Stack>\n            }\n          />\n        </Card>\n      ) : (\n        <Card variant=\"outlined\">\n          <CardHeader title=\"Other Stack Info\" />\n          <CardContent>\n            <Grid container alignItems=\"center\">\n              <Grid item xs={12}>\n                <Typography variant=\"body1\" fontWeight=\"bolder\">\n                  Recommended Actions\n                </Typography>\n              </Grid>\n              {Array.from(metrics.entries())\n                .filter(([, value]) =>\n                  value.some((v: { message: string }) => v.message.includes(\"use\") || v.message.includes(\"Use\")),\n                )\n                .map(([key, value]) => renderRow(key, value))}\n              <Grid item xs={12} sx={{ marginTop: 2 }}>\n                <Typography variant=\"body1\" fontWeight=\"bolder\">\n                  Other Information\n                </Typography>\n              </Grid>\n              {Array.from(metrics.entries())\n                .filter(([, value]) =>\n                  value.some((v: { message: string }) => !v.message.includes(\"use\") || v.message.includes(\"Use\")),\n                )\n                .map(([key, value]) => renderRow(key, value))}\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n    </>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { components } from \"lib/schema\";\nimport {\n  StackInfoEnvMetric,\n  StackInfoInstallErrorMetric,\n  StackInfoMetric,\n  StackInfoRulesMetric,\n} from \"../components/StackInfoMetrics\";\nimport { Box, Typography } from \"@mui/material\";\nimport { Masonry } from \"@mui/lab\";\n\ninterface IAdviseStackInfo {\n  stack_info?: components[\"schemas\"][\"StackInfo\"];\n}\nconst stackInfoHandler = (stack_info: components[\"schemas\"][\"StackInfo\"], link: string) => {\n  switch (link) {\n    case \"https://thoth-station.ninja/j/install_error\": {\n      const metric = stack_info\n        .filter(info => info.link === link)\n        .map(pkg => {\n          const name_index_pattern = /(?<=').*?(?=')/g;\n          const versions_pattern = /(?<=environment: ).*/;\n          const name_index = pkg.message.match(name_index_pattern);\n          const versions = pkg.message.match(versions_pattern);\n          if (name_index && versions) {\n            return {\n              package: name_index?.[0],\n              index: name_index?.[2],\n              versions: versions?.[0].split(\", \"),\n            };\n          }\n        });\n      return <StackInfoInstallErrorMetric url={link} metric={metric} />;\n    }\n    case \"https://thoth-station.ninja/j/env\": {\n      const metric = stack_info\n        .filter(info => info.link === link)\n        .map(info => {\n          return {\n            provided: info.message.startsWith(\"No\"),\n            message: info.message,\n          };\n        });\n      return <StackInfoEnvMetric metric={metric} url={link} />;\n    }\n\n    case \"https://thoth-station.ninja/j/rules\": {\n      const rules = new Map<string, { package: string; constraint: string; index: string }[]>();\n      stack_info\n        .filter(info => info.link === link)\n        .forEach(pkg => {\n          const name_constraint_index_pattern = /(?<=').*?(?=')/g;\n          const rule_pattern = /(?<=rule: ).*/;\n          const name_constraint_index = pkg.message.match(name_constraint_index_pattern);\n          const rule = pkg.message.match(rule_pattern);\n          if (name_constraint_index && rule) {\n            rules.set(\n              rule[0],\n              (rules.get(rule[0]) ?? []).concat({\n                package: name_constraint_index?.[0],\n                constraint: name_constraint_index?.[2],\n                index: name_constraint_index?.[4],\n              }),\n            );\n          }\n        });\n      return <StackInfoRulesMetric metric={Object.fromEntries(rules)} url={link} />;\n    }\n  }\n};\n\nexport const AdviseStackInfo = ({ stack_info = [] }: IAdviseStackInfo) => {\n  const metrics = useMemo(() => {\n    if (!stack_info) {\n      return <></>;\n    }\n\n    const types = new Set<string>();\n    stack_info.forEach(i => types.add(i.link));\n\n    const cards = [];\n    Array.from(types.values()).forEach(type => {\n      const element = stackInfoHandler(stack_info, type);\n      if (element) {\n        cards.push(element);\n        types.delete(type);\n      }\n    });\n\n    // all others\n    const others = new Map<string, components[\"schemas\"][\"StackInfo\"]>();\n    stack_info\n      .filter(info => types.has(info.link))\n      .forEach(info => {\n        others.set(info.link, (others.get(info.link) ?? []).concat(info));\n      });\n    cards.push(<StackInfoMetric metrics={others} />);\n\n    return cards;\n  }, [stack_info]);\n\n  if (!metrics) {\n    return (\n      <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" align=\"center\">\n          Stack info not available\n        </Typography>\n        <Typography variant=\"body2\" align=\"center\">\n          The adviser has not finished resolving packages\n        </Typography>\n      </Box>\n    );\n  }\n\n  return <Masonry columns={{ sm: 1, lg: 2, xl: 4 }}>{metrics}</Masonry>;\n};\n","import React, { useMemo, useState } from \"react\";\nimport { components } from \"lib/schema\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Stack,\n  Button,\n  Typography,\n  IconButton,\n  TextField,\n  Alert,\n} from \"@mui/material\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\nimport EditRoundedIcon from \"@mui/icons-material/EditRounded\";\nimport ChangeHistoryRoundedIcon from \"@mui/icons-material/ChangeHistoryRounded\";\nimport { postAdvise } from \"../../home/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport yaml from \"js-yaml\";\n\ninterface IAdviseEnvironmentInfo {\n  runtime_environment?: components[\"schemas\"][\"RuntimeEnvironment\"] | null;\n  pipfile: string;\n  pipfileLock: string;\n}\n\ntype ListData = {\n  label: string;\n  key: string;\n  value?: string | number | null;\n  original?: string | number | null;\n  group?: {\n    label: string;\n    original?: string | number | null;\n    value?: string | number | null;\n    key: string;\n  }[];\n  detail: string;\n};\n\nexport const EditableLabel = ({\n  itemKey,\n  itemSubKey,\n  value,\n  handleSubmit,\n  label,\n  editMode,\n}: {\n  itemKey: string;\n  itemSubKey?: string;\n  value: any;\n  handleSubmit: (key: string, value: any, subKey?: string) => void;\n  label?: string;\n  editMode: boolean;\n}) => {\n  return (\n    <>\n      {editMode ? (\n        <TextField\n          value={value}\n          label={label}\n          onChange={event => handleSubmit(itemKey, event.target.value, itemSubKey)}\n          size=\"small\"\n          variant=\"outlined\"\n        />\n      ) : (\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n          {itemSubKey ? (\n            <Typography\n              sx={{ marginRight: 1 }}\n              variant=\"body1\"\n              fontStyle={!value ? \"italic\" : undefined}\n              fontWeight={value ? \"bold\" : undefined}\n            >\n              {label}\n            </Typography>\n          ) : undefined}\n          <Typography variant=\"body1\" fontWeight={!itemSubKey ? \"bold\" : undefined}>\n            {value}\n          </Typography>\n        </Stack>\n      )}\n    </>\n  );\n};\n\nexport const AdviseEnvironmentInfo = ({ runtime_environment, pipfile, pipfileLock }: IAdviseEnvironmentInfo) => {\n  const [currentRuntimeEnvironment, setCurrentRuntimeEnvironment] = useState(runtime_environment);\n  const [errorMessage, setErrorMessage] = useState();\n  const [loading, setLoading] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const navigate = useNavigate();\n\n  if (!runtime_environment) {\n    return (\n      <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" align=\"center\">\n          Environment data not available\n        </Typography>\n        <Typography variant=\"body2\" align=\"center\">\n          The advise document did not contain information regarding the runtime environment\n        </Typography>\n      </Box>\n    );\n  }\n\n  const handleSubmit = (key: any, value: any, subKey?: any) => {\n    setErrorMessage(undefined);\n    if (currentRuntimeEnvironment) {\n      if (subKey) {\n        setCurrentRuntimeEnvironment({\n          ...currentRuntimeEnvironment,\n          [key]: {\n            ...(currentRuntimeEnvironment[key as keyof typeof currentRuntimeEnvironment] as { [key: string]: any }),\n            [subKey]: value === \"\" ? null : value,\n          },\n        });\n      } else {\n        setCurrentRuntimeEnvironment({\n          ...currentRuntimeEnvironment,\n          [key]: value === \"\" ? null : value,\n        });\n      }\n    }\n  };\n\n  const data: ListData[] = useMemo(() => {\n    return [\n      {\n        label: \"Name\",\n        key: \"name\",\n        original: runtime_environment.name,\n        value: currentRuntimeEnvironment?.name,\n        detail: \"User defined name of the runtime environment\",\n      },\n      {\n        label: \"CUDA Version\",\n        original: runtime_environment.cuda_version,\n        value: currentRuntimeEnvironment?.cuda_version,\n        key: \"cuda_version\",\n        detail: \"Nvidia CUDA version which the application uses\",\n      },\n      {\n        label: \"cuDNN Version\",\n        original: runtime_environment.cudnn_version,\n        value: currentRuntimeEnvironment?.cudnn_version,\n        key: \"cudnn_version\",\n        detail: \"NVIDIA cuDNN version used, if any\",\n      },\n      {\n        label: \"Hardware\",\n        key: \"hardware\",\n        group: [\n          {\n            label: \"CPU Family\",\n            original: runtime_environment.hardware?.cpu_family,\n            value: currentRuntimeEnvironment?.hardware?.cpu_family,\n            key: \"cpu_family\",\n          },\n          {\n            label: \"CPU Model\",\n            original: runtime_environment.hardware?.cpu_model,\n            value: currentRuntimeEnvironment?.hardware?.cpu_model,\n            key: \"cpu_model\",\n          },\n          {\n            label: \"GPU Model\",\n            original: runtime_environment.hardware?.gpu_model,\n            value: currentRuntimeEnvironment?.hardware?.gpu_model,\n            key: \"gpu_model\",\n          },\n        ],\n        detail: \"Hardware configuration used\",\n      },\n      {\n        label: \"Math Kernel Library\",\n        original: runtime_environment.mkl_version,\n        value: currentRuntimeEnvironment?.mkl_version,\n        key: \"mkl_version\",\n        detail: \"Intel® Math Kernel Library version used, if any\",\n      },\n      {\n        label: \"Base Image\",\n        original: runtime_environment.base_image,\n        value: currentRuntimeEnvironment?.base_image,\n        key: \"base_image\",\n        detail: \"A base container image used to run the application\",\n      },\n      {\n        label: \"Open BLAS Version\",\n        original: runtime_environment.openblas_version,\n        value: currentRuntimeEnvironment?.openblas_version,\n        key: \"openblas_version\",\n        detail: \"Open BLAS version used, if any\",\n      },\n      {\n        label: \"Open MPI Version\",\n        original: runtime_environment.openmpi_version,\n        value: currentRuntimeEnvironment?.openmpi_version,\n        key: \"openmpi_version\",\n        detail: \"Open MPI version used, if any\",\n      },\n      {\n        label: \"Operating System\",\n        key: \"operating_system\",\n        group: [\n          {\n            label: \"OS Name\",\n            original: runtime_environment.operating_system?.name,\n            value: currentRuntimeEnvironment?.operating_system?.name,\n            key: \"name\",\n          },\n          {\n            label: \"OS Version\",\n            original: runtime_environment.operating_system?.version,\n            value: currentRuntimeEnvironment?.operating_system?.version,\n            key: \"version\",\n          },\n        ],\n        detail: \"Operating system used\",\n      },\n      {\n        label: \"Platform\",\n        original: runtime_environment.platform,\n        value: currentRuntimeEnvironment?.platform,\n        key: \"platform\",\n        detail: \"Platform used - corresponds to sysconfig.get_platform() call\",\n      },\n      {\n        label: \"Python Version\",\n        original: runtime_environment.python_version,\n        value: currentRuntimeEnvironment?.python_version,\n        key: \"python_version\",\n        detail: \"Python version on which the application runs on\",\n      },\n    ];\n  }, [runtime_environment, currentRuntimeEnvironment]);\n\n  const formatted_json = useMemo(() => {\n    const format: { [key: string]: any } = {};\n\n    Object.entries(currentRuntimeEnvironment ?? {}).forEach(([key, value]) => {\n      if (value) {\n        if (typeof value === \"object\") {\n          const formatObj: { [key: string]: any } = {};\n\n          if (currentRuntimeEnvironment) {\n            Object.entries(value).forEach(([subKey, subValue]) => {\n              if (subValue) {\n                formatObj[subKey] = subValue;\n              }\n            });\n          }\n\n          if (Object.keys(formatObj).length > 0) {\n            format[key] = formatObj;\n          }\n        } else {\n          format[key] = value;\n        }\n      }\n    });\n\n    return yaml.dump(format).toString();\n  }, [currentRuntimeEnvironment]);\n\n  const handleNewAdvise = () => {\n    setErrorMessage(undefined);\n    setLoading(true);\n    postAdvise(pipfile, pipfileLock, currentRuntimeEnvironment as components[\"schemas\"][\"RuntimeEnvironment\"])\n      .then(response => {\n        setLoading(false);\n        navigate(\"/advise/\" + response.data.analysis_id + \"/summary\");\n      })\n      .catch(error => {\n        setLoading(false);\n        setErrorMessage(error?.response?.data?.error ?? \"An error occurred.\");\n      });\n  };\n\n  const getIcon = (item: ListData) => {\n    let mode: string;\n    if (item.group) {\n      if (item.group.some(subItem => subItem.original !== subItem.value)) {\n        mode = \"warning\";\n      } else if (item.group.every(subItem => !subItem.original)) {\n        mode = \"error\";\n      } else {\n        mode = \"success\";\n      }\n    } else {\n      if (item.original !== item.value) {\n        mode = \"warning\";\n      } else if (!item.original) {\n        mode = \"error\";\n      } else {\n        mode = \"success\";\n      }\n    }\n\n    switch (mode) {\n      case \"warning\":\n        return <ChangeHistoryRoundedIcon color=\"warning\" />;\n      case \"error\":\n        return <CloseRoundedIcon color=\"error\" />;\n      case \"success\":\n        return <DoneRoundedIcon color=\"success\" />;\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\">Project Runtime Environment</Typography>\n      <Typography variant=\"body1\">\n        Thoth performs recommendations based on your hardware and software environment.\n      </Typography>\n\n      <Grid container alignItems=\"center\" sx={{ marginLeft: 2, marginTop: 1, marginBottom: 2 }}>\n        <Grid item>\n          <DoneRoundedIcon color=\"success\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>Value provided</i>\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} />\n\n        <Grid item>\n          <CloseRoundedIcon color=\"error\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>Value not provided</i>\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} />\n\n        <Grid item>\n          {\" \"}\n          <ChangeHistoryRoundedIcon color=\"warning\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>Value edited</i>\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Divider />\n\n      {data.some(item => {\n        if (item.group) {\n          return item.group.some(subItem => subItem.original !== subItem.value);\n        } else {\n          return item.original !== item.value;\n        }\n      }) ? (\n        <Alert\n          action={\n            <Stack direction=\"row\" spacing={1}>\n              <Button\n                disabled={loading}\n                size=\"small\"\n                variant=\"outlined\"\n                onClick={() => {\n                  setCurrentRuntimeEnvironment(runtime_environment);\n                  setErrorMessage(undefined);\n                }}\n              >\n                RESET PARAMETERS\n              </Button>\n              <LoadingButton loading={loading} size=\"small\" variant=\"contained\" onClick={() => handleNewAdvise()}>\n                NEW ADVISE\n              </LoadingButton>\n            </Stack>\n          }\n          sx={{ marginTop: 2 }}\n          variant=\"outlined\"\n          severity=\"warning\"\n        >\n          The environment parameters are edited and are not equal to the parameters set in the adviser report. You can\n          use the new environment parameters to run a new adviser report, or you can reset them back to the original\n          values.\n        </Alert>\n      ) : undefined}\n\n      {errorMessage ? (\n        <Alert sx={{ marginTop: 2 }} variant=\"outlined\" severity=\"error\">\n          {errorMessage}\n        </Alert>\n      ) : undefined}\n\n      <Grid container spacing={4}>\n        <Grid item xs={8}>\n          <List dense>\n            <ListItem>\n              <ListItemAvatar />\n              <ListItemText>\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  Environment Parameters\n                </Typography>\n              </ListItemText>\n              <Typography variant=\"body1\" fontWeight=\"bold\">\n                Value\n              </Typography>\n              {editMode ? (\n                <IconButton sx={{ marginLeft: 1 }} onClick={() => setEditMode(false)}>\n                  <DoneRoundedIcon fontSize=\"small\" />\n                </IconButton>\n              ) : (\n                <IconButton sx={{ marginLeft: 1 }} onClick={() => setEditMode(true)}>\n                  <EditRoundedIcon fontSize=\"small\" />\n                </IconButton>\n              )}\n            </ListItem>\n            {data.map((item, i) => {\n              return (\n                <React.Fragment key={item.key + i}>\n                  <ListItem>\n                    <ListItemAvatar>{getIcon(item)}</ListItemAvatar>\n                    <ListItemText primary={item.label} secondary={item.detail} />\n                    {item.group ? (\n                      <Stack spacing={1}>\n                        {item.group.map(subItem => {\n                          return (\n                            <EditableLabel\n                              key={item.key + subItem.key}\n                              itemKey={item.key}\n                              itemSubKey={subItem.key}\n                              label={subItem.label}\n                              value={\n                                (\n                                  currentRuntimeEnvironment?.[item.key as keyof typeof currentRuntimeEnvironment] as {\n                                    [key: string]: any;\n                                  }\n                                )?.[subItem.key] ?? \"\"\n                              }\n                              handleSubmit={handleSubmit}\n                              editMode={editMode}\n                            />\n                          );\n                        })}\n                      </Stack>\n                    ) : (\n                      <EditableLabel\n                        label={item.label}\n                        itemKey={item.key}\n                        value={currentRuntimeEnvironment?.[item.key as keyof typeof currentRuntimeEnvironment] ?? \"\"}\n                        handleSubmit={handleSubmit}\n                        editMode={editMode}\n                      />\n                    )}\n                  </ListItem>\n                  <Divider variant=\"inset\" />\n                </React.Fragment>\n              );\n            })}\n          </List>\n        </Grid>\n        <Grid item xs={4}>\n          <Card sx={{ marginTop: 2 }} variant=\"outlined\">\n            <CardHeader\n              title={currentRuntimeEnvironment?.name}\n              action={\n                <Button size=\"small\" variant=\"outlined\" onClick={() => navigator.clipboard.writeText(formatted_json)}>\n                  COPY\n                </Button>\n              }\n            />\n            <CardContent>\n              <pre>{formatted_json}</pre>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useContext, useState } from \"react\";\n\nimport { LicenseMetricType } from \"hooks/metrics\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\nimport CheckRoundedIcon from \"@mui/icons-material/CheckRounded\";\nimport Loading from \"components/Elements/Loading/Loading\";\nimport { StateContext } from \"stores/Global\";\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\n\ninterface IAdviseLicenses {\n  metric: LicenseMetricType | null;\n}\n\nexport function AdviseLicenses({ metric }: IAdviseLicenses) {\n  const state = useContext(StateContext);\n  const [selected, setSelected] = useState<string | undefined>();\n\n  if (metric === null || Object.keys(metric).length === 0) {\n    if (!state?.loading?.[\"graph\"]) {\n      return (\n        <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"h5\" align=\"center\">\n            License data not available\n          </Typography>\n          <Typography variant=\"body2\" align=\"center\">\n            The advise run encountered an error.\n          </Typography>\n        </Box>\n      );\n    }\n    return (\n      <Loading\n        type=\"circular\"\n        label={state?.loading?.[\"graph\"].text}\n        progress={((state?.loading?.[\"graph\"].value ?? 0) / (state?.loading?.[\"graph\"].total ?? 1)) * 100}\n      />\n    );\n  }\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Package Licenses</Typography>\n        <Typography variant=\"body1\">\n          The Open Source Initiative (OSI) approves open source licenses that allow software to be freely used,\n          modified, and shared.\n        </Typography>\n      </Grid>\n      <Grid container item xs={12} alignItems=\"center\" sx={{ marginLeft: 2, marginTop: 2, marginBottom: 2 }}>\n        <Grid item>\n          <DoneRoundedIcon color=\"success\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>OSI Approved</i>\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} />\n\n        <Grid item>\n          <CloseRoundedIcon color=\"error\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>Not OSI Approved</i>\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} />\n\n        <Grid item>\n          <WarningAmberOutlinedIcon color=\"warning\" sx={{ marginRight: 2, verticalAlign: \"middle\" }} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            <i>Unknown Approval</i>\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Divider />\n      </Grid>\n      <Grid item xs={6}>\n        <List>\n          <ListItem>\n            <ListItemAvatar>\n              <Typography fontWeight=\"bold\" variant=\"body1\">\n                OSI\n              </Typography>\n            </ListItemAvatar>\n            <ListItemText>\n              <Typography fontWeight=\"bold\" variant=\"body1\">\n                License\n              </Typography>\n            </ListItemText>\n            <Typography fontWeight=\"bold\" variant=\"body1\">\n              Count\n            </Typography>\n          </ListItem>\n          {Object.entries(metric).map(([name, data]) => {\n            return (\n              <ListItem key={name} selected={selected === name} disablePadding sx={{ borderRadius: 100 }}>\n                <ListItemButton onClick={() => setSelected(name)} sx={{ borderRadius: 100 }}>\n                  <ListItemAvatar>\n                    {data.metadata?.isOsiApproved === null ? (\n                      <WarningAmberOutlinedIcon color=\"warning\" />\n                    ) : data.metadata?.isOsiApproved ? (\n                      <CheckRoundedIcon color=\"success\" />\n                    ) : (\n                      <CloseRoundedIcon color=\"error\" />\n                    )}\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <Typography variant=\"body1\">{name}</Typography>\n                  </ListItemText>\n                  <Chip label={Object.keys(data.packages).length} />\n                </ListItemButton>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Grid>\n      <Grid item xs={6}>\n        {selected ? (\n          <Card sx={{ marginTop: 2 }} variant=\"outlined\">\n            <CardHeader title={selected} subheader={`Packages that use the ${selected}`} />\n            <CardContent>\n              <Grid container>\n                <Grid item xs={6}>\n                  <Typography variant=\"body1\" fontWeight=\"bold\">\n                    Package\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"body1\" fontWeight=\"bold\">\n                    PyPI License\n                  </Typography>\n                </Grid>\n                {Object.entries(metric[selected].packages).map(([pkgName, pkgData]) => {\n                  return (\n                    <React.Fragment key={pkgName}>\n                      <Grid item xs={6}>\n                        <Typography variant=\"body1\">{pkgName}</Typography>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Typography variant=\"body1\">{pkgData.specific}</Typography>\n                      </Grid>\n                    </React.Fragment>\n                  );\n                })}\n              </Grid>\n            </CardContent>\n          </Card>\n        ) : (\n          <Box height=\"100%\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Typography variant=\"h5\" align=\"center\">\n              Choose a license\n            </Typography>\n            <Typography variant=\"body2\" align=\"center\">\n              Click on a license from the list of licenses to view which packages use that license\n            </Typography>\n          </Box>\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n","export const fromBytes = (bytes?: number) => {\n  if (!bytes) {\n    return \"0 B\";\n  }\n\n  const KB = bytes / 1000;\n  if (KB < 1) {\n    return `${bytes} B`;\n  }\n\n  const MB = bytes / 1e6;\n  if (MB < 1) {\n    return `${KB.toFixed(2)} KB`;\n  }\n\n  const GB = bytes / 1e9;\n  if (GB < 1) {\n    return `${MB.toFixed(2)} MB`;\n  }\n\n  const TB = bytes / 1e12;\n  if (TB < 1) {\n    return `${GB.toFixed(2)} GB`;\n  } else {\n    return `${TB.toFixed(2)} TB`;\n  }\n};\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\n\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  Collapse,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport Loading from \"components/Elements/Loading/Loading\";\nimport { StateContext } from \"stores/Global\";\nimport DescriptionRoundedIcon from \"@mui/icons-material/DescriptionRounded\";\nimport ArrowUpwardRoundedIcon from \"@mui/icons-material/ArrowUpwardRounded\";\nimport WarningAmberOutlinedIcon from \"@mui/icons-material/WarningAmberOutlined\";\nimport { DependencyMetricType } from \"hooks/metrics\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { fromBytes } from \"utils/fromBytes\";\nimport { GavelRounded, KeyboardArrowDownRounded, KeyboardDoubleArrowDownRounded } from \"@mui/icons-material\";\nimport NetworkGraphView from \"../components/NetworkGraphView\";\n\ninterface IAdviseDependencies {\n  metric: DependencyMetricType | null;\n  graph?: Graph<Node<PackageNodeValue>>;\n}\n\nexport function AdviseDependencies({ metric, graph }: IAdviseDependencies) {\n  const state = useContext(StateContext);\n  const [selected, setSelected] = useState<Node<PackageNodeValue>>();\n\n  useEffect(() => {\n    if (graph) {\n      const root = graph.nodes.get(\"*App\");\n      if (root) {\n        setSelected(root);\n      }\n    }\n  }, [graph]);\n\n  const [pkgs, selectedIndex] = useMemo(() => {\n    if (graph && selected) {\n      const ar = [\n        ...[...(selected?.parents.values() ?? [])].map(k => graph.nodes.get(k)).filter(node => node !== undefined),\n        selected,\n        ...[...(selected?.adjacents.values() ?? [])],\n      ] as Node<PackageNodeValue>[];\n      const index = ar.findIndex(node => node.key === selected.key);\n      return [ar, index];\n    }\n    return [[], 0];\n  }, [selected, graph]);\n\n  const [agg_size, agg_license, agg_warnings, direct_deps, indirect_deps] = useMemo(() => {\n    if (graph && selected) {\n      let size = 0;\n      const licenses: { [key: string]: number } = {};\n      let warnings = 0;\n      let direct = 0;\n      let indirect = 0;\n\n      const bfs = graph.graphSearch(selected);\n      const adjs = [...(selected.adjacents.values() ?? [])].map(n => n.key);\n      Array.from(bfs).forEach(node => {\n        size += node.value.install_size ?? 0;\n        warnings += node?.value?.justifications?.reduce((p, c) => (c.type === \"WARNING\" ? p + 1 : p), 0) ?? 0;\n        if (licenses[node.value.metadata?.License ?? \"Not found\"]) {\n          licenses[node.value.metadata?.License ?? \"Not found\"] += 1;\n        } else {\n          licenses[node.value.metadata?.License ?? \"Not found\"] = 1;\n        }\n\n        // deps\n        if (adjs.includes(node.key)) {\n          direct += 1;\n        } else if (node.key !== selected.key) {\n          indirect += 1;\n        }\n      });\n\n      return [size, licenses, warnings, direct, indirect];\n    }\n\n    return [0, [], 0, 0, 0];\n  }, [selected, graph]);\n\n  if (!metric || !graph) {\n    if (!state?.loading?.[\"graph\"]) {\n      return (\n        <Box height=\"100vh\" flexDirection=\"column\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"h5\" align=\"center\">\n            Dependency data not available\n          </Typography>\n          <Typography variant=\"body2\" align=\"center\">\n            The advise run encountered an error.\n          </Typography>\n        </Box>\n      );\n    }\n    return (\n      <Loading\n        type=\"circular\"\n        label={state?.loading?.[\"graph\"].text}\n        progress={((state?.loading?.[\"graph\"].value ?? 0) / (state?.loading?.[\"graph\"].total ?? 1)) * 100}\n      />\n    );\n  }\n\n  return (\n    <Grid container columnSpacing={4} rowSpacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Dependency Tree</Typography>\n        <Typography variant=\"body1\">\n          A Python environment&apos;s packages can be organized as a one directional graph with root packages generally\n          being the dependncies defined in the Pipfile.\n        </Typography>\n      </Grid>\n      <Grid item xs={6} sx={{ marginTop: 1 }}>\n        <List>\n          {selectedIndex > 0 && pkgs.at(0)?.key !== \"*App\" ? (\n            <ListItem sx={{ paddingBottom: 0 }}>\n              <ListItemText>\n                <Typography variant=\"body2\" fontWeight=\"bold\" sx={{ color: \"gray\" }}>\n                  Dependents\n                </Typography>\n              </ListItemText>\n            </ListItem>\n          ) : undefined}\n          <TransitionGroup>\n            {pkgs.map((node, i) => (\n              <Collapse key={node.key}>\n                {i === selectedIndex + 1 ? (\n                  <>\n                    <ListItem sx={{ paddingBottom: 0 }}>\n                      <ListItemText>\n                        <Typography variant=\"body2\" fontWeight=\"bold\" sx={{ color: \"gray\" }}>\n                          Dependencies\n                        </Typography>\n                      </ListItemText>\n                      <Typography variant=\"body2\" fontWeight=\"bold\" sx={{ color: \"gray\" }}>\n                        Dependency count\n                      </Typography>\n                    </ListItem>\n                    {i === selectedIndex && selectedIndex !== 0 ? <Divider sx={{ marginY: 1 }} /> : undefined}\n                  </>\n                ) : undefined}\n                <ListItem\n                  selected={node.key === selected?.key}\n                  key={node.key}\n                  disablePadding\n                  sx={{ borderRadius: 100 }}\n                >\n                  <ListItemButton onClick={() => setSelected(node)} sx={{ borderRadius: 100 }}>\n                    {i < selectedIndex && node.key !== \"*App\" && (\n                      <ListItemAvatar>\n                        <ArrowUpwardRoundedIcon />\n                      </ListItemAvatar>\n                    )}\n                    <ListItemText>\n                      {selected?.key === \"*App\" && node.key === \"*App\" ? (\n                        <Typography variant=\"body1\" sx={{ color: \"gray\" }} fontStyle=\"italic\">\n                          Pipfile\n                        </Typography>\n                      ) : node.key === \"*App\" ? (\n                        <Typography variant=\"body1\" sx={{ color: \"gray\" }} fontStyle=\"italic\">\n                          Back to roots\n                        </Typography>\n                      ) : (\n                        <Typography variant=\"body1\">{node?.key}</Typography>\n                      )}\n                    </ListItemText>\n                    {node.key === selected?.key ? (\n                      <Chip sx={{ fontStyle: \"italic\" }} label=\"Selected\" />\n                    ) : (\n                      node.adjacents.size > 0 && node.key !== \"*App\" && <Chip label={node.adjacents.size} />\n                    )}\n                  </ListItemButton>\n                </ListItem>\n              </Collapse>\n            ))}\n          </TransitionGroup>\n        </List>\n      </Grid>\n      <Grid item xs={6}>\n        <Card>\n          {selected?.key === \"*App\" ? (\n            <CardHeader\n              title={\"Pipfile\"}\n              subheader={`The supplied Pipfile has ${selected?.adjacents.size} dependencies`}\n            />\n          ) : (\n            <CardHeader\n              title={selected?.key}\n              subheader={`${selected?.key} depends on ${selected?.adjacents.size} packages and is a dependency for ${selected?.parents.size}`}\n            />\n          )}\n          <CardContent>\n            {selected?.key !== \"*App\" && (\n              <>\n                <NetworkGraphView graph={graph} graphHeight=\"25vh\" root={selected} />\n                <Typography variant=\"h5\" sx={{ marginBottom: 2 }}>\n                  Package Stats\n                </Typography>\n                <Stack sx={{ marginLeft: 1 }} spacing={1.5}>\n                  <Stack direction=\"row\" spacing={1}>\n                    <DescriptionRoundedIcon />\n                    <Typography variant=\"body1\" fontWeight=\"bold\">\n                      Package size:{\" \"}\n                    </Typography>\n                    <Typography variant=\"body1\">{fromBytes(selected?.value.install_size)}</Typography>\n                  </Stack>\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                    <WarningAmberOutlinedIcon color=\"warning\" />\n                    <Typography variant=\"body1\" fontWeight=\"bold\">\n                      Package warnings count:{\" \"}\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      {selected?.value.justifications?.filter(j => j.type === \"WARNING\").length}\n                    </Typography>\n                  </Stack>\n                </Stack>\n                <Divider sx={{ marginY: 2 }} variant=\"fullWidth\" />\n              </>\n            )}\n\n            <Typography variant=\"h5\" sx={{ marginBottom: 2 }}>\n              Dependency Stats\n            </Typography>\n            <Stack sx={{ marginLeft: 1 }} spacing={1.5}>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <DescriptionRoundedIcon />\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  Total size:{\" \"}\n                </Typography>\n                <Typography variant=\"body1\">{fromBytes(agg_size)}</Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <WarningAmberOutlinedIcon color=\"warning\" />\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  Total warnings count:{\" \"}\n                </Typography>\n                <Typography variant=\"body1\">{agg_warnings}</Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <KeyboardArrowDownRounded />\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  Direct dependencies:{\" \"}\n                </Typography>\n                <Typography variant=\"body1\">{direct_deps}</Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <KeyboardDoubleArrowDownRounded />\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  Indirect dependencies:{\" \"}\n                </Typography>\n                <Typography variant=\"body1\">{indirect_deps}</Typography>\n              </Stack>\n              <Stack spacing={1} direction=\"row\" alignItems=\"center\">\n                <GavelRounded />\n                <Typography variant=\"h6\">Licenses</Typography>\n              </Stack>\n              {Object.entries(agg_license)\n                .sort((a, b) => b[1] - a[1])\n                .map(([license, count], i) => (\n                  <Stack\n                    key={license}\n                    justifyContent=\"space-between\"\n                    direction=\"row\"\n                    sx={{ borderRadius: 100, paddingX: 2, backgroundColor: i % 2 !== 0 ? \"#84848414\" : undefined }}\n                  >\n                    <Typography variant=\"body1\">{license}</Typography>\n                    <Typography variant=\"body1\">{count}</Typography>\n                  </Stack>\n                ))}\n            </Stack>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Route, Routes, useParams, Navigate } from \"react-router-dom\";\n\n// sub-routes\nimport { AdviseSummary } from \"./AdviseSummary\";\nimport { AdviseDetails } from \"./AdviseDetails\";\nimport { AdviseCompare } from \"./AdviseCompare\";\n\n// feature specific imports\nimport { useAdviseDocument, useAdviseLogs } from \"../api\";\nimport { formatLockfile } from \"utils/formatLockfile\";\nimport { useMetrics } from \"../hooks\";\nimport { useGraph } from \"hooks\";\n\n// misc\nimport { AdviseNotFound } from \"./AdviseNotFound\";\nimport { AxiosResponse } from \"axios\";\nimport { components } from \"lib/schema\";\nimport { LOCAL_STORAGE_KEY } from \"config\";\nimport { AdviserLayout, MainLayout, NavigationLayout } from \"components/Layout\";\nimport Loading from \"../../../components/Elements/Loading/Loading\";\nimport { AdviseLogs } from \"./AdviseLogs\";\nimport { AdviseStackInfo } from \"./AdviseStackInfo\";\nimport { AdviseEnvironmentInfo } from \"./AdviseEnvironmentInfo\";\nimport { AdviseLicenses } from \"./AdviseLicenses\";\nimport { AdviseDependencies } from \"./AdviseDependencies\";\n\ntype statusResponse = components[\"schemas\"][\"AnalysisStatusResponse\"];\n\nexport const AdviseRoutes = () => {\n  // get document id\n  const { analysis_id } = useParams();\n\n  // api get thoth advise document\n  const adviseDocument = useAdviseDocument(analysis_id, {\n    useErrorBoundary: false,\n    refetchInterval: (data: AxiosResponse<statusResponse>) => {\n      if (data?.data?.status) {\n        return 10000;\n      }\n      return false;\n    },\n  });\n\n  useEffect(() => {\n    if (adviseDocument.isSuccess && analysis_id) {\n      const ids = localStorage.getItem(LOCAL_STORAGE_KEY) ?? \"\";\n\n      const split = ids.split(\",\");\n      if (!split.includes(analysis_id)) {\n        split.push(analysis_id);\n        localStorage.setItem(LOCAL_STORAGE_KEY, split.join(\",\"));\n      }\n    }\n  }, [adviseDocument.status]);\n\n  const logs = useAdviseLogs(analysis_id, {\n    useErrorBoundary: false,\n    refetchInterval: () => {\n      if (adviseDocument.data?.data?.status) {\n        return 10000;\n      }\n      return false;\n    },\n  });\n\n  // format advise graph data\n  const graphData = useMemo(() => {\n    if (adviseDocument.isSuccess && adviseDocument.data.data?.result?.report?.products?.[0]?.project) {\n      const lockfile = adviseDocument.data.data?.result?.report?.products?.[0]\n        ?.project as components[\"schemas\"][\"ProjectDef\"];\n      return formatLockfile(lockfile);\n    }\n  }, [adviseDocument]);\n\n  // (\n  //   (adviseDocument?.data?.data?.result?.report?.products?.[0]?.project as components[\"schemas\"][\"ProjectDef\"])\n  //     ?.requirements as Requirements\n  // )?.packages,\n\n  const graph = useGraph(\n    graphData,\n    undefined,\n    adviseDocument?.data?.data?.result?.report?.products?.[0]?.justification,\n    adviseDocument?.data?.data,\n  );\n\n  // compute metric data\n  const metrics = useMetrics(graph, adviseDocument.data?.data);\n\n  const loading = useMemo(() => {\n    if (adviseDocument.isLoading) {\n      return <Loading type=\"circular\" label=\"Fetching Advise Document\" />;\n    }\n\n    if (!adviseDocument.data) {\n      return (\n        <NavigationLayout>\n          <AdviseNotFound analysis_id={analysis_id ?? \"no id\"} />\n        </NavigationLayout>\n      );\n    }\n  }, [adviseDocument.data, adviseDocument.status]);\n\n  const lastLog = useMemo(() => {\n    try {\n      return JSON.parse(logs.data?.data?.log?.split(\"\\n\")?.at(-2) ?? \"{}\");\n    } catch (e) {\n      return {};\n    }\n  }, [logs.data]);\n\n  const stackInfoTotals = useMemo(() => {\n    if (!adviseDocument.data?.data?.result?.report?.stack_info) {\n      return {\n        info: 0,\n        warning: 0,\n        error: 0,\n      };\n    }\n    return {\n      info: adviseDocument.data?.data.result.report?.stack_info.filter(t => t.type === \"INFO\").length ?? 0,\n      warning: adviseDocument.data?.data.result.report?.stack_info.filter(t => t.type === \"WARNING\").length ?? 0,\n      error: adviseDocument.data?.data.result.report?.stack_info.filter(t => t.type === \"ERROR\").length ?? 0,\n    };\n  }, [adviseDocument.data?.data]);\n\n  const licenseTotals = useMemo(() => {\n    const data = {\n      info: 0,\n      warning: 0,\n      error: 0,\n    };\n\n    if (!metrics.licenses) {\n      return data;\n    }\n\n    Object.values(metrics.licenses).forEach(license => {\n      switch (license.metadata.isOsiApproved) {\n        case null:\n          data.warning += Object.keys(license.packages).length;\n          break;\n        case false:\n          data.error += Object.keys(license.packages).length;\n          break;\n      }\n    });\n\n    return data;\n  }, [metrics.licenses]);\n\n  return (\n    <AdviserLayout\n      chipData={{\n        \"stack-info\": stackInfoTotals,\n        licenses: licenseTotals,\n      }}\n    >\n      <MainLayout>\n        {loading ?? (\n          <Routes>\n            <Route\n              path=\"summary\"\n              element={<AdviseSummary adviseDocument={adviseDocument?.data?.data} graph={graph} lastLog={lastLog} />}\n            />\n            <Route path=\"packages\" element={<AdviseDetails graph={graph} />} />\n            <Route path=\"packages/:pkg\" element={<AdviseDetails graph={graph} />} />\n            <Route path=\"logs\" element={<AdviseLogs logs={logs.data?.data?.log} />} />\n            <Route path=\"compare\" element={<AdviseCompare adviseDocument={adviseDocument?.data?.data} />} />\n            <Route path=\"compare/:cmp\" element={<AdviseCompare adviseDocument={adviseDocument?.data?.data} />} />\n            <Route\n              path=\"stack-info\"\n              element={<AdviseStackInfo stack_info={adviseDocument.data?.data?.result?.report?.stack_info} />}\n            />\n            <Route\n              path=\"environment\"\n              element={\n                <AdviseEnvironmentInfo\n                  runtime_environment={\n                    adviseDocument.data?.data?.result?.report?.products?.[0]?.project?.runtime_environment\n                  }\n                  pipfileLock={JSON.stringify(\n                    (\n                      adviseDocument.data?.data?.result?.parameters as {\n                        project: components[\"schemas\"][\"ProjectDef\"];\n                      }\n                    )?.project.requirements_locked ?? {},\n                  )}\n                  pipfile={JSON.stringify(\n                    (\n                      adviseDocument.data?.data?.result?.parameters as {\n                        project: components[\"schemas\"][\"ProjectDef\"];\n                      }\n                    )?.project.requirements ?? {},\n                  )}\n                />\n              }\n            />\n            <Route path=\"licenses\" element={<AdviseLicenses metric={metrics.licenses} />} />\n            <Route\n              path=\"dependency-tree\"\n              element={<AdviseDependencies metric={metrics.dependencies} graph={graph} />}\n            />\n            <Route path=\"*\" element={<Navigate to=\"summary\" />} />\n          </Routes>\n        )}\n      </MainLayout>\n    </AdviserLayout>\n  );\n};\n","import { components, operations } from \"lib/schema\";\n\nexport type Lockfile = {\n  default: {\n    [key: string]: {\n      version: string;\n      markers: string;\n      hashes: string[];\n    };\n  };\n  _meta: {\n    sources: {\n      name: string;\n      url: string;\n      verify_ssl: boolean;\n    }[];\n  };\n};\n\nexport function formatLockfile(\n  lockfile: components[\"schemas\"][\"ProjectDef\"],\n): operations[\"get_python_package_version_metadata\"][\"parameters\"][\"query\"][] {\n  return Object.entries((lockfile.requirements_locked as Lockfile).default).map(([key, value]) => {\n    return {\n      name: key,\n      version: value.version.replace(\"==\", \"\"),\n      index: \"https://pypi.org/simple\", //TODO no hard code\n      os_name: lockfile?.runtime_environment?.operating_system?.name ?? \"\",\n      os_version: lockfile?.runtime_environment?.operating_system?.version ?? \"\",\n      python_version: lockfile?.runtime_environment?.python_version ?? \"\",\n    };\n  });\n}\n","import React, { useContext } from \"react\";\nimport Select from \"@mui/material/Select\";\nimport { Box, MenuItem, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SpecContext } from \"features/package/routes/PackageOverview\";\nimport { BoxTypeMap } from \"@mui/material/Box/Box\";\n\ninterface IParamDropdown {\n  options: { value: string }[];\n  type: string;\n  label?: string;\n  disabled?: boolean;\n  props?: BoxTypeMap;\n}\n\nexport const ParamDropdown = ({ options, type, label, disabled, ...props }: IParamDropdown) => {\n  const navigate = useNavigate();\n  const { specs, defaultSpecs } = useContext(SpecContext);\n\n  const handleChange = (event: { target: { value: string } }) => {\n    switch (type) {\n      case \"package_version\":\n        navigate(`/package/${specs.package_name}/${event.target.value}`);\n        break;\n      case \"index_url\":\n        navigate(\n          `/package/${specs.package_name}/${specs.package_version ?? defaultSpecs.package_version}/${encodeURIComponent(\n            event.target.value,\n          )}`,\n        );\n        break;\n      case \"os_name\":\n        navigate(\n          `/package/${specs.package_name}/${specs.package_version ?? defaultSpecs.package_version}/${encodeURIComponent(\n            specs.index_url ?? defaultSpecs.index_url ?? \"\",\n          )}/${event.target.value}`,\n        );\n\n        break;\n      case \"os_version\":\n        navigate(\n          `/package/${specs.package_name}/${specs.package_version ?? defaultSpecs.package_version}/${encodeURIComponent(\n            specs.index_url ?? defaultSpecs.index_url ?? \"\",\n          )}/${specs.os_name ?? defaultSpecs.os_name}/${event.target.value}`,\n        );\n        break;\n      case \"python_version\":\n        navigate(\n          `/package/${specs.package_name}/${specs.package_version ?? defaultSpecs.package_version}/${encodeURIComponent(\n            specs.index_url ?? defaultSpecs.index_url ?? \"\",\n          )}/${specs.os_name ?? defaultSpecs.os_name}/${specs.os_version ?? defaultSpecs.os_version}/${\n            event.target.value\n          }`,\n        );\n        break;\n    }\n  };\n\n  return (\n    <Box {...props}>\n      <Typography variant=\"body2\">{label}</Typography>\n      <Select\n        displayEmpty\n        fullWidth\n        value={specs[type as keyof typeof specs] ?? \"\"}\n        onChange={handleChange}\n        size=\"small\"\n        variant=\"outlined\"\n        disabled={disabled}\n        renderValue={value => {\n          if (!value) {\n            return <em style={{ color: \"grey\" }}>{defaultSpecs?.[type as keyof typeof specs] ?? label}</em>;\n          } else {\n            return value;\n          }\n        }}\n      >\n        <MenuItem disabled value=\"\">\n          <em>{label}</em>\n        </MenuItem>\n        {options.map(option => {\n          return (\n            <MenuItem key={option.value} value={option.value}>\n              {option.value}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </Box>\n  );\n};\n","import React, { useContext, useMemo, useState } from \"react\";\n\n// material-ui\nimport { Box, Grid, IconButton, Skeleton, Typography } from \"@mui/material\";\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport { ParamDropdown } from \"../ParamDropdown\";\nimport { SpecContext } from \"../../routes/PackageOverview\";\nimport { components } from \"lib/schema\";\n\nexport interface IPackageHeader {\n  /** Package metadata object.*/\n  metadata?: {\n    /** Name of package. */\n    Name: string;\n    /** Description of package. */\n    Summary?: string;\n    /** License of package */\n    License?: string;\n  };\n  /** list of all versions of a package **/\n  allVersions?: components[\"schemas\"][\"PythonPackageVersionsResponse\"][\"versions\"];\n  /** list of all environments of a package, version, index **/\n  allEnvironments?: components[\"schemas\"][\"PythonPackageVersionEnvironmentsResponse\"][\"environments\"];\n}\n\n/**\n * A header for package metadata.\n */\nexport const PackageHeader = ({ metadata, allVersions = [], allEnvironments = [] }: IPackageHeader) => {\n  const { defaultSpecs, specs } = useContext(SpecContext);\n  const [showEnvParams, setShowEnvParams] = useState(false);\n\n  const versionOptions = useMemo(() => {\n    const dups = new Set();\n    return allVersions\n      .filter(version => {\n        if (!dups.has(version.package_version)) {\n          dups.add(version.package_version);\n          return true;\n        }\n        return false;\n      })\n      .map(version => {\n        return {\n          value: version.package_version,\n        };\n      })\n      .sort((a, b) => (a.value.split(\".\") > b.value.split(\".\") ? 1 : -1));\n  }, [allVersions]);\n\n  const indexUrlOptions = useMemo(() => {\n    const dups = new Set();\n    return allVersions\n      .filter(version => {\n        if (specs.package_version) {\n          return specs.package_version === version.package_version;\n        } else {\n          return defaultSpecs.package_version === version.package_version;\n        }\n      })\n      .filter(version => {\n        if (!dups.has(version.index_url)) {\n          dups.add(version.index_url);\n          return true;\n        }\n        return false;\n      })\n      .map(version => {\n        return {\n          value: version.index_url,\n        };\n      });\n  }, [allVersions]);\n\n  const [osNameOptions, osVersionOptions, pythonVersionOptions] = useMemo(() => {\n    const name = allEnvironments.map(env => {\n      return {\n        value: env.os_name,\n      };\n    });\n    const version = allEnvironments\n      .filter(env => !specs.os_name || specs.os_name === env.os_name)\n      .map(env => {\n        return {\n          value: env.os_version,\n        };\n      });\n    const pyVersion = allEnvironments\n      .filter(\n        env =>\n          (!specs.os_name || specs.os_name === env.os_name) &&\n          (!specs.os_version || specs.os_version === env.os_version),\n      )\n      .map(env => {\n        return {\n          value: env.python_version,\n        };\n      });\n    return [name, version, pyVersion];\n  }, [allEnvironments, specs]);\n\n  if (!metadata) {\n    return (\n      <Box data-testid=\"package-header-not-loaded\">\n        <Skeleton />\n        <Skeleton />\n        <Skeleton width={\"60%\"} />\n      </Box>\n    );\n  }\n\n  return (\n    <div>\n      <Grid container alignItems=\"flex-end\" spacing={1}>\n        <Grid item>\n          <Typography variant=\"h4\" mr={2}>\n            <b>{metadata?.Name}</b>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <ParamDropdown options={versionOptions ?? []} type=\"package_version\" label={\"Version\"} />\n        </Grid>\n        <Grid item>\n          <ParamDropdown\n            options={indexUrlOptions ?? []}\n            type=\"index_url\"\n            label={\"Index URL\"}\n            disabled={specs.package_version === undefined}\n          />\n        </Grid>\n        {showEnvParams ? (\n          <React.Fragment>\n            <Grid item>\n              <ParamDropdown\n                options={osNameOptions ?? []}\n                type=\"os_name\"\n                label={\"OS Name\"}\n                disabled={specs.index_url === undefined}\n              />\n            </Grid>\n            <Grid item>\n              <ParamDropdown\n                options={osVersionOptions ?? []}\n                type=\"os_version\"\n                label={\"OS Version\"}\n                disabled={specs.os_name === undefined}\n              />\n            </Grid>\n            <Grid item>\n              <ParamDropdown\n                options={pythonVersionOptions ?? []}\n                type=\"python_version\"\n                label={\"Python Version\"}\n                disabled={specs.os_version === undefined}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : null}\n        <Grid item xs={1}>\n          <IconButton onClick={() => setShowEnvParams(!showEnvParams)} data-testid=\"package-header-expand-button\">\n            {showEnvParams ? <ArrowLeftIcon fontSize=\"large\" /> : <ArrowRightIcon fontSize=\"large\" />}\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      <Typography gutterBottom variant=\"body1\" mt={2}>\n        {metadata?.Summary ?? \"NaN\"}\n      </Typography>\n      <div>\n        <IconText text={metadata?.License ?? \"NaN\"} icon={<GavelIcon />} />\n      </div>\n    </div>\n  );\n};\n","// react\nimport React from \"react\";\n\ninterface IProps {\n  /** card header info */\n  cardMeta: {\n    /** card title */\n    title: string;\n    /** optional subtitle */\n    subTitle?: string;\n  };\n  /** optional card action component (usually some button) */\n  cardAction?: React.ReactNode;\n  /** Card body content */\n  cardBody: React.ReactNode;\n}\nimport { Card, CardContent, CardHeader, Typography } from \"@mui/material\";\n\n/** Card template for metric cards. */\nconst InfoCard = ({ cardMeta, cardBody, cardAction }: IProps) => {\n  return (\n    <Card variant=\"outlined\" sx={{ margin: 0 }}>\n      <CardHeader\n        action={cardAction}\n        title={<Typography variant=\"h5\">{cardMeta.title}</Typography>}\n        subheader={cardMeta.subTitle}\n      />\n      <CardContent>{cardBody}</CardContent>\n    </Card>\n  );\n};\n\nexport default InfoCard;\n","import { Button, Grid, Menu, MenuItem, Typography } from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport React, { useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface IVersionDropdown {\n  node: {\n    name: string;\n    versions: string[];\n    specifier: string;\n  };\n}\n\nexport const VersionDropdown = ({ node }: IVersionDropdown) => {\n  const [open, setOpen] = React.useState<string | null | undefined>(null);\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const navigate = useNavigate();\n\n  const versionOptions = useMemo(() => {\n    const options: { [key: string]: string[] } = {};\n    const distribution = [0, 0];\n    const noDup = new Set();\n    node.versions.forEach(version => {\n      const split = version.split(\".\");\n      const key = split[0] + \".\" + (split[1] ?? \"\");\n\n      if (options[key] === undefined) {\n        options[key] = [];\n        distribution[0] += 1;\n      }\n      if (!noDup.has(version)) {\n        options[key].push(version);\n        distribution[1] += 1;\n        noDup.add(version);\n      }\n    });\n\n    // check if there are too many buckets\n    if (distribution[0] / distribution[1] > 0.25) {\n      // merge buckets\n      const buckets = Math.ceil(distribution[0] * 0.25);\n      const fixedOptions: { [key: string]: string[] } = {};\n      let currentKey: string;\n      Object.keys(options).forEach((key, index, array) => {\n        if (index % buckets === 0) {\n          currentKey = `${key} - ${array[index + buckets - 1] ?? array.at(-1)}`;\n          fixedOptions[currentKey] = [];\n        }\n        fixedOptions[currentKey].push(...options[array[index]]);\n      });\n      return fixedOptions;\n    }\n\n    return options;\n  }, [node]);\n\n  return (\n    <div>\n      <Button\n        onClick={event => {\n          setOpen(node.name);\n          setAnchorEl(event.currentTarget);\n        }}\n        variant=\"outlined\"\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        {node.specifier ?? \"ANY\"}\n      </Button>\n      <Menu\n        open={open === node.name}\n        anchorEl={anchorEl}\n        onClose={() => {\n          setOpen(undefined);\n          setAnchorEl(null);\n        }}\n        PaperProps={{\n          style: {\n            maxHeight: \"40%\",\n            maxWidth: \"50%\",\n          },\n        }}\n      >\n        <MenuItem disabled={true}>Select a version to navigate to:</MenuItem>\n        <Grid container alignContent=\"flex-start\">\n          {Object.entries(versionOptions).map(([key, value]) => {\n            return (\n              <Grid item xs key={key}>\n                <MenuItem sx={{ mt: 2 }} disabled divider>\n                  {key}\n                </MenuItem>\n                {value.map(version => {\n                  return (\n                    <MenuItem key={version} onClick={() => navigate(`/package/${node.name}/${version}`)}>\n                      <Typography variant={\"body2\"}>{version}</Typography>\n                    </MenuItem>\n                  );\n                })}\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Menu>\n    </div>\n  );\n};\n","// react\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport InfoCard from \"components/Elements/InfoCard\";\nimport { Box, Divider, Grid, Skeleton, Typography } from \"@mui/material\";\nimport { VersionDropdown } from \"./VersionDropdown\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { SimplePackageNodeValue } from \"lib/interfaces/SimplePackageNodeValue\";\n\ninterface IPackageDependencies {\n  graph?: Graph<Node<SimplePackageNodeValue>>;\n}\n\ntype PackageDependenciesMetric = {\n  name: string;\n  versions: string[];\n  specifier: string;\n  extra: string[];\n};\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const PackageDependencies = ({ graph }: IPackageDependencies) => {\n  const metric = useMemo(() => {\n    if (!graph?.nodes) {\n      return;\n    }\n\n    const root = graph.nodes.get(\"*App\");\n\n    if (root) {\n      const bfs = graph.graphSearch(root);\n      const visitedOrder = Array.from(bfs);\n\n      const metric: PackageDependenciesMetric[] = [];\n\n      visitedOrder.forEach(node => {\n        if (node.key !== \"*App\" && !node.value.metadata) {\n          metric.push({\n            name: node.value.label ?? node.key,\n            versions: node.value.versions ?? [],\n            specifier: node.value.specifier ?? \"*\",\n            extra: node.value.extra ?? [],\n          });\n        }\n      });\n\n      return metric;\n    }\n  }, [graph]);\n\n  if (!metric) {\n    return (\n      <Box data-testid=\"package-dependencies-not-loaded\">\n        <Skeleton />\n        <Skeleton />\n        <Skeleton width={\"60%\"} />\n      </Box>\n    );\n  }\n\n  return (\n    <InfoCard\n      cardMeta={{\n        title: \"Dependencies\",\n      }}\n      cardBody={\n        <div data-testid=\"package-dependencies-loaded\">\n          <Grid container>\n            <Grid item xs>\n              <Typography variant=\"h6\" gutterBottom>\n                Package\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <Typography variant=\"h6\" gutterBottom>\n                Versions\n              </Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <Typography variant=\"h6\" gutterBottom>\n                Extra\n              </Typography>\n            </Grid>\n          </Grid>\n          <Divider />\n          <Grid container rowSpacing={2} mt={1}>\n            {metric.map(node => {\n              return (\n                <Grid container item xs={12} key={node.name}>\n                  <Grid item xs>\n                    <Typography variant=\"body1\" gutterBottom>\n                      {node.name}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs>\n                    <VersionDropdown node={node} />\n                  </Grid>\n                  <Grid item xs={2}>\n                    <Typography variant=\"body1\" gutterBottom>\n                      {node.extra?.join(\", \")}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n      }\n    />\n  );\n};\n","import React from \"react\";\n\ninterface IPackageNotFound {\n  package_name: string;\n  package_version: string;\n}\n\nexport const PackageNotFound = ({ package_name, package_version }: IPackageNotFound) => {\n  return (\n    <div>\n      `&quot;{package_name}\n      {package_version ? \" \" + package_version : \"\"}&quot;` not found\n    </div>\n  );\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/versions\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\nexport type PackageVersionsRequestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure = path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getPackageVersions = async (name: requestParams[\"name\"]) => {\n  const config: IConfig = {\n    params: {\n      name: name,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n\n  return axios.get<PackageVersionsRequestResponseSuccess>(THOTH_URL + \"/python/package/versions\", config);\n};\n\nexport const usePackageVersions = (name: requestParams[\"name\"], config?: { [key: string]: unknown }) => {\n  return useQuery<AxiosResponse<PackageVersionsRequestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    enabled: !!name,\n    queryKey: [\"packageVersions\", name],\n    queryFn: () => getPackageVersions(name),\n  });\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/python/package/version/environments\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"query\"];\ntype requestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\n\ninterface IConfig {\n  params: path[\"parameters\"][\"query\"];\n  headers: {\n    accept: \"application/json\";\n  };\n}\n\nexport const getPackageEnvironments = async (\n  name: requestParams[\"name\"],\n  version: requestParams[\"version\"],\n  index: requestParams[\"index\"],\n) => {\n  const config: IConfig = {\n    params: {\n      name: name,\n      version: version,\n      index: index,\n    },\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n  return axios.get(THOTH_URL + \"/python/package/version/environments\", config);\n};\n\nexport const usePackageEnvironments = (\n  name?: requestParams[\"name\"],\n  version?: requestParams[\"version\"],\n  index?: requestParams[\"index\"],\n  config?: { [key: string]: unknown },\n) => {\n  return useQuery<AxiosResponse<requestResponseSuccess>, AxiosError>({\n    ...config,\n    enabled: !!name && !!version && !!index,\n    queryKey: [\"packageEnvironments\", name, version, index],\n    queryFn: () => getPackageEnvironments(name ?? \"\", version ?? \"\", index ?? \"\"),\n  });\n};\n","import React from \"react\";\n\ninterface IErrorPage {\n  message: string;\n  type: string | number;\n  reason: string;\n}\n\nexport const ErrorPage = ({ message, type, reason }: IErrorPage) => {\n  return (\n    <div>\n      <p>\n        {type}\n        {\": \"}\n        {message}\n      </p>\n      <p>{reason}</p>\n    </div>\n  );\n};\n","// React\nimport React, { useEffect, useMemo, useState } from \"react\";\n\n// local\nimport { PackageDependencies, PackageHeader } from \"../components\";\n\n// material-ui\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport { usePackageMetadata } from \"api\";\nimport { PackageNotFound } from \"./PackageNotFound\";\nimport { useSimpleGraph } from \"../hooks\";\nimport { usePackageEnvironments, usePackageVersions } from \"../api\";\nimport { ErrorPage } from \"routes/ErrorPage\";\nimport { PackageMetadata } from \"lib/types/PackageMetadata\";\n\ntype SpecDetails = {\n  package_name: string;\n  package_version?: string;\n  index_url?: string;\n  os_name?: string;\n  os_version?: string;\n  python_version?: string;\n};\n\nexport const SpecContext = React.createContext<{\n  specs: SpecDetails;\n  defaultSpecs: SpecDetails;\n}>({ specs: { package_name: \"\" }, defaultSpecs: { package_name: \"\" } });\n\n// The page that displays all analysis data\nexport const PackageOverview = () => {\n  const params = useParams<SpecDetails>();\n  const [defaultSpecs, setDefaultSpecs] = useState<SpecDetails>({\n    package_name: params.package_name ?? \"\",\n    package_version: undefined,\n    index_url: undefined,\n    os_name: undefined,\n    os_version: undefined,\n    python_version: undefined,\n  });\n\n  // what is on the url params\n  const specs = useMemo<SpecDetails>(() => {\n    return {\n      package_name: params.package_name ?? \"\",\n      package_version: params?.package_version,\n      index_url: params?.index_url ? decodeURIComponent(params.index_url) : undefined,\n      os_name: params?.os_name,\n      os_version: params?.os_version,\n      python_version: params?.python_version,\n    };\n  }, [params]);\n\n  // get all pages of versions/indexes and merge them together\n  const allVersions = usePackageVersions(specs.package_name);\n\n  // get environments for specific package, version, index\n  const allEnvironments = usePackageEnvironments(\n    specs.package_name,\n    specs.package_version ?? defaultSpecs.package_version,\n    specs.index_url ?? defaultSpecs.index_url,\n    { useErrorBoundary: false },\n  );\n\n  // some params are optional but still need a default value\n  useEffect(() => {\n    const d: SpecDetails = {\n      package_name: params.package_name ?? \"\",\n      package_version: undefined,\n      index_url: undefined,\n      os_name: undefined,\n      os_version: undefined,\n      python_version: undefined,\n    };\n\n    // get default package version and index\n    // needs package name and versions list\n    if (specs.package_name) {\n      if (allVersions.data?.data && allVersions.data.data.versions.length > 0) {\n        d.package_version = allVersions.data.data.versions.at(-1)?.package_version;\n        d.index_url = allVersions.data.data.versions.at(-1)?.index_url;\n      }\n    }\n\n    // get default environment\n    // needs list of environments\n    if (allEnvironments.data && allEnvironments.data.data.environments.length > 0) {\n      const filtered = allEnvironments.data.data.environments.filter(\n        env =>\n          (!specs.os_name || specs.os_name === env.os_name) &&\n          (!specs.os_version || specs.os_version === env.os_version),\n      );\n      if (filtered.length > 0) {\n        d.os_name = filtered.at(0)?.os_name;\n        d.os_version = filtered.at(0)?.os_version;\n        d.python_version = filtered.at(0)?.python_version;\n      }\n    }\n\n    if (Object.entries(defaultSpecs).some(([key, val]) => d[key as keyof typeof d] !== val)) {\n      setDefaultSpecs(d);\n    }\n  }, [allVersions.data, allEnvironments, specs]);\n\n  // get package metadata\n  const metadata = usePackageMetadata(\n    specs.package_name,\n    specs.package_version ?? defaultSpecs.package_version,\n    specs.index_url ?? defaultSpecs.index_url,\n    specs.os_name ?? defaultSpecs.os_name,\n    specs.os_version ?? defaultSpecs.os_version,\n    specs.python_version ?? defaultSpecs.python_version,\n    { useErrorBoundary: false },\n  );\n\n  const graph = useSimpleGraph(metadata);\n\n  if (metadata.isLoading || allVersions?.data?.data?.versions?.length === 0) {\n    return (\n      <div className=\"w-full h-48 flex justify-center items-center\" data-testid=\"loading\">\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (!metadata.data) {\n    if (metadata?.error?.response?.data?.error) {\n      return (\n        <ErrorPage\n          message={metadata.error.response.data.error}\n          type={metadata.error.response.status}\n          reason={`${metadata?.error?.config?.url} failed with params ${JSON.stringify(\n            metadata?.error?.config?.params,\n          )}`}\n        />\n      );\n    }\n    return <PackageNotFound package_name={params.package_name ?? \"\"} package_version={params.package_version ?? \"\"} />;\n  }\n\n  return (\n    <SpecContext.Provider value={{ specs, defaultSpecs }}>\n      <Grid container>\n        <Grid item xs={12} mb={3}>\n          <PackageHeader\n            metadata={metadata.data.data.metadata.importlib_metadata.metadata as PackageMetadata}\n            allVersions={allVersions?.data?.data?.versions}\n            allEnvironments={allEnvironments?.data?.data?.environments}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <PackageDependencies graph={graph} />\n        </Grid>\n      </Grid>\n    </SpecContext.Provider>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\n// utils\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\n\nimport { usePackageMetadata } from \"api\";\nimport { PackageMetadata } from \"lib/types/PackageMetadata\";\nimport { SimplePackageNodeValue } from \"lib/interfaces/SimplePackageNodeValue\";\n\nexport type PackageDependencyMetric = {\n  extra: string[];\n  extras: string[];\n  marker: string;\n  marker_evaluated: string;\n  marker_evaluation_error: string | null;\n  marker_evaluation_result: boolean;\n  specifier: string;\n  versions: string[];\n};\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useSimpleGraph(metadata: ReturnType<typeof usePackageMetadata>) {\n  const [graph, setGraph] = useState<Graph<Node<SimplePackageNodeValue>>>();\n\n  useEffect(() => {\n    if (metadata.status !== \"success\") {\n      return;\n    }\n\n    // create graph\n    const tempGraph: Graph<Node<SimplePackageNodeValue>> = new Graph();\n\n    // add app node to graph\n    const app = tempGraph.addVertex(\n      \"*App\",\n      {\n        id: \"*App\",\n        label: \"App\",\n        depth: -1,\n      },\n      Node,\n    );\n\n    const root = tempGraph.addVertex(\n      metadata.data.data.metadata.package_name.toLowerCase(),\n      {\n        id: metadata.data.data.metadata.package_name.toLowerCase(),\n        label: metadata.data.data.metadata.package_name,\n        metadata: metadata.data.data.metadata.importlib_metadata.metadata as PackageMetadata,\n        depth: 0,\n      },\n      Node,\n    );\n\n    root.parents = new Set();\n    root.parents.add(\"*App\");\n    tempGraph.addEdge(app.key, root.key);\n\n    // add deps to graph\n    Object.entries(\n      metadata.data.data.metadata.dependencies as {\n        [key: string]: PackageDependencyMetric;\n      },\n    ).forEach(([name, value]) => {\n      // add package to graph\n      const node = tempGraph.addVertex(\n        name.toLowerCase(),\n        {\n          id: name.toLowerCase(),\n          label: name,\n          metadata: null,\n          versions: value.versions,\n          specifier: value.specifier,\n          extra: value.extra,\n          depth: 1,\n        },\n        Node,\n      );\n      node.parents = new Set();\n\n      tempGraph.addEdge(root.key, node.key);\n\n      // set parent\n      node.parents.add(root.key);\n    });\n\n    setGraph(tempGraph);\n  }, [metadata.data]);\n\n  return graph;\n}\n","// React\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport { PackageOverview } from \"./PackageOverview\";\nimport { NotFound } from \"routes/NotFound\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\n\n// The page that displays all analysis data\nexport const PackageRoutes = () => {\n  return (\n    <NavigationLayout>\n      <Routes>\n        <Route path=\"/:package_version/:index_url/:os_name/:os_version/:python_version\" element={<PackageOverview />} />\n        <Route path=\"/:package_version/:index_url/:os_name\" element={<PackageOverview />} />\n        <Route path=\"/:package_version/:index_url/:os_name/:os_version\" element={<PackageOverview />} />\n        <Route path=\"/:package_version/:index_url\" element={<PackageOverview />} />\n        <Route path=\"/:package_version\" element={<PackageOverview />} />\n        <Route path=\"/\" element={<PackageOverview />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </NavigationLayout>\n  );\n};\n","// react\nimport React from \"react\";\n\n// material-ui\nimport { LinearProgress, Typography, Grid } from \"@mui/material\";\nimport { GridProps } from \"@mui/material/Grid/Grid\";\n\ninterface IProps extends GridProps {\n  /** the amount (numerator) for the bar */\n  value: number;\n  /** the total (denominator) for the bar */\n  total: number;\n  /** optional label */\n  label?: string;\n  /** action used on card */\n  action?: JSX.Element;\n}\n\n/**\n * A horizontal bar for showing a percent of a total.\n */\nconst ProgressBar = ({ value, total, label, action, ...props }: IProps) => {\n  return (\n    <Grid container spacing={1} alignItems=\"center\" {...props}>\n      <Grid item xs={5}>\n        <Typography variant=\"body2\">{label}</Typography>\n      </Grid>\n      <Grid item xs={2}>\n        <Typography variant=\"body2\">{value}</Typography>\n      </Grid>\n      <Grid item xs>\n        <LinearProgress\n          variant=\"determinate\"\n          value={total > 0 ? (value / total) * 100 : 0}\n          sx={{\n            root: {\n              height: 10,\n              borderRadius: 5,\n            },\n            colorPrimary: {\n              backgroundColor: \"theme.palette.grey[200]\",\n            },\n            bar: {\n              borderRadius: 5,\n              backgroundColor: \"#1a90ff\",\n            },\n          }}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <div>{action ?? null}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProgressBar;\n","// react\nimport React from \"react\";\n\n// material-ui\nimport { TransitionGroup } from \"react-transition-group\";\n\nimport { Typography, Divider, List, ListItem, ListItemText, Grid, Collapse, Box, Skeleton } from \"@mui/material\";\n\nimport { DependencyMetricType } from \"hooks/metrics\";\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\ninterface IDependenciesMetric {\n  metric: DependencyMetricType | null;\n}\n\n/**\n * A metric card that displays direct, indirect, and root packages of a dependency graph.\n */\nexport const DependenciesMetric = ({ metric }: IDependenciesMetric) => {\n  const totalDependencies = (metric?.all?.direct ?? 0) + (metric?.all?.indirect ?? 0) + (metric?.all?.roots ?? 0);\n\n  if (!metric?.all || !metric?.roots) {\n    return (\n      <Box>\n        <Skeleton />\n        <Skeleton />\n        <Skeleton width={\"60%\"} />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        All Packages\n      </Typography>\n      <Divider sx={{ mb: 1 }} />\n      <ProgressBar value={metric?.all?.roots ?? 0} total={totalDependencies} label={\"Root\"} mb={1} />\n      <ProgressBar value={metric?.all?.direct ?? 0} total={totalDependencies} label={\"Direct\"} mb={1} />\n      <ProgressBar value={metric?.all?.indirect ?? 0} total={totalDependencies} label={\"Indirect\"} />\n      <Typography variant=\"h6\" gutterBottom mt={2}>\n        Root Packages\n      </Typography>\n      <Divider sx={{ mb: 1 }} />\n      <List component=\"nav\">\n        <TransitionGroup>\n          {Object.entries(metric?.roots ?? {})?.map(([key]) => {\n            const t = (metric?.roots[key].direct ?? 0) + (metric?.roots[key].indirect ?? 0);\n            return (\n              <Collapse key={key}>\n                <div>\n                  <ListItem>\n                    <Grid container alignItems=\"center\">\n                      <Grid item xs>\n                        <ListItemText primary={key} />\n                      </Grid>\n                      <Grid item xs>\n                        <Grid container direction=\"column\">\n                          <Grid item xs>\n                            <ProgressBar value={metric?.roots?.[key]?.direct ?? 0} total={t} label={\"Direct\"} />\n                          </Grid>\n                          <Grid item xs>\n                            <ProgressBar value={metric?.roots?.[key]?.indirect ?? 0} total={t} label={\"Indirect\"} />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </ListItem>\n                  <Divider variant={\"middle\"} sx={{ mb: 1 }} />\n                </div>\n              </Collapse>\n            );\n          })}\n        </TransitionGroup>\n      </List>\n    </>\n  );\n};\n","import React from \"react\";\n\n// material-ui\nimport { Divider, Collapse, Chip, Grid, Box } from \"@mui/material\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport CheckRoundedIcon from \"@mui/icons-material/CheckRounded\";\nimport HelpOutlineRoundedIcon from \"@mui/icons-material/HelpOutlineRounded\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\nimport { LicenseMetricType } from \"hooks/metrics\";\n\ninterface ILicenseGroup {\n  /** The license name */\n  name: string;\n  metadata: LicenseMetricType[keyof LicenseMetricType][\"metadata\"];\n  packages: LicenseMetricType[keyof LicenseMetricType][\"packages\"];\n  /** The total number of packages that have licenses. (used to add a total to the metric bar) */\n  totalLicenses: number;\n}\n\n/**\n * A custom list item displaying the number of packages under a particular license.\n */\nconst LicenseGroup = ({ name, metadata, packages, totalLicenses }: ILicenseGroup) => {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <Grid container>\n      <Grid item xs={1}>\n        {metadata?.isOsiApproved === null ? (\n          <HelpOutlineRoundedIcon />\n        ) : metadata?.isOsiApproved ? (\n          <CheckRoundedIcon />\n        ) : null}\n      </Grid>\n      <Grid item xs>\n        <Box onClick={() => setOpen(!open)}>\n          <ProgressBar\n            key={name}\n            value={Object.keys(packages).length ?? 0}\n            total={totalLicenses}\n            label={name}\n            action={open ? <ExpandLess /> : <ExpandMore />}\n          />\n        </Box>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box my={1}>\n            {Object.entries(packages)\n              .sort((a, b) => {\n                return a[1].depth - b[1].depth;\n              })\n              .map(([k, v]) => {\n                return (\n                  <Chip\n                    key={k}\n                    sx={{ margin: 0.5 }}\n                    color={v.depth === 0 ? \"primary\" : v.depth === 1 ? \"secondary\" : \"default\"}\n                    label={k}\n                  />\n                );\n              })}\n          </Box>\n          <Divider />\n        </Collapse>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LicenseGroup;\n","// react\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Divider, Collapse, Button, Box, Grid, Skeleton } from \"@mui/material\";\nimport { TransitionGroup } from \"react-transition-group\";\n\n// local\nimport LicenseGroup from \"./LicenseGroup\";\nimport { LicenseMetricType } from \"hooks/metrics\";\n\ninterface ILicenseMetric {\n  /** Key value pairs of license names (keys) and license information (values).*/\n  metric: LicenseMetricType | null;\n}\n\n/**\n * A metric card that visualizes license data for all packages in the graph.\n */\nexport const LicenseMetric = ({ metric }: ILicenseMetric) => {\n  const [more, setMore] = React.useState(false);\n\n  const licenses = useMemo(\n    () =>\n      Object.entries(metric ?? {}).sort((a, b) => {\n        return Object.keys(b[1]).length - Object.keys(a[1]).length;\n      }),\n    [metric],\n  );\n\n  const totalLicenses = useMemo(\n    () =>\n      Object.entries(metric ?? {}).reduce((sum, [, val]) => {\n        return sum + Object.keys(val.packages).length;\n      }, 0),\n    [metric],\n  );\n\n  if (!metric) {\n    return (\n      <Box>\n        <Skeleton />\n        <Skeleton />\n        <Skeleton width={\"60%\"} />\n      </Box>\n    );\n  }\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={1}>\n          <Typography variant=\"h6\" gutterBottom>\n            OSI\n          </Typography>\n        </Grid>\n        <Grid item xs>\n          <Typography variant=\"h6\" gutterBottom>\n            Dependency Licenses\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Divider />\n      <TransitionGroup>\n        {licenses?.slice(0, 10).map(([key, value]) => {\n          return (\n            <Collapse key={key}>\n              <LicenseGroup\n                name={key}\n                metadata={value.metadata}\n                packages={value.packages}\n                totalLicenses={totalLicenses}\n              />\n            </Collapse>\n          );\n        })}\n      </TransitionGroup>\n\n      <Collapse in={more} timeout=\"auto\" unmountOnExit>\n        <TransitionGroup>\n          {licenses.slice(10).map(([key, value]) => {\n            return (\n              <Collapse key={key}>\n                <LicenseGroup\n                  name={key}\n                  metadata={value.metadata}\n                  packages={value.packages}\n                  totalLicenses={totalLicenses}\n                />\n              </Collapse>\n            );\n          })}\n        </TransitionGroup>\n      </Collapse>\n      <Box textAlign=\"center\">\n        <Button onClick={() => setMore(!more)} color=\"primary\">\n          {more ? \"Less\" : \"More\"}\n        </Button>\n      </Box>\n    </div>\n  );\n};\n","// React\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Chip, Button, Collapse, Stack } from \"@mui/material\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport FeedRoundedIcon from \"@mui/icons-material/FeedRounded\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport { calcTime } from \"utils/calcTime\";\nimport { components } from \"lib/schema\";\nimport { ChipProps } from \"@mui/material/Chip/Chip\";\n\ninterface IImageHeader {\n  imageDocument: components[\"schemas\"][\"AnalysisResultResponse\"] & components[\"schemas\"][\"AnalysisStatusResponse\"];\n  logs?: components[\"schemas\"][\"AnalysisLogResponse\"][\"log\"];\n}\n\n/**\n * Displays basic Advise document information and\n * displays any errors, info, or warnings that came up\n * in the document generation.\n */\nexport const ImageHeader = ({ imageDocument, logs }: IImageHeader) => {\n  const [showLogs, setShowLogs] = React.useState(false);\n  const [selectedLine, setSelectedLine] = React.useState<number | undefined>();\n\n  // get status of the report\n  const [statusText, statusColor]: [string, ChipProps[\"color\"] | undefined] = useMemo(() => {\n    if (imageDocument?.result) {\n      return [\"COMPLETE\", \"success\"];\n    }\n    // if report is not done\n    else if (imageDocument?.status?.state) {\n      return [imageDocument.status.state.toUpperCase(), \"info\"];\n    } else {\n      return [\"UNKNOWN\", undefined];\n    }\n  }, [imageDocument]);\n\n  return (\n    <div>\n      <Typography variant=\"h4\" mb={2}>\n        <b>{imageDocument?.metadata?.document_id ?? imageDocument.parameters.analysis_id}</b>\n      </Typography>\n      <Stack direction=\"row\" spacing={2}>\n        <Chip label={statusText} color={statusColor} />\n        <IconText\n          text={calcTime(\n            imageDocument?.status?.finished_at,\n            imageDocument?.status?.started_at,\n            imageDocument?.metadata?.datetime,\n          )}\n          icon={<AccessTimeIcon />}\n        />\n        <Button sx={{ marginLeft: 2 }} onClick={() => setShowLogs(!showLogs)}>\n          <IconText text=\"Logs\" icon={<FeedRoundedIcon />} />\n        </Button>\n      </Stack>\n      <Collapse in={showLogs}>\n        {logs?.split(\"\\n\").map((line, i) => {\n          return (\n            <Typography\n              key={i}\n              noWrap={selectedLine !== i}\n              onClick={() => setSelectedLine(selectedLine === i ? undefined : i)}\n              variant=\"body2\"\n              sx={{\n                backgroundColor: selectedLine === i ? \"lightyellow\" : i % 2 === 0 ? \"lightgray\" : \"unset\",\n              }}\n            >\n              {line}\n            </Typography>\n          );\n        }) ?? \"Image log is not available.\"}\n      </Collapse>\n    </div>\n  );\n};\n","// react\nimport React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\n// material-ui\nimport { Box, Skeleton } from \"@mui/material\";\nimport { components } from \"lib/schema\";\n\ninterface IDebInfo {\n  /** An object holding metric info. */\n  imageDocument: components[\"schemas\"][\"AnalysisResultResponse\"];\n}\n\nconst columns = [\n  { field: \"name\", headerName: \"Package Name\", flex: 1 },\n  { field: \"version\", headerName: \"Version\", flex: 0.5 },\n  { field: \"arch\", headerName: \"Architecture\", flex: 0.5 },\n];\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const DebInfo = ({ imageDocument }: IDebInfo) => {\n  if (!imageDocument) {\n    return (\n      <Box>\n        <Skeleton />\n        <Skeleton />\n        <Skeleton width={\"60%\"} />\n      </Box>\n    );\n  }\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        disableSelectionOnClick\n        disableColumnSelector\n        hideFooterSelectedRowCount\n        getRowId={row => row.package_identifier}\n        density=\"compact\"\n        rows={imageDocument?.result?.[\"deb\"]}\n        columns={columns}\n        pageSize={50}\n        rowsPerPageOptions={[25, 50, 100]}\n      />\n    </div>\n  );\n};\n","// react\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Box, Grid, Skeleton, Stack, Typography } from \"@mui/material\";\nimport { Chip } from \"@mui/material\";\nimport { ImageDocumentRequestResponseSuccess } from \"../../api\";\n\ninterface IPythonInfo {\n  imageDocument?: ImageDocumentRequestResponseSuccess;\n}\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const PythonInfo = ({ imageDocument }: IPythonInfo) => {\n  if (!imageDocument) {\n    return (\n      <Box data-testid=\"python-info-not-loaded\">\n        <Skeleton />\n        <Skeleton />\n        <Skeleton width={\"60%\"} />\n      </Box>\n    );\n  }\n\n  const files = useMemo(() => {\n    if (!imageDocument?.result?.[\"python-files\"]) {\n      return [];\n    }\n\n    const paths = new Map();\n    imageDocument.result[\"python-files\"].forEach(file => {\n      const split = file.filepath.split(\"/\", 4);\n      const key = split[1] + \"/\" + split[2] + \"/\" + split[3];\n      if (paths.has(key)) {\n        paths.set(key, paths.get(key) + 1);\n      } else {\n        paths.set(key, 1);\n      }\n    });\n    return Array.from(paths.entries()).map(([key, value]) => {\n      return {\n        path: key,\n        count: value,\n      };\n    });\n  }, [imageDocument]);\n\n  const interpreters = useMemo(() => {\n    return imageDocument.result[\"python-interpreters\"].filter(interpreter => !!interpreter.version);\n  }, [imageDocument]);\n\n  return (\n    <Stack direction=\"column\" spacing={3}>\n      {interpreters?.length > 0 ? (\n        <Stack direction=\"row\" spacing={1} alignItems={\"center\"}>\n          <Typography variant={\"h6\"}>Python interpreters: </Typography>\n          {interpreters.map((interpreter, i) => {\n            return (\n              <Chip data-testid=\"python-info-chip\" key={(interpreter?.version ?? \"\") + i} label={interpreter.version} />\n            );\n          })}\n        </Stack>\n      ) : undefined}\n      <div data-testid=\"python-info-loaded\">\n        <Stack direction=\"row\" spacing={1} mb={1} alignItems={\"center\"}>\n          <Typography variant={\"h6\"}>Total number of Python files: </Typography>\n          <Typography variant={\"body1\"}>{files.reduce((prev, cur) => prev + cur.count, 0)}</Typography>\n        </Stack>\n        <Grid container>\n          {files\n            .sort((a, b) => b.count - a.count)\n            .map(file => {\n              return (\n                <Grid key={file.path} item xs={12} lg={6} xl={4}>\n                  <Stack ml={3} direction=\"row\" spacing={1} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                    <Typography variant={\"body2\"}>{file.path}:</Typography>\n                    <Typography variant={\"body2\"}>\n                      <b>{file.count}</b>\n                    </Typography>\n                  </Stack>\n                </Grid>\n              );\n            })}\n        </Grid>\n      </div>\n    </Stack>\n  );\n};\n","// react\nimport React from \"react\";\n\n// material-ui\nimport { Box, Grid, Skeleton, Stack, Typography } from \"@mui/material\";\nimport { Chip } from \"@mui/material\";\nimport { ImageDocumentRequestResponseSuccess } from \"../../api\";\n\nexport interface IImageInfo {\n  imageDocument?: ImageDocumentRequestResponseSuccess;\n}\n\ntype ILabels = {\n  architecture: string;\n  \"build-date\": string;\n  \"com.redhat.build-host\": string;\n  \"com.redhat.component\": string;\n  \"com.redhat.license_terms\": string;\n  description: string;\n  \"distribution-scope\": string;\n  \"io.k8s.description\": string;\n  \"io.k8s.display-name\": string;\n  \"io.openshift.expose-services\": string;\n  \"io.openshift.tags\": string;\n  maintainer: string;\n  name: string;\n  release: string;\n  summary: string;\n  url: string;\n  \"vcs-ref\": string;\n  \"vcs-type\": string;\n  vendor: string;\n  version: string;\n};\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const ImageInfo = ({ imageDocument }: IImageInfo) => {\n  if (!imageDocument) {\n    return (\n      <Box data-testid=\"image-info-not-loaded\">\n        <Skeleton />\n        <Skeleton />\n        <Skeleton width={\"60%\"} />\n      </Box>\n    );\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n          <Typography variant={\"body1\"}>\n            <b>{(imageDocument.result[\"skopeo-inspect\"].Labels as ILabels)?.[\"io.k8s.display-name\"]}</b>\n          </Typography>\n          <Chip label={(imageDocument.result[\"skopeo-inspect\"].Labels as ILabels)?.name.split(\":\").at(-1)} />\n        </Stack>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant={\"h6\"} mb={1}>\n          General information\n        </Typography>\n      </Grid>\n\n      <Grid item xs={3}>\n        <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n          Summary\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant={\"body2\"}>{(imageDocument.result[\"skopeo-inspect\"].Labels as ILabels)?.summary}</Typography>\n      </Grid>\n\n      <Grid item xs={3}>\n        <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n          Description\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant={\"body2\"}>\n          {(imageDocument.result[\"skopeo-inspect\"].Labels as ILabels)?.description}\n        </Typography>\n      </Grid>\n\n      <Grid item xs={3}>\n        <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n          Provider\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant={\"body2\"}>{(imageDocument.result[\"skopeo-inspect\"].Labels as ILabels)?.vendor}</Typography>\n      </Grid>\n\n      <Grid item xs={3}>\n        <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n          Maintainer\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant={\"body2\"}>\n          {(imageDocument.result[\"skopeo-inspect\"].Labels as ILabels)?.maintainer}\n        </Typography>\n      </Grid>\n\n      <Grid item xs={3}>\n        <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n          Build date\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant={\"body2\"}>\n          {new Date(\n            (imageDocument.result[\"skopeo-inspect\"].Labels as ILabels)?.[\"build-date\"] as string,\n          ).toLocaleDateString()}\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Typography variant={\"h6\"} mb={1}>\n          Technical information\n        </Typography>\n      </Grid>\n\n      <Grid item xs={3}>\n        <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n          Image name\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant={\"body2\"}>{(imageDocument.result[\"skopeo-inspect\"].Labels as ILabels)?.name}</Typography>\n      </Grid>\n\n      <Grid item xs={3}>\n        <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n          Image version\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant={\"body2\"}>{(imageDocument.result[\"skopeo-inspect\"].Labels as ILabels)?.version}</Typography>\n      </Grid>\n\n      <Grid item xs={3}>\n        <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n          Architecture\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant={\"body2\"}>{imageDocument.result[\"skopeo-inspect\"].Architecture}</Typography>\n      </Grid>\n\n      <Grid item xs={3}>\n        <Typography variant={\"body2\"} mr={3} ml={2} mb={1}>\n          Exposed Ports\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant={\"body2\"}>\n          {(imageDocument.result[\"skopeo-inspect\"].Labels as ILabels)?.[\"io.openshift.expose-services\"]}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","// react\nimport React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\n// material-ui\nimport { Box, Skeleton } from \"@mui/material\";\nimport { ImageDocumentRequestResponseSuccess } from \"../../api\";\n\ninterface IRPMInfo {\n  imageDocument?: ImageDocumentRequestResponseSuccess;\n}\n\ntype RPMDependency = {\n  arch: string;\n  dependencies: string[];\n  epoch: string | null;\n  name: string;\n  package_identifier: string;\n  release: string;\n  src: boolean;\n  version: string;\n};\n\nconst columns = [\n  { field: \"name\", headerName: \"Package Name\", flex: 1 },\n  { field: \"version\", headerName: \"Version\", flex: 0.5 },\n  { field: \"release\", headerName: \"Release\", flex: 0.25 },\n  {\n    field: \"dependencies\",\n    headerName: \"Dependencies\",\n    flex: 0.5,\n    valueGetter: (params: { row: RPMDependency }) => params.row?.dependencies?.length ?? 0,\n    sortable: false,\n  },\n  { field: \"epoch\", headerName: \"Epoch\", flex: 0.5 },\n  { field: \"arch\", headerName: \"Architecture\", flex: 0.5 },\n];\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const RPMInfo = ({ imageDocument }: IRPMInfo) => {\n  if (!imageDocument) {\n    return (\n      <Box data-testid=\"rpm-info-not-loaded\">\n        <Skeleton />\n        <Skeleton />\n        <Skeleton width={\"60%\"} />\n      </Box>\n    );\n  }\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }} data-testid=\"rpm-info-loaded\">\n      <DataGrid\n        disableSelectionOnClick\n        disableColumnSelector\n        hideFooterSelectedRowCount\n        getRowId={row => row.package_identifier}\n        density=\"compact\"\n        rows={imageDocument?.result?.[\"rpm-dependencies\"] as RPMDependency[]}\n        columns={columns}\n        pageSize={50}\n        rowsPerPageOptions={[25, 50, 100]}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport InfoCard from \"components/Elements/InfoCard\";\nimport { DependenciesMetric, LicenseMetric } from \"components/Metrics\";\nimport { Masonry } from \"@mui/lab\";\nimport { DebInfo, PythonInfo, ImageInfo, RPMInfo } from \"../components\";\nimport { ImageDocumentRequestResponseSuccess } from \"../api\";\nimport { ImageMetrics } from \"../hooks\";\n\ninterface IImageSummary {\n  imageDocument: ImageDocumentRequestResponseSuccess;\n  metrics: ImageMetrics;\n}\n\nexport const ImageSummary = ({ metrics, imageDocument }: IImageSummary) => {\n  return (\n    <Masonry columns={{ xs: 1, md: 2 }} spacing={3} sx={{ mb: 3, mt: 1 }}>\n      {imageDocument ? (\n        <div>\n          <InfoCard\n            cardMeta={{\n              title: \"Image Details\",\n            }}\n            cardBody={<ImageInfo imageDocument={imageDocument} />}\n          />\n        </div>\n      ) : undefined}\n\n      {imageDocument?.result?.[\"python-interpreters\"]?.length > 0 ? (\n        <div>\n          <InfoCard\n            cardMeta={{\n              title: \"Python Details\",\n            }}\n            cardBody={<PythonInfo imageDocument={imageDocument} />}\n          />\n        </div>\n      ) : undefined}\n\n      {imageDocument?.result?.[\"rpm-dependencies\"]?.length > 0 ? (\n        <div>\n          <InfoCard\n            cardMeta={{\n              title: \"RPM Details\",\n            }}\n            cardBody={<RPMInfo imageDocument={imageDocument} />}\n          />\n        </div>\n      ) : undefined}\n\n      {imageDocument.result?.deb?.length > 0 ? (\n        <div>\n          <InfoCard\n            cardMeta={{\n              title: \"Debian Details\",\n            }}\n            cardBody={<DebInfo imageDocument={imageDocument} />}\n          />{\" \"}\n        </div>\n      ) : undefined}\n\n      {Object.keys(metrics?.dependencies?.all ?? {}).length !== 0 ? (\n        <div>\n          <InfoCard\n            cardMeta={{\n              title: \"Python Packages Dependencies\",\n            }}\n            cardBody={<DependenciesMetric metric={metrics?.dependencies} />}\n          />\n        </div>\n      ) : undefined}\n\n      {Object.keys(metrics?.licenses ?? {}).length !== 0 ? (\n        <div>\n          <InfoCard\n            cardMeta={{\n              title: \"Python Packages Licenses\",\n            }}\n            cardBody={<LicenseMetric metric={metrics?.licenses} />}\n          />{\" \"}\n        </div>\n      ) : undefined}\n    </Masonry>\n  );\n};\n","import axios, { AxiosResponse, AxiosError } from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { paths } from \"lib/schema\";\nimport { THOTH_URL } from \"config\";\n\ntype path = paths[\"/analyze/{analysis_id}\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"path\"];\nexport type ImageDocumentRequestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"202\"][\"content\"][\"application/json\"];\nexport type ImageDocumentRequestResponseFailure = path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\n/**\n * An async function that returns a promise for `{base_url}/analyze`\n *\n * @param analysis_id - the image document id (ex: `package-extract-211112223258-38af1a4746733b53`)\n */\nexport const getImageDocument = async (analysis_id?: requestParams[\"analysis_id\"]) => {\n  return axios.get<ImageDocumentRequestResponseSuccess>(THOTH_URL + \"/analyze/\" + analysis_id, {\n    headers: {\n      accept: \"application/json\",\n    },\n  });\n};\n\nexport const useImageDocument = (analysis_id?: requestParams[\"analysis_id\"], config?: { [key: string]: unknown }) => {\n  return useQuery<AxiosResponse<ImageDocumentRequestResponseSuccess>, AxiosError<ImageDocumentRequestResponseFailure>>({\n    ...config,\n    enabled: !!analysis_id,\n    queryKey: [\"ImageDocument\", analysis_id],\n    queryFn: () => getImageDocument(analysis_id),\n  });\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { THOTH_URL } from \"config\";\nimport { paths } from \"lib/schema\";\n\ntype path = paths[\"/analyze/{analysis_id}/log\"][\"get\"];\ntype requestParams = path[\"parameters\"][\"path\"];\ntype requestResponseSuccess = path[\"responses\"][\"200\"][\"content\"][\"application/json\"];\ntype requestResponseFailure = path[\"responses\"][\"400\"][\"content\"][\"application/json\"] &\n  path[\"responses\"][\"404\"][\"content\"][\"application/json\"];\n\n/**\n * An async function that returns a promise for `{base_url}/image/logs`\n *\n * @param analysis_id - the image document id (ex: `package-extract-211112223258-38af1a4746733b53`)\n */\nexport const getImageLogs = async (analysis_id?: requestParams[\"analysis_id\"]) => {\n  return axios.get(THOTH_URL + \"/analyze/\" + analysis_id + \"/log\", {\n    headers: {\n      accept: \"application/json\",\n    },\n  });\n};\n\nexport const useImageLogs = (analysis_id?: requestParams[\"analysis_id\"], config?: { [key: string]: unknown }) => {\n  return useQuery<AxiosResponse<requestResponseSuccess>, AxiosError<requestResponseFailure>>({\n    ...config,\n    enabled: !!analysis_id,\n    queryKey: [\"ImageLogs\", analysis_id],\n    queryFn: () => getImageLogs(analysis_id),\n  });\n};\n","import React from \"react\";\n\ninterface IImageNotFound {\n  analysis_id?: string;\n}\n\nexport const ImageNotFound = ({ analysis_id }: IImageNotFound) => {\n  return <div> &quot;{analysis_id}&quot; not found</div>;\n};\n","import React, { useMemo } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\n// sub-routes\nimport { ImageSummary } from \"./ImageSummary\";\n\n// feature specific imports\nimport { useImageDocument, useImageLogs } from \"../api\";\n\n// misc\nimport { CircularProgress } from \"@mui/material\";\nimport { ImageNotFound } from \"./ImageNotFound\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\nimport { useGraph } from \"hooks\";\nimport { useMetrics } from \"../hooks\";\nimport { ImageHeader } from \"../components\";\nimport { formatImagePackages } from \"../utils\";\nimport { components } from \"lib/schema\";\nimport { AxiosResponse } from \"axios\";\nimport { postImageAnalyze } from \"../../home/api\";\n\nexport const ImageRoutes = () => {\n  // get document id\n  const { analysis_id } = useParams();\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  // api get thoth image analysis document\n  const imageDocument = useImageDocument(analysis_id, {\n    useErrorBoundary: false,\n    refetchInterval: (data: AxiosResponse<components[\"schemas\"][\"AnalysisStatusResponse\"]>) => {\n      if (data?.data?.status) {\n        return 10000;\n      }\n      return false;\n    },\n  });\n\n  const logs = useImageLogs(analysis_id, {\n    useErrorBoundary: false,\n    refetchInterval: () => {\n      if (imageDocument.data?.data?.status) {\n        return 10000;\n      }\n      return false;\n    },\n  });\n\n  // format init graph data\n  const graphData = useMemo(() => {\n    if (imageDocument.data?.data?.metadata) {\n      const os = {\n        name: (imageDocument.data.data.result?.[\"operating-system\"]?.id as string) ?? \"rhel\",\n        version: (imageDocument.data.data.result?.[\"operating-system\"]?.version_id as string)?.split(\".\")[0] ?? \"8\",\n        python_version:\n          imageDocument.data.data.metadata.python.major + \".\" + imageDocument.data.data.metadata.python.minor,\n      };\n      return formatImagePackages(imageDocument.data.data.result[\"python-packages\"], os);\n    }\n  }, [imageDocument.data]);\n\n  // create init graph\n  const graph = useGraph(graphData);\n\n  // compute metric data\n  const metrics = useMetrics(graph);\n\n  if (imageDocument?.isLoading) {\n    return (\n      <div className=\"w-full h-48 flex justify-center items-center\">\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (!imageDocument?.data) {\n    const name = (state as { image_name?: string })?.image_name;\n    if (name) {\n      postImageAnalyze(name).then(response => {\n        navigate(\"/image/\" + response.data.analysis_id, {\n          state: { image_name: name },\n        });\n      });\n      return (\n        <div className=\"w-full h-48 flex justify-center items-center\">\n          <CircularProgress />\n        </div>\n      );\n    }\n    return (\n      <div data-testid=\"image-not-loaded\">\n        <NavigationLayout>\n          <ImageNotFound analysis_id={analysis_id} />\n        </NavigationLayout>\n      </div>\n    );\n  }\n\n  return (\n    <div data-testid=\"image-loaded\">\n      <NavigationLayout goHome={true}>\n        <ImageHeader imageDocument={imageDocument.data?.data} logs={logs.data?.data?.log} />\n        <ImageSummary metrics={metrics} imageDocument={imageDocument.data?.data} />\n      </NavigationLayout>\n    </div>\n  );\n};\n","import { useMemo } from \"react\";\nimport { useLicenseMetric, useDependencyMetric, DependencyMetricType, LicenseMetricType } from \"hooks/metrics\";\nimport { Graph } from \"lib/interfaces/Graph\";\nimport { Node } from \"lib/interfaces/Node\";\nimport { PackageNodeValue } from \"lib/interfaces/PackageNodeValue\";\n\nexport type ImageMetrics = {\n  dependencies: DependencyMetricType | null;\n  licenses: LicenseMetricType | null;\n};\n\nexport function useMetrics(graph?: Graph<Node<PackageNodeValue>>) {\n  const dependencyMetric = useDependencyMetric(graph);\n  const licenseMetric = useLicenseMetric(graph);\n\n  return useMemo(() => {\n    const base: ImageMetrics = {\n      dependencies: null,\n      licenses: null,\n    };\n\n    if (dependencyMetric) {\n      base.dependencies = dependencyMetric;\n    }\n    if (licenseMetric) {\n      base.licenses = licenseMetric;\n    }\n\n    return base;\n  }, [dependencyMetric, licenseMetric]);\n}\n","type ImagePackages = {\n  package_name: string;\n  package_version: string;\n};\n\ntype OS = { name: string; version: string; python_version: string };\n\nexport function formatImagePackages(image_packages: ImagePackages[], os: OS) {\n  return image_packages.map(p => {\n    return {\n      name: p.package_name,\n      version: p.package_version,\n      index: \"https://pypi.org/simple\",\n      os_name: os.name,\n      os_version: os.version,\n      python_version: os.python_version,\n    };\n  });\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Home } from \"features/home\";\nimport { NotFound } from \"routes/NotFound\";\nimport { AdviseRoutes } from \"features/advise\";\nimport { PackageRoutes } from \"features/package\";\nimport { ImageRoutes } from \"features/image\";\n\nexport const RouterConfig = () => {\n  return (\n    <BrowserRouter basename={process.env.REACT_APP_DEPLOYMENT === \"STAGE\" ? \"/search-stage\" : \"/search\"}>\n      <Routes>\n        <Route path={\"/\"} element={<Home />} />\n        <Route path={\"advise/:analysis_id/*\"} element={<AdviseRoutes />} />\n        <Route path={\"package/:package_name/*\"} element={<PackageRoutes />} />\n        <Route path={\"image/:analysis_id/*\"} element={<ImageRoutes />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default RouterConfig;\n","import React from \"react\";\nimport { AppProvider } from \"providers/app\";\nimport RouterConfig from \"routes/RouterConfig\";\n\nfunction App() {\n  return (\n    <AppProvider>\n      <RouterConfig />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}