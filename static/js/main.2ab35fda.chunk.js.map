{"version":3,"sources":["lib/react-query.js","components/Elements/TabPanel/TabPanel.js","assets/thoth-logo.png","components/Elements/SearchBar/SearchBar.js","config/index.js","features/home/api/postAdvise.js","features/home/api/getPackageExists.js","features/home/components/PackageSearch.js","features/home/components/ComboBox/ComboBox.js","features/home/components/AdviseCreation.js","features/home/routes/index.js","features/misc/routes/NotFound.js","components/Footer/Footer.js","components/Layout/MainLayout.js","components/Layout/AdviseLayout.js","components/Elements/InfoCard/InfoCard.js","components/Elements/IconText/IconText.js","features/advise/utils/formatLockfile.js","utils/timeSince.js","features/advise/utils/calcTime.js","features/advise/utils/discoverPackageChanges.js","features/advise/components/AdviseHeader/CustomAlert/CustomAlert.js","features/advise/components/AdviseHeader/AdviseHeader.js","components/Elements/ProgressBar/ProgressBar.js","features/advise/components/AdviseMetric/AdviseMetric.js","features/advise/components/CustomCardAction/CustomCardAction.js","features/advise/components/DependenciesMetric/DependenciesMetric.js","features/advise/components/LicenseMetric/LicenseGroup/LicenseGroup.js","features/advise/components/LicenseMetric/LicenseMetric.js","features/advise/components/AdviseTableView/utils.js","features/advise/components/AdviseTableView/EnhancedTableHead/EnhancedTableHead.js","utils/Node.js","features/advise/features/components/Popup/Popup.js","utils/Graph.js","features/advise/features/components/NetworkGraphView/NetworkGraphView.js","features/advise/features/components/SelectedPackage/SelectedPackage.js","features/advise/routes/AdviseDetails.js","features/advise/components/AdviseTableView/AdviseTableView.js","features/advise/components/LockfileView/LockfileView.js","features/advise/routes/AdviseSummary.js","features/advise/api/getAdviseDocument.js","features/advise/api/getAdviseLogs.js","features/misc/api/getPackageMetadata.js","features/advise/hooks/useGraph.js","features/advise/hooks/useMetrics.js","features/advise/routes/AdviseNotFound.js","components/Layout/NavigationLayout.js","features/advise/routes/index.js","features/advise/hooks/useMergeGraphs.js","features/package/components/ParamDropdown/ParamDropdown.js","features/package/components/PackageHeader/PackageHeader.js","features/package/components/PackageDependencies/VersionDropdown.js","features/package/components/PackageDependencies/PackageDependencies.js","features/package/routes/PackageNotFound.js","features/package/components/PackageLicenses/PackageLicenses.js","features/package/api/getPackageVersions.js","features/package/api/getPackageEnvironments.js","features/package/hooks/useAllVersions.js","features/package/routes/PackageOverview.js","features/package/hooks/useSimpleGraph.js","features/package/routes/index.js","routes/RouterConfig.js","styles/Theme.js","stores/Global.js","providers/app.js","App.js","index.js"],"names":["queryClient","QueryClient","defaultOptions","queries","useErrorBoundary","refetchOnWindowFocus","refetchOnMount","retry","TabPanel","children","value","index","props","role","hidden","id","className","SearchBar","onChange","onEnter","label","helpertext","boxprops","error","lefticon","righticon","Box","Typography","variant","sx","color","Paper","component","p","display","alignItems","borderColor","undefined","paddingLeft","paddingRight","InputBase","ml","flex","placeholder","e","target","onKeyPress","ev","key","preventDefault","THOTH_URL","options","manipulation","enabled","editNode","nodeData","callback","fixed","x","interaction","hover","hoverConnectedEdges","selectConnectedEdges","selectable","edges","chosen","smooth","arrowStrikethrough","arrows","from","type","nodes","background","border","shape","size","borderWidth","labelHighlightBold","font","strokeWidth","physics","hierarchicalRepulsion","damping","springLength","solver","minVelocity","postAdvise","pipfile","pipfileLock","runtime_environment","data","application_stack","requirements","requirements_format","requirements_lock","axios","post","params","recommendation_type","limit","headers","accept","getPackageExists","name","a","get","per_page","then","res","versions","length","catch","PackageSearch","navigate","useNavigate","useState","searchQuery","setSearchQuery","searchError","setSearchError","handleAnalyze","Grid","container","justifyContent","alignSelf","item","xs","minHeight","spacing","md","handleChange","mr","Button","onClick","minWidth","filter","createFilterOptions","ComboBox","suggestions","help","required","setValue","useMemo","map","suggestion","title","Autocomplete","event","newValue","inputValue","filterOptions","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","freeSolo","renderInput","fullWidth","helperText","reducer","state","action","loading","payload","param","Error","initState","lookupType","operating_system_name","operating_system_version","platform","python_version","cuda_version","cudnn_version","mkl_version","openblas_version","openmpi_version","base_image","AdviseCreation","useReducer","dispatch","isValid","valid","operating_system","version","Object","keys","forEach","response","analysis_id","status","includes","Collapse","in","mt","backgroundColor","padding","marginBottom","multiline","rows","sm","TextField","LoadingButton","Home","mode","setMode","theme","useTheme","matches","useMediaQuery","breakpoints","up","style","maxWidth","marginLeft","marginRight","marginTop","alt","src","logo","height","width","align","mb","direction","stat","i","ToggleButtonGroup","exclusive","newMode","ToggleButton","Divider","NotFound","Footer","pb","pt","textAlign","useStyles","makeStyles","root","MainLayout","classes","AdviseLayout","header","location","useLocation","Tabs","pathname","split","at","indicatorColor","textColor","Tab","RouterLink","to","bullet","margin","transform","fontSize","pos","InfoCard","cardMeta","cardBody","cardAction","Card","CardHeader","subheader","subTitle","CardContent","IconText","text","icon","link","href","formatLockfile","lockfile","entries","requirements_locked","default","replace","os_name","os_version","timeSince","date","seconds","Math","floor","Date","interval","num","discoverPackageChanges","justifications","justifiedPackages","Map","justification","package_name","has","set","node","package","change","depth","reasons","start","packages","visited","visitList","reasonNodes","pop","parents","adj","reason","oldVersion","whyRemoved","thoth","CustomAlert","info","Alert","severity","toLowerCase","message","titleRow","linksRow","alert","AdviseHeader","finished_at","started_at","datetime","adviseDocument","logs","React","expandAlerts","setExpandAlerts","showLogs","setShowLogs","selectedLine","setSelectedLine","result","report","ERROR","toUpperCase","statusText","statusColor","alerts","stack_info","metadata","document_id","parameters","Chip","error_msg","timeout","unmountOnExit","slice","line","noWrap","CustomLinearProgress","withStyles","borderRadius","colorPrimary","palette","grey","bar","LinearProgress","gridTemplateColumns","gridGap","whiteSpace","overflow","textOverflow","ProgressBar","total","AdviseMetric","metric","added","removed","unchanged","justTotal","values","reduce","b","gutterBottom","build","Skeleton","CustomCardAction","DependenciesMetric","all","roots","totalDependencies","direct","indirect","List","TransitionGroup","t","ListItem","ListItemText","primary","LicenseGroup","totalLicenses","open","setOpen","isOsiApproved","my","sort","k","v","LicenseMetric","more","setMore","licenses","sum","val","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","headCells","numeric","EnhancedTableHead","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","property","visuallyHidden","Node","this","adjacents","Set","add","Array","Popup","Summary","License","latestVersion","Graph","vertex","source","destination","sourceNode","destinationNode","addAdjacent","isAdjacent","first","shift","getAdjacents","path","newPath","nextPath","findPath","parent","paths","findAllPaths","flexFlow","canvas","NetworkGraph","mergedGraph","visJsRef","useRef","selected","useContext","SelectedPackageContext","useEffect","selectedNode","findAllNodesOnAllPaths","convertedNodes","DataSet","popup","document","createElement","ReactDOM","render","visData","visEdges","network","current","Network","networkCanvas","getElementById","getElementsByTagName","on","changeCursor","isCluster","newCursorStyle","cursor","ref","SelectedPackage","setSelected","selectedPackage","dependents","justs","just","Name","Version","Link","underline","Fragment","advisory","NetworkGraphView","createContext","AdviseDetails","search","setSearch","Provider","s","AdviseTableView","filteredGraph","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","setRows","console","log","newRows","warnings","license","dependencies","summary","emptyRows","max","TableContainer","Table","TableBody","row","labelId","iconColor","tabIndex","scope","paddingBottom","paddingTop","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","AdviseSummary","metrics","setPipfile","handlePipfile","newPipfile","advise","getAdviseDocument","getAdviseLogs","getPackageMetadata","usePackagesMetadata","config","useQueries","queryKey","queryFn","useGraph","knownRoots","allMetadata","allMetadataStatus","success","query","graph","setGraph","tempGraph","notRoot","addVertex","importlib_metadata","currentNode","dep","adjacentNode","addEdge","app","adjs","min","useDependencyMetric","setMetric","base","bfs","graphSearch","useLicenseMetric","packageLicenses","Classifier","classifier","parsed","generalLicense","specificLicense","specific","useAdviseMetric","os_release","python","implementation_name","major","minor","micro","analyzer","analyzer_version","products","AdviseNotFound","NavigationLayout","AdviseRoutes","useParams","useQuery","useAdviseDocument","refetchInterval","useAdviseLogs","initGraphData","isSuccess","project","adviseGraphData","initGraph","adviseGraph","oldGraph","newGraph","visGraphEdges","combinedNode","main","useMergeGraphs","adviseMetric","oldDependencyMetric","newDependencyMetric","oldLicenseMetric","newLicenseMetric","useMetrics","isLoading","CircularProgress","element","ParamDropdown","disabled","SpecContext","specs","defaultSpecs","Select","displayEmpty","package_version","encodeURIComponent","index_url","renderValue","MenuItem","PackageHeader","allVersions","allEnvironments","showEnvParams","setShowEnvParams","versionOptions","dups","indexUrlOptions","env","osNameOptions","osVersionOptions","pythonVersionOptions","IconButton","VersionDropdown","anchorEl","setAnchorEl","distribution","noDup","currentKey","buckets","ceil","fixedVersionOptions","currentTarget","endIcon","specifier","Menu","onClose","PaperProps","maxHeight","alignContent","divider","PackageDependencies","visitedOrder","extra","rowSpacing","join","PackageNotFound","getPackageVersions","getPackageEnvironments","useAllVersions","useInfiniteQuery","input","pageParam","getNextPageParam","lastPage","setAllVersions","hasNextPage","isFetchingNextPage","fetchNextPage","merged","pages","reverse","flexGrow","PackageOverview","setDefaultSpecs","decodeURIComponent","d","environments","usePackageMetadata","useSimpleGraph","PackageRoutes","RouterConfig","basename","exact","themeLight","createTheme","light","dark","secondary","priamry","typography","fontFamily","h4","fontWeight","lineHeight","h5","h6","body1","body2","subtitle1","subtitle2","Theme","ThemeProvider","CssBaseline","StateContext","DispatchContext","Global","ErrorFallback","window","assign","origin","AppProvider","FallbackComponent","client","App","StrictMode"],"mappings":"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","file":"static/js/main.2ab35fda.chunk.js","sourcesContent":["import { QueryClient } from \"react-query\";\n\nconst queryConfig = {\n    queries: {\n        useErrorBoundary: true,\n        refetchOnWindowFocus: false,\n        refetchOnMount: false,\n        retry: false,\n    },\n};\n\nexport const queryClient = new QueryClient({ defaultOptions: queryConfig });\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A tab panel used to encapsulate different tab content.\n */\nconst TabPanel = ({ children, value, index, ...props }) => {\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            className={`${props.className}`}\n            {...props}\n        >\n            {value === index && children}\n        </div>\n    );\n};\n\nTabPanel.propTypes = {\n    /** The body of the tab. */\n    children: PropTypes.node,\n    /** The unique identifier of the tab. */\n    index: PropTypes.any.isRequired,\n    /** The state variable passed in from the parent which is compared to the index */\n    value: PropTypes.any.isRequired,\n    /** additional styling */\n    className: PropTypes.string,\n};\n\nexport default TabPanel;\n","export default __webpack_public_path__ + \"static/media/thoth-logo.1a28a729.png\";","import React from \"react\";\n\n// material ui\nimport { Typography, Box, Paper, InputBase } from \"@material-ui/core\";\n\n// react\nimport PropTypes from \"prop-types\";\n\n/**\n *\n */\nconst SearchBar = props => {\n    const {\n        onChange,\n        onEnter,\n        label,\n        helpertext,\n        boxprops,\n        error = false,\n        lefticon,\n        righticon,\n    } = props;\n\n    return (\n        <Box>\n            <Typography\n                variant={\"body1\"}\n                sx={{ color: error ? \"error.main\" : \"text.secondary\" }}\n            >\n                {label}\n            </Typography>\n            <Paper\n                component=\"form\"\n                variant=\"outlined\"\n                sx={{\n                    p: \"8px 4px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    borderColor: error ? \"red\" : undefined,\n                    paddingLeft: 2,\n                    paddingRight: 2,\n                }}\n                {...boxprops}\n            >\n                {lefticon}\n                <InputBase\n                    sx={{ ml: 1, flex: 1 }}\n                    placeholder={helpertext}\n                    error={error}\n                    onChange={e => onChange(e.target.value)}\n                    onKeyPress={ev => {\n                        if (ev.key === \"Enter\") {\n                            onEnter();\n                            ev.preventDefault();\n                        }\n                    }}\n                    {...props}\n                />\n                {righticon}\n            </Paper>\n        </Box>\n    );\n};\n\nSearchBar.propTypes = {\n    /** The error text or default label text */\n    label: PropTypes.string,\n    /** callback function when textbox content changes */\n    onChange: PropTypes.func.isRequired,\n    /** callback function when textbox ENTER is pressed */\n    onEnter: PropTypes.func,\n    /** helper text for the search bar */\n    helpertext: PropTypes.string,\n    /** if there is an error or not */\n    error: PropTypes.bool,\n    /** icon displayed on the left of the text box */\n    lefticon: PropTypes.node,\n    /** icon displayed on the right of the text box */\n    righticon: PropTypes.node,\n    /** Props added to the text box */\n    boxprops: PropTypes.any,\n};\n\nexport default SearchBar;\n","export const PYPI_URL = \"https://pypi.org/pypi\";\nexport const THOTH_URL =\n    process.env.REACT_APP_DEPLOYMENT === \"STAGE\" ||\n    process.env.NODE_ENV === \"development\"\n        ? \"https://stage.thoth-station.ninja/api/v1\"\n        : \"https://khemenu.thoth-station.ninja/api/v1\";\nexport const LICENSES_URL =\n    \"https://raw.githubusercontent.com/spdx/license-list-data/master/json/licenses.json\";\n\n/**\n * used for vis-js graph render engine\n */\nexport const options = {\n    manipulation: {\n        enabled: false,\n        editNode: function (nodeData, callback) {\n            nodeData.fixed = !nodeData.fixed.x;\n            callback(nodeData);\n        },\n    },\n    interaction: {\n        hover: true,\n        hoverConnectedEdges: false,\n        selectConnectedEdges: false,\n        selectable: true,\n    },\n    edges: {\n        chosen: false,\n        smooth: false,\n        color: {\n            color: \"#5c6470\",\n        },\n        arrowStrikethrough: false,\n        arrows: {\n            from: {\n                enabled: true,\n                type: \"triangle\",\n            },\n        },\n    },\n\n    nodes: {\n        chosen: false,\n        color: {\n            background: \"#5c6470\",\n            border: \"#fff\",\n            hover: {\n                background: \"#f39200\",\n                border: \"#fff\",\n            },\n        },\n        shape: \"dot\",\n        size: 10,\n        borderWidth: 2,\n        labelHighlightBold: false,\n        font: {\n            color: \"#393e46\",\n            strokeWidth: 2,\n            size: 15,\n        },\n    },\n    physics: {\n        hierarchicalRepulsion: {\n            damping: 0.1,\n            springLength: 200,\n        },\n        solver: \"hierarchicalRepulsion\",\n        minVelocity: 0.15,\n    },\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\n\nexport const postAdvise = (pipfile, pipfileLock, runtime_environment) => {\n    const data = {\n        application_stack: {\n            requirements: pipfile,\n            requirements_format: \"pipenv\",\n            requirements_lock: pipfileLock,\n        },\n        runtime_environment: runtime_environment,\n    };\n\n    return axios.post(THOTH_URL + \"/advise/python\", data, {\n        params: {\n            recommendation_type: \"stable\",\n            limit: 500,\n        },\n        headers: {\n            accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\n\nexport const getPackageExists = async name => {\n    return axios\n        .get(THOTH_URL + \"/python/package/versions\", {\n            params: {\n                name: name,\n                per_page: 1,\n            },\n            headers: {\n                accept: \"application/json\",\n            },\n        })\n        .then(res => {\n            return res.data.versions.length > 0;\n        })\n        .catch(() => false);\n};\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport SearchBar from \"../../../components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPackageExists } from \"../api\";\n\nexport const PackageSearch = () => {\n    const navigate = useNavigate();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [searchError, setSearchError] = useState(\"\");\n\n    const handleAnalyze = async () => {\n        // if no query\n        if (searchQuery === \"\") {\n            return;\n        }\n\n        const exists = await getPackageExists(searchQuery);\n\n        if (exists) {\n            navigate(\"/package/\" + searchQuery);\n        } else {\n            setSearchError(\"Thoth does not know about that package\");\n        }\n    };\n\n    const handleChange = e => {\n        setSearchQuery(e.target.value);\n        if (searchError !== \"\") {\n            setSearchError(\"\");\n        }\n    };\n\n    return (\n        <Grid container justifyContent=\"center\">\n            <Grid alignSelf=\"flex-start\" item xs={12}>\n                <Typography\n                    color=\"error\"\n                    variant=\"body1\"\n                    sx={{ minHeight: 30 }}\n                >\n                    {searchError ?? \"\"}\n                </Typography>\n            </Grid>\n            <Grid container spacing={2} item xs={12}>\n                <Grid item xs={12} md={10}>\n                    <SearchBar\n                        error={searchError !== \"\"}\n                        onChange={e => handleChange(e)}\n                        helpertext={\"Search for a Python package\"}\n                        type=\"search\"\n                        boxprops={{ mr: 2 }}\n                        lefticon={<SearchRoundedIcon />}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => handleAnalyze()}\n                        sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                    >\n                        <b>Analyze</b>\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst filter = createFilterOptions();\n\nexport default function ComboBox({\n    suggestions,\n    label,\n    help,\n    required,\n    error,\n    value,\n    setValue,\n}) {\n    suggestions = useMemo(() => {\n        return suggestions.map(suggestion => {\n            return {\n                title: suggestion,\n            };\n        });\n    }, [suggestions]);\n\n    return (\n        <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n                if (typeof newValue === \"string\") {\n                    setValue(newValue);\n                } else if (newValue && newValue.inputValue) {\n                    // Create a new value from the user input\n                    setValue({ title: newValue.inputValue });\n                } else {\n                    setValue(newValue);\n                }\n            }}\n            filterOptions={(options, params) => {\n                const filtered = filter(options, params);\n\n                const { inputValue } = params;\n                // Suggest the creation of a new value\n                const isExisting = options.some(\n                    option => inputValue === option.title,\n                );\n                if (inputValue !== \"\" && !isExisting) {\n                    filtered.push({\n                        inputValue,\n                        title: `Add \"${inputValue}\"`,\n                    });\n                }\n\n                return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={suggestions ?? []}\n            getOptionLabel={option => {\n                // Value selected with enter, right from the input\n                if (typeof option === \"string\") {\n                    return option;\n                }\n                // Add \"xxx\" option created dynamically\n                if (option.inputValue) {\n                    return option.inputValue;\n                }\n                // Regular option\n                return option.title;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.title}</li>}\n            freeSolo\n            renderInput={params => (\n                <TextField\n                    fullWidth\n                    {...params}\n                    label={label}\n                    required={required}\n                    error={error !== undefined}\n                    helperText={help}\n                />\n            )}\n        />\n    );\n}\n\nComboBox.propTypes = {\n    suggestions: PropTypes.array,\n    label: PropTypes.string,\n    help: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.any,\n    value: PropTypes.string,\n    setValue: PropTypes.func,\n};\n","import {\n    Button,\n    Collapse,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport React, { useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\nimport { postAdvise } from \"../api\";\nimport ComboBox from \"./ComboBox/ComboBox\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"loading\":\n            return { ...state, loading: action.payload };\n        case \"error\":\n            return {\n                ...state,\n                error: { ...state.error, [action.param]: action.payload },\n            };\n        case \"clear-error\":\n            state.error = {};\n            return state;\n        case \"input\":\n            return {\n                ...state,\n                [action.param]: action.payload,\n                error: { ...state.error, [action.param]: undefined },\n            };\n        default:\n            throw new Error(\"Advise state dispatch error\");\n    }\n}\n\nexport const initState = {\n    error: {},\n    loading: false,\n    lookupType: \"id\",\n    operating_system_name: \"ubi\",\n    operating_system_version: \"8\",\n    platform: \"\",\n    python_version: \"3.8\",\n    cuda_version: \"\",\n    cudnn_version: \"\",\n    mkl_version: \"\",\n    name: \"\",\n    openblas_version: \"\",\n    openmpi_version: \"\",\n    base_image: \"\",\n};\n\nexport const AdviseCreation = () => {\n    const navigate = useNavigate();\n    const [state, dispatch] = useReducer(reducer, initState);\n\n    const isValid = () => {\n        if (state.lookupType === \"id\") {\n            if (!state.id || state.id === \"\") {\n                dispatch({\n                    type: \"error\",\n                    param: \"id\",\n                    payload: \"Field cant be empty\",\n                });\n                return false;\n            }\n        } else {\n            let valid = true;\n            if (!state.pipfile) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"pipfile\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n            if (!state.pipfileLock) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"pipfileLock\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n            if (!state.name) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"name\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n\n            return valid;\n        }\n\n        return true;\n    };\n\n    const handleAnalyze = async () => {\n        if (state.loading || !isValid()) {\n            return;\n        }\n\n        if (state.lookupType === \"id\") {\n            navigate(\"/advise/\" + state.id);\n        } else {\n            dispatch({ type: \"loading\", payload: true });\n            const runtime_environment = {\n                operating_system: {\n                    name: state.operating_system_name,\n                    version: state.operating_system_version,\n                },\n                platform: state.platform,\n                python_version: state.python_version,\n                base_image: state.base_image,\n                cuda_version: state.cuda_version,\n                cudnn_version: state.cudnn_version,\n                mkl_version: state.mkl_version,\n                name: state.name,\n                openblas_version: state.openblas_version,\n                openmpi_version: state.openmpi_version,\n            };\n\n            Object.keys(runtime_environment).forEach(key => {\n                if (runtime_environment[key] === \"\") {\n                    delete runtime_environment[key];\n                }\n            });\n            if (\n                runtime_environment[\"operating_system\"][\"name\"] === \"\" ||\n                runtime_environment[\"operating_system\"][\"version\"] === \"\"\n            ) {\n                delete runtime_environment[\"operating_system\"];\n            }\n\n            postAdvise(state.pipfile, state.pipfileLock, runtime_environment)\n                .then(response => {\n                    dispatch({ type: \"loading\", payload: false });\n                    navigate(\"/advise/\" + response.data.analysis_id);\n                })\n                .catch(error => {\n                    dispatch({ type: \"loading\", payload: false });\n                    if (error?.response?.status === 400) {\n                        if (\n                            error?.response?.data?.error?.includes(\n                                \"Pipfile.lock\",\n                            )\n                        ) {\n                            dispatch({\n                                type: \"error\",\n                                param: \"pipfileLock\",\n                                payload: error?.response?.data?.error,\n                            });\n                        } else if (\n                            error?.response?.data?.error?.includes(\"Pipfile\")\n                        ) {\n                            dispatch({\n                                type: \"error\",\n                                param: \"pipfile\",\n                                payload: error?.response?.data?.error,\n                            });\n                        }\n                    }\n                });\n        }\n    };\n\n    return (\n        <>\n            <Collapse in={state.lookupType === \"id\"}>\n                <>\n                    <Grid container justifyContent=\"center\">\n                        <Grid item xs={12}>\n                            <Typography\n                                color=\"error\"\n                                variant=\"body1\"\n                                sx={{ minHeight: 30 }}\n                            >\n                                {state.error?.id}\n                            </Typography>\n                        </Grid>\n                        <Grid container item xs={12} spacing={2}>\n                            <Grid item xs={12} md={10}>\n                                <SearchBar\n                                    error={state.error?.id}\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"id\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    helpertext={\"Analysis ID\"}\n                                    type=\"search\"\n                                    boxprops={{ mr: 2 }}\n                                    lefticon={<SearchRoundedIcon />}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => handleAnalyze()}\n                                    sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                                >\n                                    <b>Analyze</b>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        onClick={() =>\n                            dispatch({\n                                type: \"input\",\n                                param: \"lookupType\",\n                                payload: \"manual\",\n                            })\n                        }\n                    >\n                        New Advise\n                    </Button>\n                </>\n            </Collapse>\n\n            <Collapse in={state.lookupType === \"manual\"}>\n                <>\n                    <Typography variant={\"h6\"} mt={3}>\n                        Advise Parameters\n                    </Typography>\n                    <Paper\n                        sx={{\n                            backgroundColor: \"white\",\n                            padding: 3,\n                            marginBottom: 5,\n                        }}\n                        variant=\"outlined\"\n                    >\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} md={6}>\n                                <SearchBar\n                                    label={\n                                        state.error?.pipfile\n                                            ? state.error?.pipfile\n                                            : \"Pipfile contents\"\n                                    }\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"pipfile\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    error={state.error?.pipfile !== undefined}\n                                    multiline\n                                    rows={8}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <SearchBar\n                                    label={\n                                        state.error?.pipfileLock\n                                            ? state.error?.pipfileLock\n                                            : \"Pipfile.lock contents\"\n                                    }\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"pipfileLock\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    error={\n                                        state.error?.pipfileLock !== undefined\n                                    }\n                                    multiline\n                                    rows={8}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container mt={4} spacing={2}>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"base_image\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.base_image}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Base Image\"\n                                    required={false}\n                                    helperText=\"A base container image used to run the application.\"\n                                    error={state.error?.base_image}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"cuda_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.cuda_version}\n                                    suggestions={[\"9.0\"]}\n                                    label=\"CUDA Version\"\n                                    required={false}\n                                    help=\"Nvidia CUDA version which the application uses.\"\n                                    error={state.error?.cuda_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"cudnn_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.cudnn_version}\n                                    suggestions={[\"8\"]}\n                                    label=\"cuDNN Version\"\n                                    required={false}\n                                    help=\"NVIDIA cuDNN version used, if any.\"\n                                    error={state.error?.cudnn_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"mkl_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.mkl_version}\n                                    suggestions={[\"2021.1.1\"]}\n                                    label=\"MKL Version\"\n                                    required={false}\n                                    help=\"Intel® Math Kernel Library version used, if any.\"\n                                    error={state.error?.mkl_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"name\",\n                                            payload: e.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.name}\n                                    suggestions={[\"ubi:8-prod\"]}\n                                    label=\"Name\"\n                                    required={true}\n                                    help=\"User defined name of the runtime environment.\"\n                                    error={state.error?.name}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"openblas_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.openblas_version}\n                                    suggestions={[\"0.3.13\"]}\n                                    label=\"OpenBLAS Version\"\n                                    required={false}\n                                    help=\"OpenBLAS version used, if any.\"\n                                    error={state.error?.openblas_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"openmpi_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.openmpi_version}\n                                    suggestions={[\"4.1\"]}\n                                    label=\"Open MPI Version\"\n                                    required={false}\n                                    help=\"Open MPI version used, if any.\"\n                                    error={state.error?.openmpi_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"operating_system_name\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.operating_system_name}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Operating System Name\"\n                                    required={false}\n                                    helperText=\"Operating system name used.\"\n                                    error={state.error?.operating_system_name}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"operating_system_version\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.operating_system_version}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Operating System Version\"\n                                    required={false}\n                                    helperText=\"Operating system version used.\"\n                                    error={\n                                        state.error?.operating_system_version\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"platform\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.platform}\n                                    suggestions={[\"linux-x86_64\"]}\n                                    label=\"Platform\"\n                                    required={false}\n                                    help=\"Platform used - corresponds to sysconfig.get_platform() call.\"\n                                    error={state.error?.platform}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"python_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.python_version}\n                                    suggestions={[\n                                        \"2.7\",\n                                        \"3.6\",\n                                        \"3.7\",\n                                        \"3.8\",\n                                        \"3.9\",\n                                    ]}\n                                    label=\"Python Version\"\n                                    required={false}\n                                    help=\"Python version on which the application runs on.\"\n                                    error={state.error?.python_version}\n                                />\n                            </Grid>\n                            <Grid container item xs={12} spacing={2}>\n                                <Grid item xs={6} md={6}>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        onClick={() =>\n                                            dispatch({\n                                                type: \"input\",\n                                                param: \"lookupType\",\n                                                payload: \"id\",\n                                            })\n                                        }\n                                        sx={{\n                                            minHeight: \"100%\",\n                                            minWidth: \"100%\",\n                                        }}\n                                    >\n                                        <b>Cancel</b>\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <LoadingButton\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => handleAnalyze()}\n                                        loading={state.loading}\n                                        sx={{\n                                            minHeight: \"100%\",\n                                            minWidth: \"100%\",\n                                        }}\n                                    >\n                                        <b>Analyze</b>\n                                    </LoadingButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </>\n            </Collapse>\n        </>\n    );\n};\n","// react\nimport React, { useState } from \"react\";\n\n// material-ui\nimport {\n    Typography,\n    Grid,\n    Divider,\n    ToggleButtonGroup,\n    ToggleButton,\n    Box,\n} from \"@material-ui/core\";\n\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\n// local\nimport TabPanel from \"components/Elements/TabPanel\";\nimport logo from \"assets/thoth-logo.png\";\n\nimport { PackageSearch, AdviseCreation } from \"../components\";\n\nexport const Home = () => {\n    // utility states\n    const [mode, setMode] = useState(\"multiple\");\n\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n    // change mode view\n    const handleMode = (event, newMode) => {\n        if (newMode) {\n            setMode(newMode);\n        }\n    };\n\n    return (\n        <div\n            style={{\n                maxWidth: \"1000px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n            }}\n        >\n            <Grid container justifyContent=\"center\">\n                <Grid item>\n                    <Box sx={{ marginTop: 10 }}>\n                        <img\n                            alt=\"Thoth Logo\"\n                            src={logo}\n                            height={!matches ? \"auto\" : 300}\n                            width={\"100%\"}\n                        />\n                    </Box>\n                </Grid>\n                <Grid container item justifyContent=\"center\" mt={5} spacing={0}>\n                    <Grid container item sm={12} md={6} align=\"center\" mr={5}>\n                        <Grid item xs={12} align=\"left\" mb={3}>\n                            <Typography variant=\"h4\">\n                                <b>Thoth Search</b>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} align=\"left\">\n                            <Typography variant=\"subtitle1\">\n                                Thoth Search is a tool that runs analysis on a\n                                Python application. It utilizes package metadata\n                                and Thoth Adviser to analyse and recommend a\n                                software stack. You can run analysis on an\n                                entire Python application using a properly\n                                formatted Pipfile and Pipfile.lock.\n                                Alternatively, you can analyse a single Python\n                                package to see what Thoth knows about the\n                                package.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid\n                        item\n                        container\n                        sm={12}\n                        md={5}\n                        direction=\"column\"\n                        justifyContent=\"center\"\n                        spacing={1}\n                    >\n                        {[\n                            [\"One\", \"100k\"],\n                            [\"Two\", \"20%\"],\n                            [\"Three\", \"62\"],\n                            [\"Four\", \"N/A\"],\n                        ].map((stat, i) => {\n                            return (\n                                <Grid\n                                    item\n                                    container\n                                    alignItems=\"center\"\n                                    key={i}\n                                >\n                                    <Grid item xs={6}>\n                                        <Typography variant=\"h6\">\n                                            <b>Thoth Statistic {stat[0]}</b>\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography variant=\"h5\" align=\"right\">\n                                            {stat[1]}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                    <Grid item xs={12} align=\"center\" mt={3} mb={4}>\n                        <ToggleButtonGroup\n                            value={mode}\n                            exclusive\n                            onChange={handleMode}\n                            size={!matches ? \"small\" : \"large\"}\n                        >\n                            <ToggleButton value=\"single\">\n                                <b>single package analysis</b>\n                            </ToggleButton>\n                            <ToggleButton value=\"multiple\">\n                                <b>Python application analysis</b>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider sx={{ marginBottom: 3 }} />\n                        <TabPanel value={mode} index=\"single\">\n                            <PackageSearch />\n                        </TabPanel>\n                        <TabPanel value={mode} index={\"multiple\"}>\n                            <AdviseCreation />\n                        </TabPanel>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n","import React from \"react\";\n\nexport const NotFound = () => {\n    return <div>404</div>;\n};\n","import React from \"react\";\n\nimport { Box } from \"@material-ui/core\";\n\nexport const Footer = () => {\n    return (\n        <Box\n            pb={3}\n            pt={6}\n            sx={{\n                backgroundColor: \"#444f60\",\n                textAlign: \"center\",\n                color: \"white\",\n            }}\n        >\n            This is a footer\n        </Box>\n    );\n};\n","import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Footer } from \"../Footer\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(15),\n        minHeight: \"100vh\",\n    },\n}));\n\n/**\n * Main layout adds margins and spacing to the whole app.\n */\nexport const MainLayout = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.root}>{children}</div>\n            <Footer />\n        </>\n    );\n};\n\nMainLayout.propTypes = {\n    children: PropTypes.node,\n};\n","import * as React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A layout used for the advise feature tabs. It formats the tabs as router links.\n */\nexport const AdviseLayout = ({ children, header }) => {\n    const location = useLocation();\n\n    return (\n        <>\n            <div>\n                {header}\n                <Tabs\n                    value={location.pathname.split(\"/\").at(-1)}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab\n                        label=\"Summary\"\n                        value={\"summary\"}\n                        component={RouterLink}\n                        to=\"summary\"\n                    />\n                    <Tab\n                        label=\"Advise Results\"\n                        value={\"details\"}\n                        component={RouterLink}\n                        to=\"details\"\n                    />\n                </Tabs>\n            </div>\n            <div>{children}</div>\n        </>\n    );\n};\n\nAdviseLayout.propTypes = {\n    children: PropTypes.node,\n    header: PropTypes.element,\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        height: \"100%\",\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\n/** Card template for metric cards. */\nconst InfoCard = ({ cardMeta, cardBody, cardAction }) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                action={cardAction}\n                title={<Typography variant=\"h5\">{cardMeta.title}</Typography>}\n                subheader={cardMeta.subTitle}\n            />\n            <CardContent>{cardBody}</CardContent>\n        </Card>\n    );\n};\n\nInfoCard.propTypes = {\n    /** card header info */\n    cardMeta: PropTypes.shape({\n        /** card title */\n        title: PropTypes.string.isRequired,\n        /** optional subtitle */\n        subTitle: PropTypes.string,\n    }),\n    /** optional card action component (usually some button) */\n    cardAction: PropTypes.node,\n    /** Card body content */\n    cardBody: PropTypes.node,\n};\n\nexport default InfoCard;\n","import React from \"react\";\n\n// material-ui\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\n// react\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n}));\n\n/**\n * Text with an icon to the right of it.\n */\nconst IconText = ({ text, icon, link, className, ...props }) => {\n    const classes = useStyles();\n    return (\n        <div className={`${classes.root} ${className}`} {...props}>\n            {icon}\n            <Typography href={link ? link : null} variant=\"body2\" marginLeft>\n                {text}\n            </Typography>\n        </div>\n    );\n};\n\nexport default IconText;\n\nIconText.propTypes = {\n    /** The text shown */\n    text: PropTypes.string.isRequired,\n    /** The icon component to be displayed */\n    icon: PropTypes.node.isRequired,\n    /** Optional link if text is selected */\n    link: PropTypes.string,\n    /** additional styling */\n    className: PropTypes.string,\n};\n","export function formatLockfile(lockfile) {\n    return Object.entries(lockfile.requirements_locked.default).map(\n        ([key, value]) => {\n            return {\n                name: key,\n                version: value.version.replace(\"==\", \"\"),\n                index: \"https://pypi.org/simple\", //TODO no hard code\n                os_name: lockfile.runtime_environment.operating_system.name,\n                os_version:\n                    lockfile.runtime_environment.operating_system.version,\n                python_version: lockfile.runtime_environment.python_version,\n            };\n        },\n    );\n}\n","export default function timeSince(date) {\n    var seconds = Math.floor((new Date() - date) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" year\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" month\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" day\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" hour\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" minute\" + (num !== 1 ? \"s\" : \"\");\n    }\n    const num = Math.floor(seconds);\n    return num + \" second\" + (num !== 1 ? \"s\" : \"\");\n}\n","import timeSince from \"utils/timeSince\";\n\n/**\n * Given either a date and time, calculated time since that date.\n * This is used to calculate how long ago an Advisor document was generated or has been generating.\n * It is specific to the document formatting\n *\n * @param {string} finished_at - for when the advise document is completed\n * @param {string} started_at - the time at which the document was started (is preceded by finished at)\n * @param {string} datetime - fallback to datetime\n * @returns {string} - English version of date\n */\nexport const calcTime = (finished_at, started_at, datetime) => {\n    // if status says finished\n    if (finished_at) {\n        return \"Advise finished \" + timeSince(new Date(finished_at)) + \" ago.\";\n    }\n    // if status is pending\n    else if (started_at) {\n        return \"Advise started \" + timeSince(new Date(started_at)) + \" ago.\";\n    }\n    // if status is nulled so use metadata end date\n    else if (datetime) {\n        return (\n            \"Advise finished \" + timeSince(new Date(datetime + \"Z\")) + \" ago.\"\n        );\n    } else {\n        return \"Time started/finished not available\";\n    }\n};\n","const whyRemoved = (start, packages) => {\n    const visited = new Map();\n    const visitList = [];\n\n    visitList.push(start);\n\n    const reasonNodes = [];\n\n    while (visitList.length !== 0) {\n        const node = visitList.pop();\n        if (node && !visited.has(node)) {\n            visited.set(node);\n\n            if (node.value.change === \"version\") {\n                reasonNodes.push(node);\n            } else {\n                node.parents.forEach(adj => {\n                    if (adj === \"*App\") {\n                        if (node.key !== start.key) {\n                            reasonNodes.push(node);\n                        }\n                        return;\n                    }\n                    visitList.push(packages.get(adj));\n                });\n            }\n        }\n    }\n\n    return reasonNodes.map(node => {\n        const reason =\n            node.value.change === \"version\"\n                ? \" had its version changed to \" +\n                  node.value.version +\n                  \" from \" +\n                  node.value.oldVersion +\n                  \". Version \" +\n                  node.value.oldVersion +\n                  \" of \" +\n                  node.key +\n                  \" included package \" +\n                  start.value.label +\n                  \" as a dependency, where version \" +\n                  node.value.version +\n                  \" does not. \"\n                : \" did not have any dependents and was removed by the Thoth resolver.\";\n        return {\n            package: node.key,\n            reason: reason,\n        };\n    });\n};\n\nexport const discoverPackageChanges = (nodes, justifications) => {\n    if (!nodes || !justifications) {\n        return;\n    }\n\n    const justifiedPackages = new Map();\n    justifications.forEach(justification => {\n        if (justification.package_name) {\n            if (justifiedPackages.has(justification.package_name)) {\n                justifiedPackages.set(justification.package_name, [\n                    ...justifiedPackages.get(justification.package_name),\n                    justification,\n                ]);\n            } else {\n                justifiedPackages.set(justification.package_name, [\n                    justification,\n                ]);\n            }\n        }\n    });\n\n    nodes.forEach(node => {\n        let justification = {\n            package: node.key,\n        };\n\n        if (node.value.change === \"removed\") {\n            // set header\n            justification.header = `${node.value.label} was ${\n                node.value.depth === 0 ? \"directly\" : \"indirectly\"\n            } removed by Thoth resolver.`;\n\n            // set reasons for removal\n            justification.reasons = whyRemoved(node, nodes);\n\n            // if no reasons for removal\n            if (justification.reasons.length === 0) {\n                justification.header = `${node.value.label} was removed for an unknown reason. The package does not have dependents in the Pipfile.lock.`;\n            }\n        }\n        // if added\n        else if (node.value.change === \"added\") {\n            justification.header = `${node.value.label} was added to the Pipfile.lock by Thoth resolver.`;\n        }\n\n        // if added\n        else if (node.value.change === \"version\") {\n            justification.header = `${node.key} had its version changed from ${node.value.oldVersion} to ${node.value.version}.`;\n        }\n\n        // if unchanged\n        else {\n            justification.header =\n                \"Thoth resolver did not remove or change package \" +\n                node.value.label +\n                \".\";\n        }\n\n        // check if there is a justification for change\n        if (justifiedPackages.has(node.key)) {\n            const reasons = justifiedPackages.get(node.key);\n            justification = {\n                ...justification,\n                thoth: reasons,\n            };\n        }\n\n        node.value.justifications = justification;\n    }, []);\n};\n","import React from \"react\";\nimport { Button, Alert } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A custom alert card.\n */\nconst CustomAlert = ({ info, ...props }) => {\n    return (\n        <Alert\n            className={props?.className}\n            action={\n                <Button color=\"inherit\" size=\"small\" href={info?.link}>\n                    DETAILS\n                </Button>\n            }\n            severity={info.type.toLowerCase()}\n        >\n            {info?.message}\n        </Alert>\n    );\n};\n\nCustomAlert.propTypes = {\n    /** The alert content. */\n    info: PropTypes.shape({\n        /** Link to navigate to if alert is actioned on. */\n        link: PropTypes.string.isRequired,\n        /** Text displayed in the alert. */\n        message: PropTypes.string.isRequired,\n        /** Severity (color) of alert: `[\"ERROR\", \"WARNING\", \"INFO\", \"SUCCESS\"]`. */\n        type: PropTypes.oneOf([\"ERROR\", \"WARNING\", \"INFO\", \"SUCCESS\"])\n            .isRequired,\n    }).isRequired,\n    /** The `material-ui` styling classname */\n    className: PropTypes.string,\n};\n\nexport default CustomAlert;\n","// React\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Chip, Button, Collapse } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport FeedRoundedIcon from \"@mui/icons-material/FeedRounded\";\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport { calcTime } from \"../../utils\";\n\n// local\nimport CustomAlert from \"./CustomAlert\";\nimport PropTypes from \"prop-types\";\n\n// component styling\n\nconst useStyles = makeStyles(theme => ({\n    titleRow: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: theme.spacing(1),\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(2),\n    },\n    marginRight: {\n        marginRight: theme.spacing(2),\n    },\n    linksRow: {\n        display: \"flex\",\n        marginBottom: theme.spacing(3),\n        alignItems: \"center\",\n    },\n    alert: {\n        width: \"100%\",\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Displays basic Advise document information and\n * displays any errors, info, or warnings that came up\n * in the document generation.\n */\nexport const AdviseHeader = ({ adviseDocument, logs }) => {\n    const classes = useStyles();\n    const [expandAlerts, setExpandAlerts] = React.useState(false);\n    const [showLogs, setShowLogs] = React.useState(false);\n    const [selectedLine, setSelectedLine] = React.useState();\n\n    // get status of the report\n    const [statusText, statusColor] = useMemo(() => {\n        // if report is done\n        if (adviseDocument?.result?.report) {\n            if (adviseDocument.result.report.ERROR) {\n                return [\"ERROR\", \"error\"];\n            } else {\n                return [\"COMPLETE\", \"success\"];\n            }\n        } else if (adviseDocument?.result?.error) {\n            return [\"ERROR\", \"error\"];\n        }\n        // if report is not done\n        else if (adviseDocument?.status?.state) {\n            return [adviseDocument.status.state.toUpperCase(), \"info\"];\n        } else {\n            return [\"UNKNOWN\", undefined];\n        }\n    }, [adviseDocument]);\n\n    // get alerts from report\n    const alerts = useMemo(() => {\n        if (adviseDocument?.result?.report) {\n            return adviseDocument?.result?.report?.stack_info\n                ? adviseDocument?.result?.report.stack_info.filter(alert => {\n                      return alert.type === \"ERROR\";\n                  })\n                : null;\n        }\n    }, [adviseDocument]);\n\n    return (\n        <div>\n            <Typography variant=\"h4\">\n                <b>\n                    {adviseDocument?.metadata?.document_id ??\n                        adviseDocument?.parameters?.analysis_id}\n                </b>\n            </Typography>\n            <div className={classes.linksRow}>\n                <Chip label={statusText} color={statusColor} />\n                <IconText\n                    className={classes.marginLeft}\n                    text={calcTime(\n                        adviseDocument?.status?.finished_at,\n                        adviseDocument?.status?.started_at,\n                        adviseDocument?.metadata?.datetime,\n                    )}\n                    icon={<AccessTimeIcon />}\n                />\n                <Button\n                    sx={{ marginLeft: 2 }}\n                    onClick={() => setShowLogs(!showLogs)}\n                >\n                    <IconText text=\"Logs\" icon={<FeedRoundedIcon />} />\n                </Button>\n            </div>\n            <Typography variant={\"subtitle2\"}>\n                {adviseDocument?.result?.report?.ERROR ??\n                    adviseDocument?.error ??\n                    adviseDocument?.result?.error_msg}\n            </Typography>\n            {alerts?.length > 0 ? (\n                <div>\n                    <CustomAlert info={alerts[0]} />\n                    <Collapse in={expandAlerts} timeout=\"auto\" unmountOnExit>\n                        {alerts?.slice(1).map((info, i) => {\n                            return (\n                                <CustomAlert\n                                    key={i}\n                                    info={info}\n                                    className={classes.alert}\n                                />\n                            );\n                        })}\n                    </Collapse>\n\n                    <Button\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() => setExpandAlerts(!expandAlerts)}\n                    >\n                        {alerts?.length > 1\n                            ? expandAlerts\n                                ? \"LESS\"\n                                : \"MORE\"\n                            : null}\n                    </Button>\n                </div>\n            ) : null}\n\n            <Collapse in={showLogs}>\n                {logs?.split(\"\\n\").map((line, i) => {\n                    return (\n                        <Typography\n                            key={i}\n                            noWrap={selectedLine !== i}\n                            onClick={() =>\n                                setSelectedLine(\n                                    selectedLine === i ? undefined : i,\n                                )\n                            }\n                            variant=\"body2\"\n                            sx={{\n                                backgroundColor:\n                                    selectedLine === i\n                                        ? \"lightyellow\"\n                                        : i % 2 === 0\n                                        ? \"lightgray\"\n                                        : \"unset\",\n                            }}\n                        >\n                            {line}\n                        </Typography>\n                    );\n                }) ?? \"Advisor log is not available.\"}\n            </Collapse>\n\n            {statusText === \"COMPLETE\" ? (\n                <Typography variant=\"body1\" sx={{ color: \"text.secondary\" }}>\n                    Thoth has added and removed packages from the original\n                    Pipfile.lock, resulting in a <i>new</i> Pipfile.lock. Switch\n                    between the new and old Python environments to see the\n                    differences.\n                </Typography>\n            ) : null}\n        </div>\n    );\n};\n\nAdviseHeader.propTypes = {\n    /** the Advise document id*/\n    adviseDocument: PropTypes.object.isRequired,\n    logs: PropTypes.string,\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { withStyles, makeStyles } from \"@material-ui/styles\";\nimport { LinearProgress, Typography, Grid } from \"@material-ui/core\";\n\nconst CustomLinearProgress = withStyles(theme => ({\n    root: {\n        height: 10,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor:\n            theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"#1a90ff\",\n    },\n}))(LinearProgress);\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(6,1fr)\",\n        alignItems: \"center\",\n        gridGap: theme.spacing(1),\n    },\n    label: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n    value: {\n        textAlign: \"end\",\n    },\n}));\n\n/**\n * A horizontal bar for showing a percent of a total.\n */\nconst ProgressBar = ({ value, total, label, action }) => {\n    const classes = useStyles();\n    return (\n        <Grid container spacing={1} alignItems=\"center\">\n            <Grid item xs={5}>\n                <Typography variant=\"body2\" className={classes.label}>\n                    {label}\n                </Typography>\n            </Grid>\n            <Grid item xs={1.75}>\n                <Typography className={classes.value} variant=\"body2\">\n                    {value}\n                </Typography>\n            </Grid>\n            <Grid item xs>\n                <CustomLinearProgress\n                    variant=\"determinate\"\n                    value={total > 0 ? (value / total) * 100 : 0}\n                />\n            </Grid>\n            <Grid item xs={1}>\n                <div>{action ?? null}</div>\n            </Grid>\n        </Grid>\n    );\n};\n\nProgressBar.propTypes = {\n    /** the amount (numerator) for the bar */\n    value: PropTypes.number.isRequired,\n    /** the total (denominator) for the bar */\n    total: PropTypes.number.isRequired,\n    /** optional label */\n    label: PropTypes.string,\n    /** action used on card */\n    action: PropTypes.node,\n};\n\nexport default ProgressBar;\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { Typography, Divider, Skeleton, Box } from \"@material-ui/core\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\n/**\n * A metric card that aggregates changes between the initial dependency\n * graph and the Thoth made dependency graph.\n */\nexport const AdviseMetric = ({ metric }) => {\n    const total =\n        metric?.added + metric?.removed + metric?.version + metric?.unchanged;\n    const justTotal = Object.values(metric?.justification ?? {}).reduce(\n        (a, b) => a + b,\n        0,\n    );\n\n    if (!metric) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <Typography variant=\"body2\" gutterBottom>\n                {metric?.build}\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom mt={2}>\n                What Thoth Changed\n            </Typography>\n            <Divider mb={1} />\n            <ProgressBar\n                value={metric?.added ?? 0}\n                total={total}\n                label={\"Added Packages\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={metric?.removed ?? 0}\n                total={total}\n                label={\"Removed Packages\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={metric?.version ?? 0}\n                total={total}\n                label={\"Version Changes\"}\n            />\n            <Typography variant=\"h6\" mt={3} gutterBottom>\n                Justification Counts\n            </Typography>\n            <Divider mb={1} />\n            {Object.entries(metric?.justification ?? {}).map(([key, value]) => {\n                return (\n                    <ProgressBar\n                        key={key}\n                        value={value}\n                        total={justTotal}\n                        label={key}\n                        mb={1}\n                    />\n                );\n            })}\n        </>\n    );\n};\n\nAdviseMetric.propTypes = {\n    /** The metric object info of aggregated data */\n    metric: PropTypes.shape({\n        /** The number of new dependencies */\n        added: PropTypes.number,\n        /** The number of removed dependencies */\n        removed: PropTypes.number,\n        /** The number of dependencies whose version was changed*/\n        version: PropTypes.number,\n        /** The number of dependencies that did not change*/\n        unchanged: PropTypes.number,\n        /** The number Thoth justification (warnings) that were produced */\n        justification: PropTypes.object,\n        /** which build is being displayed (new or old) */\n        build: PropTypes.string,\n    }),\n};\n","import React from \"react\";\n\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A button group for toggling between old and new dependency graphs.\n * It takes two parameters, a callback function and a state variable.\n */\nexport const CustomCardAction = ({ value, onChange }) => {\n    return (\n        <ToggleButtonGroup\n            value={value}\n            exclusive\n            size=\"small\"\n            onChange={onChange}\n        >\n            <ToggleButton value=\"oldGraph\">Old</ToggleButton>\n            <ToggleButton value=\"newGraph\">New</ToggleButton>\n        </ToggleButtonGroup>\n    );\n};\n\nCustomCardAction.propTypes = {\n    /** The state variable the buttons use to control the active value */\n    value: PropTypes.string.isRequired,\n    /** The callback function that runs when a button is changed */\n    onChange: PropTypes.func.isRequired,\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\n// material-ui\nimport { TransitionGroup } from \"react-transition-group\";\n\nimport {\n    Typography,\n    Divider,\n    List,\n    ListItem,\n    ListItemText,\n    Grid,\n    Collapse,\n    Box,\n    Skeleton,\n} from \"@material-ui/core\";\n\n/**\n * A metric card that displays direct, indirect, and root packages of a dependency graph.\n */\nexport const DependenciesMetric = ({ all, roots }) => {\n    const totalDependencies =\n        (all?.direct ?? 0) + (all?.indirect ?? 0) + (all?.roots ?? 0);\n\n    if (!all || !roots) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                All Packages\n            </Typography>\n            <Divider mb={1} />\n            <ProgressBar\n                value={all?.roots ?? 0}\n                total={totalDependencies}\n                label={\"Root\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={all?.direct ?? 0}\n                total={totalDependencies}\n                label={\"Direct\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={all?.indirect ?? 0}\n                total={totalDependencies}\n                label={\"Indirect\"}\n            />\n            <Typography variant=\"h6\" gutterBottom mt={2}>\n                Root Packages\n            </Typography>\n            <Divider mb={1} />\n            <List component=\"nav\">\n                <TransitionGroup>\n                    {Object.entries(roots ?? {})?.map(([key]) => {\n                        const t =\n                            (roots[key].direct ?? 0) +\n                            (roots[key].indirect ?? 0);\n                        return (\n                            <Collapse key={key}>\n                                <div>\n                                    <ListItem>\n                                        <Grid container alignItems=\"center\">\n                                            <Grid item xs>\n                                                <ListItemText primary={key} />\n                                            </Grid>\n                                            <Grid item xs>\n                                                <Grid\n                                                    container\n                                                    direction=\"column\"\n                                                >\n                                                    <Grid item xs>\n                                                        <ProgressBar\n                                                            value={\n                                                                roots?.[key]\n                                                                    ?.direct ??\n                                                                0\n                                                            }\n                                                            total={t}\n                                                            label={\"Direct\"}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs>\n                                                        <ProgressBar\n                                                            value={\n                                                                roots?.[key]\n                                                                    ?.indirect ??\n                                                                0\n                                                            }\n                                                            total={t}\n                                                            label={\"Indirect\"}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </ListItem>\n                                    <Divider variant={\"middle\"} mb={1} />\n                                </div>\n                            </Collapse>\n                        );\n                    })}\n                </TransitionGroup>\n            </List>\n        </>\n    );\n};\n\nDependenciesMetric.propTypes = {\n    /** summary object of all roots aggregated */\n    all: PropTypes.shape({\n        /** number of dependencies directly related to root packages */\n        direct: PropTypes.number,\n        /** number of dependencies directly or indirectly related to the direct packages*/\n        indirect: PropTypes.number,\n        /** number of dependencies that have no dependents*/\n        roots: PropTypes.number,\n    }),\n    /** an object of key (package name) value pairs of specific roots with direct and indirect parameters for each value */\n    roots: PropTypes.objectOf(\n        PropTypes.shape({\n            /** roots own direct packages */\n            direct: PropTypes.number,\n            /** roots own indirect packages */\n            indirect: PropTypes.number,\n        }),\n    ),\n};\n","import React from \"react\";\n\n// material-ui\nimport { Divider, Collapse, Chip, Grid, Box } from \"@material-ui/core\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\nimport HelpOutlineRoundedIcon from \"@material-ui/icons/HelpOutlineRounded\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A custom list item displaying the number of packages under a particular license.\n */\nconst LicenseGroup = ({ name, metadata, packages, totalLicenses }) => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <Grid container>\n            <Grid item xs={1}>\n                {metadata?.isOsiApproved === null ? (\n                    <HelpOutlineRoundedIcon />\n                ) : metadata?.isOsiApproved ? (\n                    <CheckRoundedIcon />\n                ) : null}\n            </Grid>\n            <Grid item xs>\n                <Box onClick={() => setOpen(!open)}>\n                    <ProgressBar\n                        key={name}\n                        value={Object.keys(packages).length ?? 0}\n                        total={totalLicenses}\n                        label={name}\n                        action={open ? <ExpandLess /> : <ExpandMore />}\n                    />\n                </Box>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <Box my={1}>\n                        {Object.entries(packages)\n                            .sort((a, b) => {\n                                return a[1] - b[1];\n                            })\n                            .map(([k, v]) => {\n                                return (\n                                    <Chip\n                                        key={k}\n                                        sx={{ margin: 0.5 }}\n                                        color={\n                                            v.depth === 0\n                                                ? \"primary\"\n                                                : v.depth === 1\n                                                ? \"secondary\"\n                                                : \"default\"\n                                        }\n                                        label={k}\n                                    />\n                                );\n                            })}\n                    </Box>\n                    <Divider />\n                </Collapse>\n            </Grid>\n        </Grid>\n    );\n};\n\nLicenseGroup.propTypes = {\n    /** The license name */\n    name: PropTypes.string.isRequired,\n    /** License specific infomration */\n    metadata: PropTypes.shape({\n        /** If license is approved by OSI standards */\n        isOsiApproved: PropTypes.bool,\n    }),\n    /** The packages that use this license as an object */\n    packages: PropTypes.objectOf(\n        PropTypes.shape({\n            depth: PropTypes.number.isRequired,\n        }),\n    ).isRequired,\n    /** The total number of packages that have licenses. (used to add a total to the metric bar) */\n    totalLicenses: PropTypes.number.isRequired,\n};\n\nexport default LicenseGroup;\n","// react\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport {\n    Typography,\n    Divider,\n    Collapse,\n    Button,\n    Box,\n    Grid,\n    Skeleton,\n} from \"@material-ui/core\";\nimport { TransitionGroup } from \"react-transition-group\";\n\n// local\nimport LicenseGroup from \"./LicenseGroup\";\n\n/**\n * A metric card that visualizes license data for all packages in the graph.\n */\nexport const LicenseMetric = ({ metric }) => {\n    const [more, setMore] = React.useState(false);\n\n    const licenses = useMemo(\n        () =>\n            Object.entries(metric ?? {}).sort((a, b) => {\n                return Object.keys(b[1]).length - Object.keys(a[1]).length;\n            }),\n        [metric],\n    );\n\n    const totalLicenses = useMemo(\n        () =>\n            Object.entries(metric ?? {}).reduce((sum, [, val]) => {\n                return sum + Object.keys(val.packages).length;\n            }, 0),\n        [metric],\n    );\n\n    if (!metric) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={1}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        OSI\n                    </Typography>\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Dependency Licenses\n                    </Typography>\n                </Grid>\n            </Grid>\n\n            <Divider />\n            <TransitionGroup>\n                {licenses?.slice(0, 10).map(([key, value]) => {\n                    return (\n                        <Collapse key={key}>\n                            <LicenseGroup\n                                name={key}\n                                metadata={value.metadata}\n                                packages={value.packages}\n                                totalLicenses={totalLicenses}\n                            />\n                        </Collapse>\n                    );\n                })}\n            </TransitionGroup>\n\n            <Collapse in={more} timeout=\"auto\" unmountOnExit>\n                <TransitionGroup>\n                    {licenses.slice(10).map(([key, value]) => {\n                        return (\n                            <Collapse key={key}>\n                                <LicenseGroup\n                                    name={key}\n                                    metadata={value.metadata}\n                                    packages={value.packages}\n                                    totalLicenses={totalLicenses}\n                                />\n                            </Collapse>\n                        );\n                    })}\n                </TransitionGroup>\n            </Collapse>\n            <Box textAlign=\"center\">\n                <Button onClick={() => setMore(!more)} color=\"primary\">\n                    {more ? \"Less\" : \"More\"}\n                </Button>\n            </Box>\n        </div>\n    );\n};\n\nLicenseMetric.propTypes = {\n    /** Key value pairs of license names (keys) and license information (values).*/\n    metric: PropTypes.objectOf(\n        PropTypes.shape({\n            metadata: PropTypes.object,\n            packages: PropTypes.object.isRequired,\n        }),\n    ),\n};\n","function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n","import React from \"react\";\n\nimport {\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Box,\n    TableCell,\n} from \"@material-ui/core\";\n\nimport { visuallyHidden } from \"@material-ui/utils\";\n\nimport PropTypes from \"prop-types\";\n\nconst headCells = [\n    {\n        id: \"name\",\n        numeric: false,\n        label: \"Package\",\n    },\n    {\n        id: \"depth\",\n        numeric: true,\n        label: \"Depth\",\n    },\n    {\n        id: \"license\",\n        numeric: false,\n        label: \"License\",\n    },\n    {\n        id: \"dependencies\",\n        numeric: true,\n        label: \"Direct Dependencies\",\n    },\n];\n\n/**\n * A specific custom table header for packages.\n * It handles sorting individual columns.\n */\nfunction EnhancedTableHead({ order, orderBy, onRequestSort }) {\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding=\"normal\"\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    /** the function used to sort an individual column */\n    onRequestSort: PropTypes.func.isRequired,\n    /** the order in which the column is sorted on*/\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    /** The column in which to order the table by */\n    orderBy: PropTypes.string.isRequired,\n};\n\nexport default EnhancedTableHead;\n","/**\n * Graph node/vertex that hold adjacencies nodes\n * For performance, uses a HashSet instead of array for adjacents.\n */\nexport class Node {\n    constructor(key, value) {\n        this.adjacents = new Set(); // adjacency list\n        this.key = key; // key\n        this.value = value;\n    }\n\n    /**\n     * Add node to adjacency list\n     * Runtime: O(1)\n     * @param {Node} node\n     */\n    addAdjacent(node) {\n        this.adjacents.add(node);\n    }\n\n    /**\n     * Check if a Node is adjacent to other\n     * Runtime: O(1)\n     * @param {Node} node\n     */\n    isAdjacent(node) {\n        return this.adjacents.has(node);\n    }\n\n    /**\n     * Get all adjacent nodes\n     */\n    getAdjacents() {\n        return Array.from(this.adjacents);\n    }\n}\n","// react\nimport React from \"react\";\n\nimport { Typography, Grid } from \"@material-ui/core\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport PropTypes from \"prop-types\";\nimport { Node } from \"utils/Node\";\n\n/**\n * Graph hover model appears when you hover over a node on the graph.\n */\nconst Popup = ({ node }) => {\n    return (\n        <div>\n            <Grid container alignItems=\"center\">\n                <Grid item xs={6}>\n                    <Typography variant=\"h6\">\n                        <b>{node.value.id}</b>\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography ml={2} variant=\"body1\">\n                        v{node.value.version ?? \"NaN\"}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography gutterBottom variant=\"body2\">\n                {node.value?.metadata?.Summary ?? \"NaN\"}\n            </Typography>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <IconText\n                        text={node.value?.metadata?.License ?? \"NaN\"}\n                        icon={<GavelIcon />}\n                    />\n                </Grid>\n                <Grid item>\n                    <IconText\n                        ml={2}\n                        text={\n                            node.value?.latestVersion\n                                ? \"Latest version is installed\"\n                                : \"Installed version is NOT the latest.\"\n                        }\n                        icon={<BookmarkIcon />}\n                    />\n                </Grid>\n            </Grid>\n            <Typography variant=\"body2\" mt={2}>\n                {node.value?.justifications?.header}\n            </Typography>\n        </div>\n    );\n};\n\nPopup.propTypes = {\n    node: PropTypes.objectOf(Node),\n};\n\nexport default Popup;\n","import { Node } from \"utils/Node\";\n\n/**\n * Graph data structure implemented with an adjacent list\n */\nexport class Graph {\n    constructor() {\n        this.nodes = new Map();\n    }\n\n    /**\n     * Add a node to the graph.\n     */\n    addVertex(key, value) {\n        if (this.nodes.has(key)) {\n            return this.nodes.get(key);\n        }\n\n        const vertex = new Node(key, value);\n        this.nodes.set(key, vertex);\n        return vertex;\n    }\n\n    /**\n     * Create a connection between the source node and the destination node.\n     * If the nodes don't exist, then it will make them on the fly.\n     */\n    addEdge(source, destination) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n\n        sourceNode.addAdjacent(destinationNode);\n\n        return [sourceNode, destinationNode];\n    }\n\n    /**\n     * True if two nodes are adjacent.\n     */\n    areAdjacents(source, destination) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n\n        if (sourceNode && destinationNode) {\n            return sourceNode.isAdjacent(destinationNode);\n        }\n\n        return false;\n    }\n\n    /**\n     * Generic graph search where we can pass a bfs or dfs\n     */\n    *graphSearch(first, type = \"bfs\") {\n        const visited = new Map();\n        const visitList = [];\n\n        visitList.push(first);\n\n        while (visitList.length !== 0) {\n            const node = type === \"dfs\" ? visitList.pop() : visitList.shift();\n            if (node && !visited.has(node)) {\n                yield node;\n                visited.set(node);\n                node.getAdjacents().forEach(adj => visitList.push(adj));\n            }\n        }\n    }\n\n    /**\n     * Find a path between source and destination\n     * It might not be the optimal path\n     */\n    findPath(source, destination, path = new Map()) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n        const newPath = new Map(path);\n\n        if (!destinationNode || !sourceNode) return [];\n\n        newPath.set(sourceNode);\n\n        if (source === destination) {\n            return Array.from(newPath.keys());\n        }\n\n        // eslint-disable-next-line no-restricted-syntax\n        for (const node of sourceNode.getAdjacents()) {\n            if (!newPath.has(node)) {\n                const nextPath = this.findPath(\n                    node.value,\n                    destination,\n                    newPath,\n                );\n                if (nextPath.length) {\n                    return nextPath;\n                }\n            }\n        }\n\n        return [];\n    }\n\n    findAllNodesOnAllPaths(source, destination, visited = new Map()) {\n        const visitList = [];\n\n        visitList.push(source);\n\n        while (visitList.length !== 0) {\n            const node = visitList.pop();\n            if (node.key === destination) {\n                continue;\n            }\n            if (node && !visited.has(node.key)) {\n                visited.set(node.key, node);\n                node.parents.forEach(parent =>\n                    visitList.push(this.nodes.get(parent)),\n                );\n            }\n        }\n\n        return visited;\n    }\n\n    /**\n     * Find all paths from source to destination\n     */\n    findAllPaths(source, destination, path = new Map()) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n        const newPath = new Map(path);\n\n        if (!destinationNode || !sourceNode) return [];\n\n        newPath.set(sourceNode);\n\n        if (source === destination) {\n            return [Array.from(newPath.keys())];\n        }\n\n        const paths = [];\n        sourceNode.getAdjacents().forEach(node => {\n            if (!newPath.has(node)) {\n                const nextPaths = this.findAllPaths(\n                    node.value.id,\n                    destination,\n                    newPath,\n                );\n                nextPaths.forEach(nextPath => {\n                    paths.push(nextPath);\n                });\n            }\n        });\n        return paths;\n    }\n}\n","// react\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// utils and configs\nimport { options } from \"config\";\n\n// vis-network\nimport { Network, DataSet } from \"vis-network/standalone\";\n\n// material ui\nimport { makeStyles } from \"@material-ui/styles\";\n\n// local\nimport Popup from \"../Popup\";\nimport { SelectedPackageContext } from \"../../../routes/AdviseDetails\";\nimport PropTypes from \"prop-types\";\nimport { Graph } from \"utils/Graph\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n    },\n    canvas: {\n        flex: \"1 1 auto\",\n        height: \"50vh\",\n    },\n}));\n\n/**\n * Renders a network graph visualization using `vis-network`.\n */\nconst NetworkGraph = ({ mergedGraph, ...props }) => {\n    const classes = useStyles();\n    const visJsRef = useRef(null);\n    const { selected } = useContext(SelectedPackageContext);\n\n    // create the graph\n    useEffect(() => {\n        if (!selected || !mergedGraph) {\n            return;\n        }\n\n        const selectedNode = mergedGraph.nodes.get(selected);\n\n        let nodes = mergedGraph.findAllNodesOnAllPaths(selectedNode, \"*App\");\n\n        nodes.set(\"*App\", mergedGraph.nodes.get(\"*App\"));\n\n        // convert to vis graph format\n        const convertedNodes = new DataSet();\n        nodes.forEach(value => {\n            // popup element\n            const popup = document.createElement(\"div\");\n            ReactDOM.render(<Popup node={value} />, popup);\n\n            // default colors\n            let color = value.value.color ?? options.nodes.color;\n            let font = undefined;\n\n            // if node is root\n            if (value.key === \"*App\") {\n                color = \"#4fc1ea\";\n                font = { color: \"#4fc1ea\", strokeWidth: 3, size: 20 };\n            }\n            // if selected node\n            else if (value.key === selectedNode.key) {\n                color = \"#f39200\";\n            }\n\n            convertedNodes.add({\n                ...value.value,\n                color: color,\n                title:\n                    value.key === selectedNode.key || value.key === \"*App\"\n                        ? undefined\n                        : popup,\n                font: font,\n            });\n        });\n        const visData = {\n            nodes: convertedNodes,\n            edges: new DataSet(mergedGraph.visEdges),\n        };\n\n        const network =\n            visJsRef.current && new Network(visJsRef.current, visData, options);\n\n        // change curser when hovering and grabbing\n        // Get the canvas HTML element\n        var networkCanvas = document\n            .getElementById(\"mynetwork\")\n            .getElementsByTagName(\"canvas\")[0];\n\n        // changes the curser graphic depedning on where and what the mouse is doing\n        function changeCursor(newCursorStyle) {\n            networkCanvas.style.cursor = newCursorStyle;\n        }\n        network.on(\"hoverNode\", function () {\n            changeCursor(\"grab\");\n        });\n        network.on(\"blurNode\", function () {\n            changeCursor(\"default\");\n        });\n        network.on(\"dragStart\", function () {\n            changeCursor(\"grabbing\");\n        });\n        network.on(\"dragging\", function () {\n            changeCursor(\"grabbing\");\n        });\n        network.on(\"dragEnd\", function () {\n            changeCursor(\"grab\");\n        });\n\n        // fix (stick in place) node when done dragging\n        network.on(\"dragEnd\", function (params) {\n            if (\n                params.nodes.length !== 0 &&\n                !network.isCluster(params.nodes[0])\n            ) {\n                network.editNode(params.nodes[0]);\n            }\n        });\n\n        // hover over node\n        network.on(\"dragEnd\", function (params) {\n            if (\n                params.nodes.length !== 0 &&\n                !network.isCluster(params.nodes[0])\n            ) {\n                network.editNode(params.nodes[0]);\n            }\n        });\n    }, [selected, mergedGraph]);\n\n    return (\n        <div className={`${classes.root} ${props.className}`}>\n            <div ref={visJsRef} id=\"mynetwork\" className={classes.canvas} />\n        </div>\n    );\n};\n\nNetworkGraph.propTypes = {\n    mergedGraph: PropTypes.objectOf(Graph),\n    className: PropTypes.any,\n};\n\nexport default NetworkGraph;\n","// React\nimport React, { useContext, useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Grid, Box, Paper, Link, Button } from \"@material-ui/core\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport NetworkGraphView from \"../NetworkGraphView\";\n\n// redux\nimport { SelectedPackageContext } from \"../../../routes/AdviseDetails\";\nimport PropTypes from \"prop-types\";\nimport { Graph } from \"utils/Graph\";\n\n/**\n * Renders the selected package context variable's data. It will preform\n * a search of the list of packages using the selected package variable.\n */\nexport const SelectedPackage = ({ mergedGraph }) => {\n    const { selected, setSelected } = useContext(SelectedPackageContext);\n\n    const selectedPackage = mergedGraph.nodes.get(selected);\n\n    const dependents = { removed: [], added: [], version: [], unchanged: [] };\n    [...(selectedPackage?.parents ?? [])]\n        .filter(p => p !== \"*App\")\n        .forEach(node => {\n            dependents[mergedGraph.nodes.get(node).value.change].push(node);\n        });\n\n    const justifications = useMemo(() => {\n        const justs = {};\n        selectedPackage?.value?.justifications?.thoth?.forEach(just => {\n            justs[just.type] = [...(justs[just.type] ?? []), just];\n        });\n\n        return justs;\n    }, [selectedPackage]);\n\n    return (\n        <Box>\n            <Paper sx={{ padding: 2 }}>\n                <Grid container alignItems=\"center\" mb={1}>\n                    <Grid item>\n                        <Typography variant=\"h3\">\n                            <b>{selectedPackage?.value?.metadata?.Name}</b>\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography ml={2} variant=\"h6\">\n                            v\n                            {selectedPackage?.value?.metadata?.Version ?? \"NaN\"}\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <Typography gutterBottom variant=\"body1\">\n                    {selectedPackage?.value?.metadata?.Summary ?? \"NaN\"}\n                </Typography>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <IconText\n                            text={\n                                selectedPackage?.value?.metadata?.License ??\n                                \"NaN\"\n                            }\n                            icon={<GavelIcon />}\n                        />\n                    </Grid>\n                </Grid>\n            </Paper>\n\n            <Paper sx={{ padding: 2, marginTop: 2 }}>\n                <Typography variant=\"h5\">Thoth Justifications</Typography>\n                <Typography variant=\"body1\" mt={2}>\n                    {selectedPackage?.value?.justifications?.header}\n                </Typography>\n                {selectedPackage?.value?.justifications?.reasons?.length ? (\n                    <ul>\n                        {selectedPackage?.value?.justifications?.reasons.map(\n                            (reason, i) => {\n                                return (\n                                    <li key={i + reason.reason}>\n                                        <Typography variant=\"body1\" mt={2}>\n                                            <Link\n                                                underline=\"hover\"\n                                                onClick={() =>\n                                                    setSelected(reason.package)\n                                                }\n                                            >\n                                                {reason.package}\n                                            </Link>\n                                            {reason.reason}\n                                        </Typography>\n                                    </li>\n                                );\n                            },\n                        )}\n                    </ul>\n                ) : null}\n\n                {Object.entries(justifications).map(([type, reasons]) => {\n                    return (\n                        <React.Fragment key={type}>\n                            <Typography variant=\"h6\" mt={2}>\n                                {type} Justifications\n                            </Typography>\n                            {reasons.map((reason, i) => {\n                                return (\n                                    <Grid\n                                        container\n                                        alignItems=\"center\"\n                                        ml={3}\n                                        key={reason.message + i}\n                                    >\n                                        <Grid item xs={10}>\n                                            <Typography variant=\"body1\" mt={1}>\n                                                {reason.message}\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body2\"\n                                                ml={3}\n                                                mt={0.5}\n                                            >\n                                                {reason.advisory}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Button href={reason.link}>\n                                                READ MORE\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                );\n                            })}\n                        </React.Fragment>\n                    );\n                })}\n            </Paper>\n\n            <Paper sx={{ padding: 2, marginTop: 2 }}>\n                <Typography variant=\"h5\" mb={2}>\n                    Package Origins\n                </Typography>\n                <Typography variant=\"body1\" mb={2}>\n                    {[...(selectedPackage?.parents ?? [])].filter(\n                        p => p !== \"*App\",\n                    )?.length === 0\n                        ? selectedPackage?.value?.label +\n                          \" is not a dependent of any package in this Python environment\"\n                        : \"There are \" +\n                          [...(selectedPackage?.parents ?? [])].filter(\n                              p => p !== \"*App\",\n                          )?.length +\n                          \" package(s) that have \" +\n                          selectedPackage?.value?.label +\n                          \" as a direct dependency. Of those package(s)\"}\n\n                    {Object.keys(dependents).map((change, i) => {\n                        if (dependents[change].length === 0) {\n                            return null;\n                        }\n\n                        return (\n                            <React.Fragment key={change + i}>\n                                {\", \" +\n                                    dependents[change].length +\n                                    (change === \"version\"\n                                        ? \" had a version change \"\n                                        : (dependents[change].length === 1\n                                              ? \" was \"\n                                              : \" were \") + change) +\n                                    \" (\"}\n                                {dependents[change].map((p, i, a) => {\n                                    let text = p;\n                                    if (i !== a.length - 1) {\n                                        text += \", \";\n                                    }\n                                    return (\n                                        <Link\n                                            key={i + text}\n                                            underline=\"hover\"\n                                            onClick={() => setSelected(p)}\n                                        >\n                                            {text}\n                                        </Link>\n                                    );\n                                })}\n                                {\")\"}\n                            </React.Fragment>\n                        );\n                    })}\n                    {\".\"}\n                </Typography>\n\n                <NetworkGraphView mergedGraph={mergedGraph} />\n            </Paper>\n        </Box>\n    );\n};\n\nSelectedPackage.propTypes = {\n    mergedGraph: PropTypes.objectOf(Graph),\n};\n","import React, { useState } from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport { AdviseTableView } from \"../components\";\nimport { SelectedPackage } from \"../features\";\nimport PropTypes from \"prop-types\";\n\nexport const SelectedPackageContext = React.createContext();\n\nexport const AdviseDetails = ({ mergedGraph }) => {\n    const [search, setSearch] = useState(\"\");\n    const [selected, setSelected] = useState();\n\n    const handleSearch = event => {\n        setSearch(event.target.value);\n    };\n\n    if (!mergedGraph) {\n        return null;\n    }\n\n    return (\n        <SelectedPackageContext.Provider value={{ selected, setSelected }}>\n            <Grid\n                container\n                spacing={2}\n                justifyContent=\"center\"\n                alignItems=\"flex-start\"\n                mt={2}\n            >\n                <Grid item s={12} md={6}>\n                    <Paper sx={{ padding: 2 }}>\n                        <SearchBar\n                            onChange={handleSearch}\n                            lefticon={<SearchRoundedIcon />}\n                        />\n                        <AdviseTableView\n                            search={search}\n                            filteredGraph={mergedGraph}\n                        />\n                    </Paper>\n                </Grid>\n                <Grid item s={12} md={6}>\n                    {!selected ? (\n                        <Typography variant=\"body1\" align=\"center\">\n                            No package selected\n                        </Typography>\n                    ) : (\n                        <SelectedPackage mergedGraph={mergedGraph} />\n                    )}\n                </Grid>\n            </Grid>\n        </SelectedPackageContext.Provider>\n    );\n};\n\nAdviseDetails.propTypes = {\n    mergedGraph: PropTypes.any,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport {\n    Box,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TablePagination,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\n\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport RemoveRoundedIcon from \"@material-ui/icons/RemoveRounded\";\nimport CircleOutlinedIcon from \"@material-ui/icons/CircleOutlined\";\n\n// utils\nimport { getComparator, stableSort } from \"./utils\";\n\n// local\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport PropTypes from \"prop-types\";\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport { Graph } from \"utils/Graph\";\n\n/**\n * The table cells and total structure specific to\n * python packages.\n */\nexport function AdviseTableView({ search = \"\", filteredGraph }) {\n    const [order, setOrder] = useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"name\");\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(25);\n    const [rows, setRows] = React.useState([]);\n    const { selected, setSelected } = useContext(SelectedPackageContext) ?? {\n        setSelected: () => console.log(\"missing callback\"),\n    };\n\n    // format data\n    useEffect(() => {\n        if (!filteredGraph) {\n            return;\n        }\n\n        setPage(0);\n\n        const newRows = [];\n        filteredGraph.nodes.forEach(node => {\n            if (node.value.depth === -1) {\n                return;\n            }\n            newRows.push({\n                name: node.value.label,\n                key: node.key,\n                warnings: [],\n                depth: node.value?.depth ?? -1,\n                license: node?.value?.metadata?.License,\n                dependencies: node.adjacents.size,\n                change: node.value?.change,\n                summary: node?.value?.metadata?.Summary,\n            });\n        });\n        setRows(newRows);\n    }, [filteredGraph]);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <TableContainer>\n                <Table sx={{ minWidth: 750 }} size=\"medium\">\n                    <EnhancedTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={handleRequestSort}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getComparator(order, orderBy))\n                            .filter(row => row.name.includes(search))\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage,\n                            )\n                            .map((row, index) => {\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                const iconColor =\n                                    row.change === \"removed\"\n                                        ? \"error\"\n                                        : row.change === \"added\"\n                                        ? \"success\"\n                                        : undefined;\n                                return (\n                                    <React.Fragment key={row.name}>\n                                        <TableRow\n                                            hover\n                                            onClick={() => setSelected(row.key)}\n                                            tabIndex={-1}\n                                            selected={selected === row.key}\n                                        >\n                                            <TableCell\n                                                component=\"th\"\n                                                id={labelId}\n                                                scope=\"row\"\n                                            >\n                                                <Box display=\"flex\">\n                                                    {row.change ===\n                                                    \"removed\" ? (\n                                                        <RemoveRoundedIcon\n                                                            color={iconColor}\n                                                        />\n                                                    ) : row.change ===\n                                                      \"added\" ? (\n                                                        <AddRoundedIcon\n                                                            color={iconColor}\n                                                        />\n                                                    ) : (\n                                                        <CircleOutlinedIcon />\n                                                    )}\n                                                    <Typography ml={2}>\n                                                        {row.name}\n                                                    </Typography>\n                                                </Box>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.depth}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.license}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.dependencies}\n                                            </TableCell>\n                                        </TableRow>\n\n                                        <TableRow>\n                                            <TableCell\n                                                style={{\n                                                    paddingBottom: 0,\n                                                    paddingTop: 0,\n                                                }}\n                                                colSpan={6}\n                                            />\n                                        </TableRow>\n                                    </React.Fragment>\n                                );\n                            })}\n                        {emptyRows > 0 && (\n                            <TableRow\n                                style={{\n                                    height: 53 * emptyRows,\n                                }}\n                            >\n                                <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Box>\n    );\n}\n\nAdviseTableView.propTypes = {\n    /** the text value used to filter the cells in the table */\n    search: PropTypes.string,\n    filteredGraph: PropTypes.objectOf(Graph),\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    lockfile: {\n        overflow: \"scroll\",\n        paddingLeft: theme.spacing(1),\n    },\n}));\n\n/**\n * Renders out a Pipfile.lock file and attaches\n * `<a>` tags to package names, which is used to\n *  scroll to certain spot in the lock file\n */\nexport const LockfileView = ({ file }) => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant=\"caption\">\n            <pre>\n                <div\n                    className={classes.lockfile}\n                    dangerouslySetInnerHTML={{\n                        __html: JSON.stringify(file, undefined, 4)?.replaceAll(\n                            new RegExp(\n                                '(\"' +\n                                    Object.keys(file?.default)?.join('\"|\"') +\n                                    '\")',\n                                \"g\",\n                            ),\n                            match => {\n                                return `<a id=\"${match.slice(\n                                    1,\n                                    -1,\n                                )}\">${match}</a>`;\n                            },\n                        ),\n                    }}\n                />\n            </pre>\n        </Typography>\n    );\n};\n\nLockfileView.propTypes = {\n    /** The Pipfile.lock json object */\n    file: PropTypes.shape({ default: PropTypes.object.isRequired }),\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport InfoCard from \"components/Elements/InfoCard\";\nimport {\n    DependenciesMetric,\n    CustomCardAction,\n    LicenseMetric,\n    AdviseMetric,\n} from \"../components\";\nimport PropTypes from \"prop-types\";\n\nexport const AdviseSummary = ({ metrics }) => {\n    const [pipfile, setPipfile] = React.useState(\"newGraph\");\n\n    const handlePipfile = (event, newPipfile) => {\n        if (newPipfile?.length) {\n            setPipfile(newPipfile);\n        }\n    };\n\n    return (\n        <Grid container spacing={3} mb={3} mt={1}>\n            <Grid item xs={12} md={6}>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Thoth Advise Summary\",\n                    }}\n                    cardBody={<AdviseMetric metric={metrics?.advise} />}\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Dependencies Summary\",\n                    }}\n                    cardBody={\n                        <DependenciesMetric\n                            all={metrics?.[pipfile]?.dependencies?.all}\n                            roots={metrics?.[pipfile]?.dependencies?.roots}\n                        />\n                    }\n                    cardAction={\n                        <CustomCardAction\n                            value={pipfile}\n                            onChange={handlePipfile}\n                        />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Licenses Summary\",\n                    }}\n                    cardBody={\n                        <LicenseMetric metric={metrics?.[pipfile]?.licenses} />\n                    }\n                    cardAction={\n                        <CustomCardAction\n                            value={pipfile}\n                            onChange={handlePipfile}\n                        />\n                    }\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nAdviseSummary.propTypes = {\n    metrics: PropTypes.object,\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\n/**\n * An async function that returns a promise for `{base_url}/advise/python`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseDocument = async analysis_id => {\n    return axios.get(THOTH_URL + \"/advise/python/\" + analysis_id, {\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useAdviseDocument = (analysis_id, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"adviseDocument\", analysis_id],\n        queryFn: () => getAdviseDocument(analysis_id),\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\n/**\n * An async function that returns a promise for `{base_url}/advise/python/logs`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseLogs = async analysis_id => {\n    return axios.get(THOTH_URL + \"/advise/python/\" + analysis_id + \"/log\", {\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useAdviseLogs = (analysis_id, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"adviseLogs\", analysis_id],\n        queryFn: () => getAdviseLogs(analysis_id),\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL, PYPI_URL } from \"config\";\nimport { useQueries, useQuery } from \"react-query\";\n\nexport const getPackageMetadata = async (\n    name,\n    version,\n    index,\n    os_name,\n    os_version,\n    python_version,\n) => {\n    return await axios.get(THOTH_URL + \"/python/package/version/metadata\", {\n        params: {\n            name: name,\n            version: version,\n            index: index,\n            os_name: os_name,\n            os_version: os_version,\n            python_version: python_version,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const getPackageMetadataPyPi = (name, version) => {\n    return axios\n        .get(PYPI_URL + \"/\" + name + (version ? \"/\" + version : \"\") + \"/json\")\n        .catch(() => {\n            return undefined;\n        });\n};\n\nexport const usePackageMetadata = (\n    name,\n    version,\n    index,\n    os_name,\n    os_version,\n    python_version,\n    config,\n) => {\n    return useQuery({\n        ...config,\n        queryKey: [\n            \"packageMetadata\",\n            name,\n            version,\n            index,\n            os_name,\n            os_version,\n            python_version,\n        ],\n        queryFn: () =>\n            getPackageMetadata(\n                name,\n                version,\n                index,\n                os_name,\n                os_version,\n                python_version,\n            ),\n    });\n};\n\nexport const usePackagesMetadata = (packages, config) => {\n    return useQueries(\n        packages.map(p => {\n            return {\n                ...config,\n                queryKey: [\n                    \"packageMetadata\",\n                    p.name,\n                    p.version,\n                    p.index,\n                    p.os_name,\n                    p.os_version,\n                    p.python_version,\n                ],\n                queryFn: () =>\n                    getPackageMetadata(\n                        p.name,\n                        p.version,\n                        p.index,\n                        p.os_name,\n                        p.os_version,\n                        p.python_version,\n                    ),\n            };\n        }),\n    );\n};\n","import { useMemo, useEffect, useState } from \"react\";\n\n// utils\nimport { Graph } from \"utils/Graph\";\n\n// api\nimport { usePackagesMetadata } from \"features/misc/api\";\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useGraph(data, knownRoots) {\n    const allMetadata = usePackagesMetadata(data);\n\n    const allMetadataStatus = useMemo(() => {\n        const status = {\n            loading: false,\n            error: false,\n            success: false,\n        };\n        if (allMetadata.length > 0) {\n            allMetadata.forEach(query => {\n                switch (query.status) {\n                    case \"error\":\n                        status.error = true;\n                        break;\n                    case \"success\":\n                        status.success = true;\n                        break;\n                    default:\n                        status.loading = true;\n                }\n            });\n        } else {\n            return \"loading\";\n        }\n\n        if (status.loading) {\n            return \"loading\";\n        } else if (status.error) {\n            return \"error\";\n        } else {\n            return \"success\";\n        }\n    }, [allMetadata]);\n\n    const [graph, setGraph] = useState();\n\n    useEffect(() => {\n        if (allMetadataStatus === \"loading\") {\n            return;\n        }\n\n        // create graph\n        const tempGraph = new Graph();\n        const notRoot = [];\n\n        // add data to graph\n        allMetadata.forEach(query => {\n            // if could not find metadata\n            if (query.status === \"error\") {\n                const params = query.error.response.data.parameters;\n                const value = {\n                    id: params.name.toLowerCase(),\n                    label: params.name,\n                    metadata: null,\n                };\n\n                // add package to graph\n                const node = tempGraph.addVertex(value.id, value);\n                node.parents = new Set();\n            }\n            // metadata was found\n            else {\n                const metadata = query.data.data.metadata;\n                const value = {\n                    id: metadata.package_name.toLowerCase(),\n                    label: metadata.package_name,\n                    metadata: metadata.importlib_metadata.metadata,\n                };\n\n                // add package to graph\n                const node = tempGraph.addVertex(value.id, value);\n                node.parents = new Set();\n            }\n        });\n\n        // set edges\n        allMetadata.forEach(query => {\n            if (query.status === \"error\") {\n                return;\n            }\n\n            const currentNode = tempGraph.nodes.get(\n                query.data.data.metadata.package_name.toLowerCase(),\n            );\n\n            Object.keys(query.data.data.metadata.dependencies).forEach(dep => {\n                const adjacentNode = tempGraph.nodes.get(dep);\n\n                // if package exists in lockfile\n                if (adjacentNode) {\n                    // add edge connecting parent and dependency\n                    tempGraph.addEdge(\n                        currentNode.value.id,\n                        adjacentNode.value.id,\n                    );\n                    // set parent\n                    adjacentNode.parents.add(currentNode.value.id);\n                    notRoot.push(adjacentNode.value.id);\n                }\n            });\n        });\n\n        // add app node to graph\n        const app = tempGraph.addVertex(\"*App\", {\n            id: \"*App\",\n            label: \"App\",\n            depth: -1,\n        });\n\n        notRoot.push(\"*App\");\n\n        const visited = new Map();\n        const visitList = [];\n\n        // get roots and connect to app\n        tempGraph.nodes.forEach((value, key, map) => {\n            if (\n                !notRoot.includes(key) ||\n                Object.keys(knownRoots).includes(key)\n            ) {\n                const node = map.get(key);\n                node.value.depth = 0;\n                node.parents.add(\"*App\");\n                visitList.push(node);\n                tempGraph.addEdge(app.key, node.key);\n            }\n        });\n\n        // set depth and parent packages using dfs\n        while (visitList.length !== 0) {\n            const node = visitList.pop();\n            if (node && !visited.has(node)) {\n                visited.set(node);\n\n                const adjs = node.getAdjacents();\n\n                for (let i = 0; i < adjs.length; i++) {\n                    // update depth\n                    adjs[i].value.depth = Math.min(\n                        node.value.depth + 1,\n                        adjs[i].value.depth ?? node.value.depth + 2,\n                    );\n                    visitList.push(adjs[i]);\n                }\n            }\n        }\n\n        setGraph(tempGraph);\n    }, [allMetadataStatus, knownRoots]);\n\n    return graph;\n}\n","import { useEffect, useMemo, useState } from \"react\";\n\nexport function useMetrics(oldGraph, newGraph, mergedGraph, adviseDocument) {\n    const adviseMetric = useAdviseMetric(mergedGraph, adviseDocument);\n    const oldDependencyMetric = useDependencyMetric(oldGraph);\n    const newDependencyMetric = useDependencyMetric(newGraph);\n    const oldLicenseMetric = useLicenseMetric(oldGraph);\n    const newLicenseMetric = useLicenseMetric(newGraph);\n\n    return useMemo(() => {\n        const base = {\n            advise: null,\n            oldGraph: { dependencies: null, licenses: null },\n            newGraph: { dependencies: null, licenses: null },\n        };\n\n        if (adviseMetric) {\n            base.advise = adviseMetric;\n        }\n        if (oldDependencyMetric) {\n            base.oldGraph.dependencies = oldDependencyMetric;\n        }\n        if (oldDependencyMetric) {\n            base.oldGraph.licenses = oldLicenseMetric;\n        }\n        if (newDependencyMetric) {\n            base.newGraph.dependencies = newDependencyMetric;\n        }\n        if (newLicenseMetric) {\n            base.newGraph.licenses = newLicenseMetric;\n        }\n\n        return base;\n    }, [\n        adviseMetric,\n        oldDependencyMetric,\n        oldLicenseMetric,\n        newDependencyMetric,\n        newLicenseMetric,\n    ]);\n}\n\nexport const useDependencyMetric = graph => {\n    const [metric, setMetric] = useState();\n\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        let base = {\n            all: {},\n            roots: {},\n        };\n\n        const roots = [];\n        graph.nodes.forEach(value => {\n            if (value.value.depth === 0) {\n                roots.push(value.key);\n            }\n        });\n\n        const visited = new Set();\n\n        // for each starting node\n        roots.forEach(root => {\n            const bfs = graph.graphSearch(graph.nodes.get(root));\n            const visitedOrder = Array.from(bfs);\n\n            visitedOrder.forEach(node => {\n                if (node.key === \"*App\") {\n                    return;\n                }\n\n                if (visited.has(node.value.id)) {\n                    return;\n                } else {\n                    visited.add(node.value.id);\n                }\n\n                const depth =\n                    node.value.depth === 0\n                        ? \"roots\"\n                        : node.value.depth === 1\n                        ? \"direct\"\n                        : \"indirect\";\n\n                // dependency metric\n                base = {\n                    all: {\n                        ...base.all,\n                        [depth]: (base.all[depth] ?? 0) + 1,\n                    },\n                    roots: {\n                        ...base.roots,\n                        [root]: {\n                            ...(base.roots[root] ?? null),\n                            [depth]: (base.roots?.[root]?.[depth] ?? 0) + 1,\n                        },\n                    },\n                };\n            });\n        });\n\n        setMetric(base);\n    }, [graph]);\n\n    return metric;\n};\n\nexport const useLicenseMetric = graph => {\n    const [metric, setMetric] = useState();\n\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        let base = {};\n\n        const roots = [];\n        graph.nodes.forEach(value => {\n            if (value.value.depth === 0) {\n                roots.push(value.key);\n            }\n        });\n\n        const visited = new Set();\n\n        // for each starting node\n        roots.forEach(root => {\n            const bfs = graph.graphSearch(graph.nodes.get(root));\n            const visitedOrder = Array.from(bfs);\n\n            visitedOrder.forEach(node => {\n                if (node.key === \"*App\") {\n                    return;\n                }\n\n                if (visited.has(node.value.id)) {\n                    return;\n                } else {\n                    visited.add(node.value.id);\n                }\n\n                // licence metric\n                const packageLicenses = [];\n\n                // get general classification\n                node?.value?.metadata?.Classifier?.forEach(classifier => {\n                    const parsed = classifier.split(\" :: \");\n\n                    if (parsed[0] === \"License\") {\n                        if (parsed[1] === \"OSI Approved\") {\n                            packageLicenses.push({\n                                generalLicense:\n                                    parsed?.[2] ?? node.value.metadata.License,\n                                specificLicense: node.value.metadata.License,\n                                isOsiApproved: true,\n                            });\n                        } else {\n                            packageLicenses.push({\n                                generalLicense:\n                                    parsed?.[1] ?? node.value.metadata.License,\n                                specificLicense: node.value.metadata.License,\n                                isOsiApproved: false,\n                            });\n                        }\n                    }\n                });\n\n                if (packageLicenses.length === 0) {\n                    packageLicenses.push({\n                        generalLicense: node?.value?.metadata?.License ?? \"N/A\",\n                        specificLicense:\n                            node?.value?.metadata?.License ?? \"N/A\",\n                        isOsiApproved: null,\n                    });\n                }\n\n                // get specific classification\n                packageLicenses.forEach(license => {\n                    if (!base[license.generalLicense]) {\n                        base[license.generalLicense] = {\n                            packages: {},\n                            metadata: {\n                                isOsiApproved: license.isOsiApproved,\n                            },\n                        };\n                    }\n\n                    base = {\n                        ...base,\n                        [license.generalLicense]: {\n                            ...base[license.generalLicense],\n                            packages: {\n                                ...(base[license.generalLicense].packages ??\n                                    null),\n                                [node.value.label]: {\n                                    depth: node.value.depth,\n                                    specific: license.specificLicense,\n                                },\n                            },\n                        },\n                    };\n                });\n            });\n        });\n\n        setMetric(base);\n    }, [graph]);\n\n    return metric;\n};\n\nexport const useAdviseMetric = (graph, adviseDocument) => {\n    const [metric, setMetric] = useState();\n\n    useEffect(() => {\n        if (!graph || !adviseDocument) {\n            return;\n        }\n\n        const base = {\n            added: 0,\n            removed: 0,\n            version: 0,\n            unchanged: 0,\n            justification: {},\n            build: null,\n        };\n\n        // package changes\n        graph.nodes.forEach(node => {\n            switch (node.value.change) {\n                case \"added\":\n                    base.added++;\n                    break;\n                case \"removed\":\n                    base.removed++;\n                    break;\n                case \"version\":\n                    base.version++;\n                    break;\n                default:\n                    base.unchanged++;\n            }\n        });\n\n        //build environment\n        base.build = `We have analysed an application stack running on ${adviseDocument.metadata.os_release.name} ${adviseDocument.metadata.os_release.version}, running Python (${adviseDocument.metadata.python.implementation_name}) ${adviseDocument.metadata.python.major}.${adviseDocument.metadata.python.minor}.${adviseDocument.metadata.python.micro}. It was Adviser Job ID ${adviseDocument.metadata.document_id}, by ${adviseDocument.metadata.analyzer} v${adviseDocument.metadata.analyzer_version}.`;\n\n        //justification counts\n        adviseDocument?.result?.report?.products?.[0]?.justification.forEach(\n            justification => {\n                base.justification[justification.type] = base.justification[\n                    justification.type\n                ]\n                    ? base.justification[justification.type] + 1\n                    : 1;\n            },\n        );\n        setMetric(base);\n    }, [graph, adviseDocument]);\n\n    return metric;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AdviseNotFound = ({ analysis_id }) => {\n    return <div>`&quot;{analysis_id}&quot;` not found</div>;\n};\n\nAdviseNotFound.propTypes = {\n    analysis_id: PropTypes.string,\n};\n","import * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Layout is used in most of the app and allows for backwards navigation.\n */\nexport const NavigationLayout = ({ children }) => {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Button onClick={() => navigate(-1)}>go back</Button>\n            <div>{children}</div>\n        </>\n    );\n};\n\nNavigationLayout.propTypes = {\n    children: PropTypes.node,\n};\n","import React, { useMemo } from \"react\";\nimport { Route, Routes, useParams, Navigate } from \"react-router-dom\";\n\n// layouts\nimport { AdviseLayout } from \"components/Layout\";\n\n// sub-routes\nimport { AdviseSummary } from \"./AdviseSummary\";\nimport { AdviseDetails } from \"./AdviseDetails\";\n\n// feature specific imports\nimport { useAdviseDocument, useAdviseLogs } from \"../api\";\nimport { formatLockfile } from \"../utils\";\nimport { AdviseHeader } from \"../components\";\nimport { useMetrics, useMergeGraphs, useGraph } from \"../hooks\";\n\n// misc\nimport { CircularProgress } from \"@material-ui/core\";\nimport { AdviseNotFound } from \"./AdviseNotFound\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\n\nexport const AdviseRoutes = () => {\n    // get document id\n    const { analysis_id } = useParams();\n\n    // api get thoth advise document\n    const adviseDocument = useAdviseDocument(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: data => {\n            if (data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n\n    const logs = useAdviseLogs(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: () => {\n            if (adviseDocument.data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n    // format init graph data\n    const initGraphData = useMemo(() => {\n        if (\n            adviseDocument.isSuccess &&\n            adviseDocument.data.data?.result?.parameters?.project\n        ) {\n            return formatLockfile(\n                adviseDocument.data.data.result.parameters.project,\n            );\n        }\n    }, [adviseDocument]);\n\n    // format advise graph data\n    const adviseGraphData = useMemo(() => {\n        if (\n            adviseDocument.isSuccess &&\n            adviseDocument.data.data?.result?.report?.products?.[0]?.project\n        ) {\n            return formatLockfile(\n                adviseDocument.data.data.result.report.products[0].project,\n            );\n        }\n    }, [adviseDocument]);\n\n    // create init graph\n    const initGraph = useGraph(\n        initGraphData ?? [],\n        adviseDocument.data?.data?.result?.parameters?.project?.requirements\n            ?.packages,\n    );\n    const adviseGraph = useGraph(\n        adviseGraphData ?? [],\n        adviseDocument.data?.data?.result?.report?.products?.[0]?.project\n            ?.requirements,\n    );\n\n    // merge graphs based on added, removed, changed packages\n    const mergedGraph = useMergeGraphs(\n        initGraph,\n        adviseGraph,\n        adviseDocument.data?.data,\n    );\n\n    // compute metric data\n    const metrics = useMetrics(\n        initGraph,\n        adviseGraph,\n        mergedGraph,\n        adviseDocument.data?.data,\n    );\n\n    if (adviseDocument.isLoading) {\n        return (\n            <div className=\"w-full h-48 flex justify-center items-center\">\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (!adviseDocument.data) {\n        return (\n            <NavigationLayout>\n                <AdviseNotFound analysis_id={analysis_id} />\n            </NavigationLayout>\n        );\n    }\n\n    return (\n        <NavigationLayout>\n            <AdviseLayout\n                header={\n                    <AdviseHeader\n                        adviseDocument={adviseDocument.data.data}\n                        logs={logs.data?.data?.log}\n                    />\n                }\n            >\n                <Routes>\n                    <Route\n                        path=\"summary\"\n                        element={<AdviseSummary metrics={metrics} />}\n                    />\n                    <Route\n                        path=\"details\"\n                        element={<AdviseDetails mergedGraph={mergedGraph} />}\n                    />\n                    <Route path=\"*\" element={<Navigate to=\"summary\" />} />\n                </Routes>\n            </AdviseLayout>\n        </NavigationLayout>\n    );\n};\n","import { useEffect, useState } from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Graph } from \"utils/Graph\";\nimport { discoverPackageChanges } from \"../utils\";\n\nexport const useMergeGraphs = (oldGraph, newGraph, adviseDocument) => {\n    const [graph, setGraph] = useState();\n    const theme = useTheme();\n\n    useEffect(() => {\n        if (!oldGraph || !newGraph) {\n            return;\n        }\n\n        const visGraphEdges = [];\n        const mergedGraph = new Graph();\n\n        newGraph.nodes.forEach((value, key) => {\n            // get node\n            const combinedNode = newGraph.nodes.get(key);\n\n            // check if added, changed, or unchanged\n            // if added (old graph doesnt have the package)\n            if (!oldGraph.nodes.has(key)) {\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    change: \"added\",\n                    label:\n                        value.value.label +\n                        \" \" +\n                        (value?.value?.metadata?.Version ?? \"\"),\n                    font: {\n                        color: theme.palette.success.main,\n                    },\n                    color: theme.palette.success.main,\n                    version: value?.value?.metadata?.Version ?? \"\",\n                    dependencies: value.adjacents.size,\n                    license: value?.value?.metadata?.License ?? \"\",\n                    lockfile: [\"new\"],\n                };\n            }\n            // if the graph is not new then it is either equal or the version changed\n            else {\n                // set values that wont change\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    label:\n                        value.value.label +\n                        \" \" +\n                        (value?.value?.metadata?.Version ?? \"\"),\n                    dependencies: value.adjacents.size,\n                    license: value?.value?.metadata?.License ?? \"\",\n                    lockfile: [\"new\", \"old\"],\n                };\n                // if the nodes are equal (version are the same)\n                if (\n                    value?.value?.metadata?.Version ===\n                    oldGraph.nodes.get(key)?.value?.metadata?.Version\n                ) {\n                    combinedNode.value = {\n                        ...combinedNode.value,\n                        version: value?.value?.metadata?.Version ?? \"\",\n                        change: \"unchanged\",\n                    };\n                }\n                // if the version changed\n                else {\n                    combinedNode.value = {\n                        ...combinedNode.value,\n                        change: \"version\",\n                        version: value?.value?.metadata?.Version ?? \"\",\n                        oldVersion:\n                            oldGraph.nodes.get(key)?.value?.metadata?.Version ??\n                            \"\",\n                        font: {\n                            color: theme.palette.success.main,\n                        },\n                    };\n\n                    combinedNode.parents = [\n                        ...new Set([\n                            ...combinedNode.parents,\n                            ...(oldGraph.nodes.get(key)?.parents ?? []),\n                        ]),\n                    ];\n\n                    // merge the dependencies because they could be different\n                    oldGraph.nodes\n                        .get(key)\n                        .getAdjacents()\n                        .forEach(item => combinedNode.adjacents.add(item));\n                    newGraph.nodes\n                        .get(key)\n                        .getAdjacents()\n                        .forEach(item => combinedNode.adjacents.add(item));\n                }\n            }\n\n            mergedGraph.nodes.set(key, combinedNode);\n        });\n\n        oldGraph.nodes.forEach((value, key) => {\n            // get node\n            const combinedNode = oldGraph.nodes.get(key);\n\n            // only checking if package was removed\n            if (!newGraph.nodes.has(key)) {\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    change: \"removed\",\n                    label:\n                        value.value.label +\n                        \" \" +\n                        (value?.value?.metadata?.Version ?? \"\"),\n                    font: {\n                        color: theme.palette.error.main,\n                    },\n                    color: theme.palette.error.main,\n                    version: value?.value?.metadata?.Version ?? \"\",\n                    dependencies: value.adjacents.size,\n                    license: value?.value?.metadata?.License ?? \"\",\n                    lockfile: [\"old\"],\n                };\n\n                mergedGraph.nodes.set(key, combinedNode);\n            }\n        });\n\n        // add edges from old graph\n        oldGraph.nodes.forEach(value => {\n            // set package edges\n            value.adjacents.forEach(adj => {\n                visGraphEdges.push({\n                    to: value.value.id,\n                    from: adj.value.id,\n                    lockfile: \"old\",\n                });\n            });\n        });\n\n        // add edges from new graph\n        newGraph.nodes.forEach(value => {\n            // set package edges\n            value.adjacents.forEach(adj => {\n                visGraphEdges.push({\n                    to: value.value.id,\n                    from: adj.value.id,\n                    lockfile: \"new\",\n                });\n            });\n        });\n\n        // set justifications\n        discoverPackageChanges(\n            mergedGraph.nodes,\n            adviseDocument.result.report?.products?.[0]?.justification,\n        );\n\n        // add edges to merged graph Object\n        mergedGraph[\"visEdges\"] = visGraphEdges;\n\n        setGraph(mergedGraph);\n    }, [oldGraph, newGraph, adviseDocument, theme]);\n\n    return graph;\n};\n","import React, { useContext } from \"react\";\nimport Select from \"@mui/material/Select\";\nimport { Box, MenuItem, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SpecContext } from \"features/package/routes/PackageOverview\";\n\nexport const ParamDropdown = ({ options, type, label, disabled, ...props }) => {\n    const navigate = useNavigate();\n    const { specs, defaultSpecs } = useContext(SpecContext);\n\n    const handleChange = event => {\n        switch (type) {\n            case \"package_version\":\n                navigate(\n                    `/package/${specs.package_name}/${event.target.value}`,\n                );\n                break;\n            case \"index_url\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(event.target.value)}`,\n                );\n                break;\n            case \"os_name\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url,\n                    )}/${event.target.value}`,\n                );\n\n                break;\n            case \"os_version\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url,\n                    )}/${specs.os_name ?? defaultSpecs.os_name}/${\n                        event.target.value\n                    }`,\n                );\n                break;\n            case \"python_version\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url,\n                    )}/${specs.os_name ?? defaultSpecs.os_name}/${\n                        specs.os_version ?? defaultSpecs.os_version\n                    }/${event.target.value}`,\n                );\n                break;\n        }\n    };\n\n    return (\n        <Box {...props}>\n            <Typography variant=\"body2\">{label}</Typography>\n            <Select\n                displayEmpty\n                fullWidth\n                value={specs[type] ?? \"\"}\n                onChange={handleChange}\n                size=\"small\"\n                variant=\"outlined\"\n                disabled={disabled}\n                renderValue={value => {\n                    if (!value) {\n                        return (\n                            <em style={{ color: \"grey\" }}>\n                                {defaultSpecs?.[type] ?? label}\n                            </em>\n                        );\n                    } else {\n                        return value;\n                    }\n                }}\n            >\n                <MenuItem disabled value=\"\">\n                    <em>{label}</em>\n                </MenuItem>\n                {options.map(option => {\n                    return (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.value}\n                        </MenuItem>\n                    );\n                })}\n            </Select>\n        </Box>\n    );\n};\n\nParamDropdown.propTypes = {\n    options: PropTypes.array.isRequired,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    disabled: PropTypes.bool,\n    props: PropTypes.any,\n};\n","import React, { useContext, useMemo, useState } from \"react\";\n\n// material-ui\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport PropTypes from \"prop-types\";\nimport { ParamDropdown } from \"../ParamDropdown\";\nimport { SpecContext } from \"../../routes/PackageOverview\";\n\n// component styling\nconst useStyles = makeStyles(theme => ({\n    titleRow: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(2),\n    },\n    linksRow: {\n        display: \"flex\",\n    },\n}));\n\n/**\n * A header for package metadata.\n */\nexport const PackageHeader = ({ metadata, allVersions, allEnvironments }) => {\n    const classes = useStyles();\n    const { defaultSpecs, specs } = useContext(SpecContext);\n    const [showEnvParams, setShowEnvParams] = useState(false);\n\n    const versionOptions = useMemo(() => {\n        const dups = new Set();\n        return allVersions\n            .filter(version => {\n                if (!dups.has(version.package_version)) {\n                    dups.add(version.package_version);\n                    return true;\n                }\n                return false;\n            })\n            .map(version => {\n                return {\n                    value: version.package_version,\n                };\n            })\n            .sort((a, b) => (a.value.split(\".\") > b.value.split(\".\") ? 1 : -1));\n    }, [allVersions]);\n\n    const indexUrlOptions = useMemo(() => {\n        const dups = new Set();\n        return allVersions\n            .filter(version => {\n                if (specs.package_version) {\n                    return specs.package_version === version.package_version;\n                } else {\n                    return (\n                        defaultSpecs.package_version === version.package_version\n                    );\n                }\n            })\n            .filter(version => {\n                if (!dups.has(version.index_url)) {\n                    dups.add(version.index_url);\n                    return true;\n                }\n                return false;\n            })\n            .map(version => {\n                return {\n                    value: version.index_url,\n                };\n            });\n    }, [allVersions]);\n\n    const [osNameOptions, osVersionOptions, pythonVersionOptions] =\n        useMemo(() => {\n            const name = allEnvironments.map(env => {\n                return {\n                    value: env.os_name,\n                };\n            });\n            const version = allEnvironments\n                .filter(env => !specs.os_name || specs.os_name === env.os_name)\n                .map(env => {\n                    return {\n                        value: env.os_version,\n                    };\n                });\n            const pyVersion = allEnvironments\n                .filter(\n                    env =>\n                        (!specs.os_name || specs.os_name === env.os_name) &&\n                        (!specs.os_version ||\n                            specs.os_version === env.os_version),\n                )\n                .map(env => {\n                    return {\n                        value: env.python_version,\n                    };\n                });\n            return [name, version, pyVersion];\n        }, [allEnvironments, specs]);\n\n    return (\n        <div>\n            <Grid container alignItems=\"flex-end\" spacing={1}>\n                <Grid item>\n                    <Typography variant=\"h4\" mr={2}>\n                        <b>{metadata?.Name}</b>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <ParamDropdown\n                        options={versionOptions ?? []}\n                        type=\"package_version\"\n                        label={\"Version\"}\n                    />\n                </Grid>\n                <Grid item>\n                    <ParamDropdown\n                        options={indexUrlOptions ?? []}\n                        type=\"index_url\"\n                        label={\"Index URL\"}\n                        disabled={specs.package_version === undefined}\n                    />\n                </Grid>\n                {showEnvParams ? (\n                    <React.Fragment>\n                        <Grid item>\n                            <ParamDropdown\n                                options={osNameOptions ?? []}\n                                type=\"os_name\"\n                                label={\"OS Name\"}\n                                disabled={specs.index_url === undefined}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ParamDropdown\n                                options={osVersionOptions ?? []}\n                                type=\"os_version\"\n                                label={\"OS Version\"}\n                                disabled={specs.os_name === undefined}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ParamDropdown\n                                options={pythonVersionOptions ?? []}\n                                type=\"python_version\"\n                                label={\"Python Version\"}\n                                disabled={specs.os_version === undefined}\n                            />\n                        </Grid>\n                    </React.Fragment>\n                ) : null}\n                <Grid item xs={1}>\n                    <IconButton\n                        onClick={() => setShowEnvParams(!showEnvParams)}\n                    >\n                        {showEnvParams ? (\n                            <ArrowLeftIcon fontSize=\"large\" />\n                        ) : (\n                            <ArrowRightIcon fontSize=\"large\" />\n                        )}\n                    </IconButton>\n                </Grid>\n            </Grid>\n\n            <Typography gutterBottom variant=\"body1\" mt={2}>\n                {metadata?.Summary ?? \"NaN\"}\n            </Typography>\n            <div className={classes.linksRow}>\n                <IconText\n                    text={metadata?.License ?? \"NaN\"}\n                    icon={<GavelIcon />}\n                />\n            </div>\n        </div>\n    );\n};\n\nPackageHeader.propTypes = {\n    /** Package metadata object.*/\n    metadata: PropTypes.shape({\n        /** Name of package. */\n        Name: PropTypes.string.isRequired,\n        /** Description of package. */\n        Summary: PropTypes.string,\n        /** License of package */\n        License: PropTypes.string,\n    }),\n    /** list of all versions of a package **/\n    allVersions: PropTypes.array.isRequired,\n    /** list of all environments of a package, version, index **/\n    allEnvironments: PropTypes.array.isRequired,\n};\n","import { Button, Grid, Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const VersionDropdown = ({ node }) => {\n    const [open, setOpen] = React.useState(null);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const navigate = useNavigate();\n\n    const versionOptions = useMemo(() => {\n        const versionOptions = {};\n        const distribution = [0, 0];\n        const noDup = new Set();\n        node.versions.forEach(version => {\n            const split = version.split(\".\");\n            const key = split[0] + \".\" + (split[1] ?? \"\");\n\n            if (versionOptions[key] === undefined) {\n                versionOptions[key] = [];\n                distribution[0] += 1;\n            }\n            if (!noDup.has(version)) {\n                versionOptions[key].push(version);\n                distribution[1] += 1;\n                noDup.add(version);\n            }\n        });\n\n        // check if there are too many buckets\n        if (distribution[0] / distribution[1] > 0.25) {\n            // merge buckets\n            const buckets = Math.ceil(distribution[0] * 0.25);\n            const fixedVersionOptions = {};\n            let currentKey;\n            Object.keys(versionOptions).forEach((key, index, array) => {\n                if (index % buckets === 0) {\n                    currentKey = `${key} - ${\n                        array[index + buckets - 1] ?? array.at(-1)\n                    }`;\n                    fixedVersionOptions[currentKey] = [];\n                }\n                fixedVersionOptions[currentKey].push(\n                    ...versionOptions[array[index]],\n                );\n            });\n            return fixedVersionOptions;\n        }\n\n        return versionOptions;\n    }, [node]);\n\n    return (\n        <div>\n            <Button\n                onClick={event => {\n                    setOpen(node.name);\n                    setAnchorEl(event.currentTarget);\n                }}\n                variant=\"outlined\"\n                endIcon={<KeyboardArrowDownIcon />}\n            >\n                {node.specifier ?? \"ANY\"}\n            </Button>\n            <Menu\n                open={open === node.name}\n                anchorEl={anchorEl}\n                onClose={() => {\n                    setOpen(undefined);\n                    setAnchorEl(null);\n                }}\n                PaperProps={{\n                    style: {\n                        maxHeight: \"40%\",\n                        maxWidth: \"50%\",\n                    },\n                }}\n            >\n                <MenuItem disabled={true}>\n                    Select a version to navigate to:\n                </MenuItem>\n                <Grid container alignContent=\"flex-start\">\n                    {Object.entries(versionOptions).map(([key, value]) => {\n                        return (\n                            <Grid item xs key={key}>\n                                <MenuItem mt={2} disabled divider>\n                                    {key}\n                                </MenuItem>\n                                {value.map(version => {\n                                    return (\n                                        <MenuItem\n                                            key={version}\n                                            onClick={() =>\n                                                navigate(\n                                                    `/package/${node.name}/${version}`,\n                                                )\n                                            }\n                                        >\n                                            <Typography variant={\"body2\"}>\n                                                {version}\n                                            </Typography>\n                                        </MenuItem>\n                                    );\n                                })}\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </Menu>\n        </div>\n    );\n};\n\nVersionDropdown.propTypes = {\n    node: PropTypes.shape({\n        name: PropTypes.string,\n        versions: PropTypes.array,\n        specifier: PropTypes.string,\n    }),\n};\n","// react\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport InfoCard from \"components/Elements/InfoCard\";\nimport { Box, Divider, Grid, Skeleton, Typography } from \"@material-ui/core\";\nimport { VersionDropdown } from \"./VersionDropdown\";\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const PackageDependencies = ({ graph }) => {\n    const metric = useMemo(() => {\n        if (!graph) {\n            return;\n        }\n\n        const bfs = graph.graphSearch(graph.nodes.get(\"*App\"));\n        const visitedOrder = Array.from(bfs);\n\n        const metric = [];\n\n        visitedOrder.forEach(node => {\n            if (node.key !== \"*App\" && !node.value.metadata) {\n                metric.push({\n                    name: node.value.label,\n                    versions: node.value.versions,\n                    specifier: node.value.specifier,\n                    extra: node.value.extra,\n                });\n            }\n        });\n\n        return metric;\n    }, [graph]);\n\n    if (!metric) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <InfoCard\n            cardMeta={{\n                title: \"Dependencies\",\n            }}\n            cardBody={\n                <div>\n                    <Grid container>\n                        <Grid item xs>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Package\n                            </Typography>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Versions\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Extra\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Divider />\n                    <Grid container rowSpacing={2} mt={1}>\n                        {metric.map(node => {\n                            return (\n                                <Grid container item xs={12} key={node.name}>\n                                    <Grid item xs>\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            {node.name}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <VersionDropdown node={node} />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            {node.extra?.join(\", \")}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                </div>\n            }\n        />\n    );\n};\n\nPackageDependencies.propTypes = {\n    /** An object holding metric info. */\n    graph: PropTypes.shape({\n        graphSearch: PropTypes.func,\n        nodes: PropTypes.instanceOf(Map),\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const PackageNotFound = ({ package_name, package_version }) => {\n    return (\n        <div>\n            `&quot;{package_name}\n            {package_version ? \" \" + package_version : \"\"}&quot;` not found\n        </div>\n    );\n};\n\nPackageNotFound.propTypes = {\n    package_name: PropTypes.string,\n    package_version: PropTypes.string,\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography, Divider } from \"@material-ui/core\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\nconst useStyles = makeStyles(theme => ({\n    bar: {\n        marginBottom: theme.spacing(1),\n    },\n    marginBottom: {\n        marginBottom: theme.spacing(2),\n    },\n}));\n\n/**\n * A metric card showing a package's (and its dependencies') licenses\n */\nexport const PackageLicenses = ({ metric }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"body2\" gutterBottom>\n                <b>License</b>\n            </Typography>\n            <Divider />\n            <Typography className={classes.marginBottom} variant=\"h6\">\n                {metric.root}\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom>\n                <b>Dependency Licenses</b>\n            </Typography>\n            <Divider />\n\n            {Object.entries(metric?.all ?? {}).map(([key, value]) => {\n                return (\n                    <ProgressBar\n                        key={key}\n                        value={Object.keys(value).length ?? 0}\n                        total={metric.total}\n                        label={key}\n                        className={classes.bar}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nPackageLicenses.propTypes = {\n    metric: PropTypes.shape({\n        /** The total number of dependencies of the package */\n        total: PropTypes.number,\n        /** The license of the root package */\n        root: PropTypes.string,\n        /** key value object of package's dependencies' licenses\n         *\n         * ```\n         * all: {\n         *     MIT: {\n         *\n         *     }\n         * }\n         * ```\n         * */\n        all: PropTypes.object,\n    }).isRequired,\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery, useInfiniteQuery } from \"react-query\";\n\nexport const getPackageVersions = async (name, page = 0, per_page = 100) => {\n    return axios.get(THOTH_URL + \"/python/package/versions\", {\n        params: {\n            name: name,\n            page: page,\n            per_page: per_page,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const usePackageVersions = (name, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"packageVersions\", name],\n        queryFn: () => getPackageVersions(name),\n    });\n};\n\nexport const useInfinitePackageVersions = (name, config) => {\n    return useInfiniteQuery({\n        ...config,\n        queryKey: [\"packageVersions\", name],\n        queryFn: input => {\n            return getPackageVersions(name, input.pageParam);\n        },\n        getNextPageParam: lastPage => {\n            return lastPage.data.versions.length === 0\n                ? undefined\n                : lastPage.data.parameters.page + 1;\n        },\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\nexport const getPackageEnvironments = async (name, version, index) => {\n    return axios.get(THOTH_URL + \"/python/package/version/environments\", {\n        params: {\n            name: name,\n            version: version,\n            index: index,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const usePackageEnvironments = (name, version, index, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"packageEnvironments\", name, version, index],\n        queryFn: () => getPackageEnvironments(name, version, index),\n    });\n};\n","import { useEffect, useState } from \"react\";\nimport { useInfinitePackageVersions } from \"../api\";\n\nexport const useAllVersions = package_name => {\n    const versions = useInfinitePackageVersions(package_name);\n    const [allVersions, setAllVersions] = useState([]);\n\n    useEffect(() => {\n        if (versions.isSuccess) {\n            // if has a next page, and is not currently fetching a page\n            if (versions.hasNextPage && !versions.isFetchingNextPage) {\n                versions.fetchNextPage().then();\n            } else if (!versions.hasNextPage && !versions.isFetchingNextPage) {\n                let merged = [];\n                versions.data.pages.forEach(page => {\n                    merged = [...merged, ...page.data.versions];\n                });\n                if (merged.length > 0) {\n                    merged = merged.reverse();\n                    setAllVersions(merged);\n                } else {\n                    setAllVersions(undefined);\n                }\n            }\n        }\n    }, [versions.data]);\n\n    return allVersions;\n};\n","// React\nimport React, { useEffect, useMemo, useState } from \"react\";\n\n// local\nimport { PackageDependencies, PackageHeader } from \"../components\";\n\n// material-ui\nimport { CircularProgress, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { usePackageMetadata } from \"features/misc/api\";\nimport { PackageNotFound } from \"./PackageNotFound\";\nimport { useAllVersions } from \"../hooks\";\nimport { usePackageEnvironments } from \"../api\";\nimport { useSimpleGraph } from \"../hooks/useSimpleGraph\";\n\n// component styling\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: \"95%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(1),\n    },\n}));\n\nexport const SpecContext = React.createContext({});\n\n// The page that displays all analysis data\nexport const PackageOverview = () => {\n    const classes = useStyles();\n    const params = useParams();\n    const [defaultSpecs, setDefaultSpecs] = useState({\n        package_version: undefined,\n        index_url: undefined,\n        os_name: undefined,\n        os_version: undefined,\n        python_version: undefined,\n    });\n\n    // what is on the url params\n    const specs = useMemo(() => {\n        return {\n            package_name: params.package_name,\n            package_version: params?.package_version,\n            index_url: params?.index_url\n                ? decodeURIComponent(params.index_url)\n                : undefined,\n            os_name: params?.os_name,\n            os_version: params?.os_version,\n            python_version: params?.python_version,\n        };\n    }, [params]);\n\n    // get all pages of versions/indexes and merge them together\n    const allVersions = useAllVersions(specs.package_name);\n\n    // get environments for specific package, version, index\n    const allEnvironments = usePackageEnvironments(\n        specs.package_name,\n        specs.package_version ?? defaultSpecs.package_version,\n        specs.index_url ?? defaultSpecs.index_url,\n        { useErrorBoundary: false },\n    );\n\n    // some params are optional but still need a default value\n    useEffect(() => {\n        let d = {\n            package_version: undefined,\n            index_url: undefined,\n            os_name: undefined,\n            os_version: undefined,\n            python_version: undefined,\n        };\n\n        // get default package version and index\n        // needs package name and versions list\n        if (specs.package_name && allVersions && allVersions.length > 0) {\n            d.package_version = allVersions.at(0).package_version;\n            d.index_url = allVersions.at(0).index_url;\n        }\n\n        // get default environment\n        // needs list of environments\n        if (\n            allEnvironments.data &&\n            allEnvironments.data.data.environments.length > 0\n        ) {\n            const filtered = allEnvironments.data.data.environments.filter(\n                env =>\n                    (!specs.os_name || specs.os_name === env.os_name) &&\n                    (!specs.os_version || specs.os_version === env.os_version),\n            );\n            d.os_name = filtered.at(0).os_name;\n            d.os_version = filtered.at(0).os_version;\n            d.python_version = filtered.at(0).python_version;\n        }\n\n        if (Object.entries(defaultSpecs).some(([key, val]) => d[key] !== val)) {\n            setDefaultSpecs(d);\n        }\n    }, [allVersions, allEnvironments, specs]);\n\n    // get package metadata\n    const metadata = usePackageMetadata(\n        specs.package_name,\n        specs.package_version ?? defaultSpecs.package_version,\n        specs.index_url ?? defaultSpecs.index_url,\n        specs.os_name ?? defaultSpecs.os_name,\n        specs.os_version ?? defaultSpecs.os_version,\n        specs.python_version ?? defaultSpecs.python_version,\n        { useErrorBoundary: false },\n    );\n\n    const graph = useSimpleGraph(metadata);\n\n    if (metadata.isLoading || allVersions?.length === 0) {\n        return (\n            <div\n                className=\"w-full h-48 flex justify-center items-center\"\n                data-testid=\"loading\"\n            >\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (!metadata.data) {\n        return (\n            <PackageNotFound\n                package_name={params.package_name}\n                package_version={params.package_version ?? \"\"}\n            />\n        );\n    }\n\n    return (\n        <SpecContext.Provider value={{ specs, defaultSpecs }}>\n            <Grid container className={classes.root}>\n                <Grid item xs={12} mb={3}>\n                    <PackageHeader\n                        metadata={\n                            metadata.data.data.metadata.importlib_metadata\n                                .metadata\n                        }\n                        allVersions={allVersions}\n                        allEnvironments={allEnvironments.data.data.environments}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <PackageDependencies graph={graph} />\n                </Grid>\n            </Grid>\n        </SpecContext.Provider>\n    );\n};\n\nPackageOverview.propTypes = {\n    metadata: PropTypes.object,\n};\n","import { useEffect, useState } from \"react\";\n\n// utils\nimport { Graph } from \"utils/Graph\";\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useSimpleGraph(metadata) {\n    const [graph, setGraph] = useState();\n\n    useEffect(() => {\n        if (metadata.status !== \"success\") {\n            return;\n        }\n\n        // create graph\n        const tempGraph = new Graph();\n\n        // add app node to graph\n        const app = tempGraph.addVertex(\"*App\", {\n            id: \"*App\",\n            label: \"App\",\n            depth: -1,\n        });\n\n        const root = tempGraph.addVertex(\n            metadata.data.data.metadata.package_name.toLowerCase(),\n            {\n                id: metadata.data.data.metadata.package_name.toLowerCase(),\n                label: metadata.data.data.metadata.package_name,\n                metadata:\n                    metadata.data.data.metadata.importlib_metadata.metadata,\n                depth: 0,\n            },\n        );\n\n        root.parents = new Set();\n        root.parents.add(\"*App\");\n        tempGraph.addEdge(app.key, root.key);\n\n        // add deps to graph\n        Object.entries(metadata.data.data.metadata.dependencies).forEach(\n            ([name, value]) => {\n                // add package to graph\n                const node = tempGraph.addVertex(name.toLowerCase(), {\n                    id: name.toLowerCase(),\n                    label: name,\n                    metadata: null,\n                    versions: value.versions,\n                    specifier: value.specifier,\n                    extra: value.extra,\n                    depth: 1,\n                });\n                node.parents = new Set();\n\n                tempGraph.addEdge(root.key, node.key);\n\n                // set parent\n                node.parents.add(root.key);\n            },\n        );\n\n        setGraph(tempGraph);\n    }, [metadata.data]);\n\n    return graph;\n}\n","// React\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport { PackageOverview } from \"./PackageOverview\";\nimport { NotFound } from \"features/misc\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\n\n// The page that displays all analysis data\nexport const PackageRoutes = () => {\n    return (\n        <NavigationLayout>\n            <Routes>\n                <Route\n                    path=\"/:package_version/:index_url/:os_name/:os_version/:python_version\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url/:os_name\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url/:os_name/:os_version\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url\"\n                    element={<PackageOverview />}\n                />\n                <Route path=\"/:package_version\" element={<PackageOverview />} />\n                <Route path=\"/\" element={<PackageOverview />} />\n                <Route path=\"*\" status={404} element={<NotFound />} />\n            </Routes>\n        </NavigationLayout>\n    );\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Home } from \"features/home\";\nimport { NotFound } from \"features/misc\";\nimport { AdviseRoutes } from \"features/advise\";\nimport { PackageRoutes } from \"features/package\";\n\nexport const RouterConfig = () => {\n    return (\n        <BrowserRouter\n            basename={\n                process.env.REACT_APP_DEPLOYMENT === \"STAGE\"\n                    ? \"/search-stage\"\n                    : \"/search\"\n            }\n        >\n            <Routes>\n                <Route exact path={\"/\"} element={<Home />} />\n                <Route\n                    exact\n                    path={\"advise/:analysis_id/*\"}\n                    element={<AdviseRoutes />}\n                />\n                <Route\n                    path={\"package/:package_name/*\"}\n                    element={<PackageRoutes />}\n                />\n                <Route path=\"*\" status={404} element={<NotFound />} />\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default RouterConfig;\n","import React from \"react\";\n\n// material ui\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { createTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst themeLight = createTheme({\n    palette: {\n        background: {\n            default: \"#f9f9f9\",\n        },\n        primary: {\n            light: \"#f5a733\",\n            main: \"#f39200\",\n            dark: \"#aa6600\",\n        },\n        secondary: {\n            light: \"#72cdee\",\n            main: \"#4fc1ea\",\n            dark: \"#3787a3\",\n        },\n        text: {\n            priamry: \"#363636\",\n            secondary: \"#999\",\n        },\n    },\n    typography: {\n        fontFamily: [\"open sans\", \"sans-serif\"],\n        h4: {\n            fontWeight: 700,\n            fontSize: \"3rem\",\n            color: \"#363636\",\n            lineHeight: 1.125,\n        },\n        h5: {\n            fontWeight: 600,\n            fontSize: \"2rem\",\n            lineHeight: 1.125,\n            color: \"#363636\",\n        },\n        h6: {\n            fontWeight: 600,\n            fontSize: \"1.2rem\",\n            color: \"#444f60\",\n            lineHeight: 1.5,\n        },\n\n        body1: {\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.25,\n            color: \"#000\",\n        },\n\n        body2: {\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            color: \"#000\",\n        },\n        subtitle1: {\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.25,\n            color: \"#999\",\n        },\n\n        subtitle2: {\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            color: \"#999\",\n        },\n    },\n});\n\nfunction Theme({ children }) {\n    return (\n        <ThemeProvider theme={themeLight}>\n            <CssBaseline />\n            {children}\n        </ThemeProvider>\n    );\n}\n\nTheme.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Theme;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const StateContext = React.createContext(undefined);\nexport const DispatchContext = React.createContext(undefined);\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        default:\n            throw new Error(\"State dispatch error\");\n    }\n}\n\nexport const initState = {};\n\nexport default function Global({ children }) {\n    // for state control\n    const [state, dispatch] = React.useReducer(reducer, initState);\n    return (\n        <StateContext.Provider value={state}>\n            <DispatchContext.Provider value={dispatch}>\n                {children}\n            </DispatchContext.Provider>\n        </StateContext.Provider>\n    );\n}\n\nGlobal.propTypes = {\n    children: PropTypes.node,\n};\n","import * as React from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { QueryClientProvider } from \"react-query\";\nimport { queryClient } from \"lib/react-query\";\nimport RouterConfig from \"routes/RouterConfig\";\nimport { Button } from \"@material-ui/core\";\nimport Theme from \"styles/Theme\";\nimport Global from \"stores/Global\";\nimport { MainLayout } from \"components/Layout\";\n\nconst ErrorFallback = () => {\n    return (\n        <div>\n            <h2>Oops, something went wrong :( </h2>\n            <Button\n                onClick={() => window.location.assign(window.location.origin)}\n            >\n                Refresh\n            </Button>\n        </div>\n    );\n};\n\nexport const AppProvider = () => {\n    return (\n        <Theme>\n            <Global>\n                <ErrorBoundary FallbackComponent={ErrorFallback}>\n                    <QueryClientProvider client={queryClient}>\n                        <MainLayout>\n                            <RouterConfig />\n                        </MainLayout>\n                    </QueryClientProvider>\n                </ErrorBoundary>\n            </Global>\n        </Theme>\n    );\n};\n","import React from \"react\";\nimport { AppProvider } from \"./providers/app\";\n\nfunction App() {\n    return <AppProvider />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}